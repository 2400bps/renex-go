{"version":3,"sources":["lib/errors.ts","lib/wallets/web3browser.ts","actions/popup/popupActions.ts","components/Loading.tsx","components/popups/LedgerPopup.tsx","lib/wallets/ledger.tsx","lib/wallets/privateKey.tsx","lib/wallets/trezor.tsx","lib/wallets/wallet.ts","lib/network.ts","lib/wallets/keystore.tsx","components/popups/KeystorePopup.tsx","lib/web3.ts","lib/conversion.ts","actions/alert/alertActions.ts","lib/market.ts","lib/record.ts","reducers/types.ts","actions/alert/pendingAlertActions.ts","components/popups/ApprovalPopup.tsx","reducers/typesSdk.ts","actions/trader/balanceActions.ts","actions/balances/balancesActions.ts","actions/inputs/inputsActions.ts","actions/orderbook/traderBookActions.ts","actions/trader/walletActions.ts","actions/trader/migrationActions.ts","components/popups/SigningPopup.tsx","actions/settlement/atomicActions.tsx","components/AtomicNotice.tsx","components/Console.tsx","components/TradeTokenBanner.tsx","components/popups/OpenOrderPopup.tsx","actions/trader/orderActions.ts","components/InfoLabel.tsx","components/SubmittedTradesTable.tsx","components/ViewBalancesTable.tsx","components/popups/MigrationPopup.tsx","lib/history.ts","actions/trader/accountActions.ts","components/Alerts.tsx","actions/market/marketActions.ts","actions/orderbook/hiddenBookActions.ts","actions/sdk/sdkActions.ts","components/BackgroundTasks.tsx","components/ErrorBoundary.tsx","components/BalanceBanner.tsx","components/Heading.tsx","components/BalanceHistory.tsx","components/Blocky.tsx","components/Header.tsx","components/MarketBanner.tsx","components/ViewAtomicBalances.tsx","components/ViewBalances.tsx","components/pages/Balances.tsx","components/SubmittedTrades.tsx","components/ExecutedTrades.tsx","components/HiddenOrderbook.tsx","lib/balances.ts","components/NewOrderInputField.tsx","components/NewOrderInputForm.tsx","components/NewOrderInputs.tsx","components/Select.tsx","components/SelectMarket.tsx","components/WrapBitcoin.tsx","components/NewOrder.tsx","components/pages/Exchange.tsx","components/popups/SelectWeb3Account.tsx","components/popups/VerificationPopup.tsx","components/WalletItem.tsx","components/Wallets.tsx","components/pages/Home.tsx","components/pages/LoggingOut.tsx","components/pages/Orders.tsx","components/Popup.tsx","actions/trader/termsActions.ts","components/popups/TermsPopup.tsx","components/App.tsx","reducers/rootReducer.ts","reducers/alert/alertReducer.ts","reducers/balances/balancesReducer.ts","reducers/orderbook/hiddenBookReducer.ts","reducers/inputs/inputsReducer.ts","reducers/market/marketReducer.ts","reducers/popup/popupReducer.ts","reducers/orderbook/traderBookReducer.ts","reducers/trader/traderReducer.ts","reducers/sdk/sdkReducer.ts","store/persistConfig.ts","store/configureStore.ts","index.tsx","tokens sync /^/.//.*$","tokens/btc.svg","tokens/dgx.svg","tokens/eth.svg","tokens/omg.svg","tokens/ren.svg","tokens/tusd.svg","tokens/wbtc.png","tokens/wbtc.svg","tokens/zrx.svg"],"names":["_captureException_","error","details","Sentry","scope","category","setTag","level","setLevel","Object","keys","forEach","key","setExtra","response","data","console","environment","window","NETWORK","network","concat","message","_captureBackgroundException_","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_captureInteractionException_","_captureComponentException_","errorInfo","description","getInjectedWeb3Provider","_ref","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","ethereum","enable","abrupt","t0","Error","web3","currentProvider","stop","this","apply","arguments","MetaMask","name","slug","enabled","getWeb3Provider","_getWeb3Provider","_callee2","provider","_context2","sent","__webpack_require__","d","__webpack_exports__","setPopup","clearPopup","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","createStandardAction","Loading","react__WEBPACK_IMPORTED_MODULE_0__","props","alt","className","derivationRegex","RegExp","options","value","label","LedgerPopup","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","validatePath","test","handleChange","derivation","setState","handleUnlock","asyncToGenerator","regenerator_default","e","_this$props","checkConnection","resolve","_value","preventDefault","state","loading","t1","t2","match","shownToUser","_x","inherits","createClass","_this$state","react","onSubmit","react_select_esm","onChange","isValidNewOption","type","React","createProvider","engine","ProviderEngine","newDerivation","slice","ledger","createLedgerSubprovider","TransportU2F","create","networkId","networkData","ethNetworkId","accountsLength","path","addProvider","NonceSubprovider","FetchSubprovider","rpcUrl","INFURA_URL","start","args","accounts","getAccounts","Web3","length","Ledger","_callee3","address","uuid","_context3","Symbol","PopupPromise","_ref2","reject","store","dispatch","popup","LedgerPopup_LedgerPopup","onCancel","ErrorCanceledByUser","_x3","_x4","_x2","PrivateKey","getReadOnlyProvider","Trezor","Wallet","ErrorVerificationFailed","WalletList","List","Keystore","fn","Promise","reason","WalletDetails","Map","set","infix","infura","INFURA_KEY","keystore","password","version","wallet","privateKey","walletProvider","_ref3","innerResolve","react__WEBPACK_IMPORTED_MODULE_3__","_components_popups_KeystorePopup__WEBPACK_IMPORTED_MODULE_9__","Crypto","crypto","parseInt","ethereumjsWallet","Buffer","warn","getAddressesString","getAddress","toString","WalletSubprovider","KeystorePopup","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","handleInput","event","element","target","current","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","handleUpload","files","f","reader","FileReader","onload","eInner","JSON","parse","result","readAsText","undefined","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_home_noah_github_go_src_github_com_republicprotocol_renex_go_modules_renex_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_7__","placeholder","_components_Loading__WEBPACK_IMPORTED_MODULE_8__","eth","getNetwork","net","getNetworkType","includesAddress","addressIn","toLowerCase","then","map","acc","includes","TimeMagnitude","setAlert","clearAlert","naturalTime","expiry","diff","days","countDown","moment","duration","unix","asDays","hours","asHours","minutes","asMinutes","seconds","asSeconds","suffix","Math","round","showingSeconds","floor","sleep","ms","setTimeout","Pair","getTimeMagnitude","isBefore","Day","Hour","Minute","Second","getStep","step","isZero","BigNumber","toFixed","digits","log10","_significantDigits","n","simplify","roundDown","isEqualTo","c","exp","toNumber","pow","exponentiatedBy","div","ceil","significantDigits","slicedToArray","times","getPriceStep","price","getVolumeStep","volume","Pairs","OrderedMap","ETH_BTC","code","orderSettlement","OrderSettlement","RenExAtomic","quoteToken","Token","BTC","baseToken","ETH","WBTC_BTC","WBTC","fixedPrice","REN_BTC","REN","TUSD_BTC","TUSD","REN_ETH","DGX_ETH","DGX","TUSD_ETH","ZRX_ETH","ZRX","OMG_ETH","OMG","TokenDetails","UnknownToken","symbol","icon","pairs","cmcID","coingeckoID","settlements","offChain","RenEx","tokens","getPrice","quoteCode","baseCode","quoteDetails","baseDetails","url","percentChange","get","fetch","json","market_data","current_price","price_change_percentage_24h_in_currency","RenExTokens","filter","token","indexOf","toList","RenExAtomicTokens","Record","_Immutable$Record","_class","inner","Immutable","esm_get","prototype","InputsData","_Record","market","orderInputs","side","OrderSide","BUY","pricepoint","minVolume","HiddenBookData","_Record2","hiddenOrders","TraderBookData","_Record3","traderOrders","cancelling","BalanceHistory","_Record4","updateIndex","balanceHistory","TraderData","_Record5","stringify","agreedToTerms","seenMigrationMap","str","atomicBalances","usableAtomicBalances","atomicAddresses","atomConnectionStatus","AtomicConnectionStatus","NotConnected","legacyBalances","accountLegacyBalances","usableLegacyBalances","noLegacyBalances","noLegacyOrders","sdk","RenExSDK","providers","HttpProvider","AlertType","LabelLevel","SDKData","_Record6","supportedTokens","supportedAtomicTokens","supportedMarkets","minEthTradeVolume","darknodeFeePercent","wrappingFeePercent","UnknownMarketPrice","MarketPriceData","_Record7","marketPrices","Alert","_Record8","alertType","Warning","AlertData","_Record9","pendingAlerts","alert","PopupData","_Record10","stack","addPendingAlert","removePendingAlerts","ApprovalPopup","_isMounted","logCount","catch","errorMessage","_this2","closePopup","title","onClick","newApprovalPopup","onCancelAction","ApprovalPopup_ApprovalPopup","dismissible","OrderInputsRecord","OrderInputsAllRecord","OrderType","LIMIT","nonce","BN","MatchDetailsRecord","orderID","matchedID","receivedVolume","spentVolume","fee","receivedToken","spentToken","ComputedOrderDetailsRecord","spendToken","receiveToken","receiveVolume","spendVolume","date","feeAmount","feeToken","SwapOrderRecordDefault","swapServer","id","trader","status","OrderStatus","NOT_SUBMITTED","matchDetails","computedOrderDetails","transactionHash","SwapOrderRecord","WBTCOrderRecordDefault","WBTCOrderRecord","BalanceActionRecord","action","BalanceActionType","Withdraw","amount","time","TransactionStatus","Pending","txHash","traderOrderToRecord","traderOrder","updateLegacyBalance","updateLegacyBalances","updateUsableLegacyBalances","updateUsableLegacyBalance","updateAccountLegacyBalance","updateAccountLegacyBalances","updateAtomicBalances","updateAtomicAddresses","updateUsableAtomicBalances","withdraw","balances","usableBalances","currencyCode","callback","amountBigNumber","balance","parseFloat","lte","gt","close","transactionCall","awaitConfirmation","withdrawResult","balanceAction","promiEvent","balanceActionRecord","on","once","storeBalanceActions","getLegacyBalances","updateBalancesHistory","checkAll","valueSeq","toArray","balanceActionStatus","fetchBalanceActionStatus","Replaced","Done","tokenDetails","Deposit","Success","method","_ref4","_callee4","accountBalances","allTokenBalances","_context4","fetchSupportedTokens","fetchBalances","free","total","nondeposited","tokenBalance","used","plus","setNoLegacyBalances","ids","keySeq","pendingAlert","getAtomicBalances","_ref5","_callee5","_context5","swapperd","isConnected","fetchSupportedAtomicTokens","all","fetchAddresses","atomicTokenAddresses","index","tokenBalancesMap","totalBalance","setMarket","setOrder","addOrders","updateOrderStatus","updateOrderCancelling","defaultOrderFilter","checkAllOrders","order","OPEN","CONFIRMED","checkOrderStatuses","legacyOrderCont","toCheck","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_loop","_iterator","_step","_ret","size","setNoLegacyOrders","orderStatus","v","fetchOrderStatus","SETTLED","fetchMatchDetails","t3","t4","iterator","done","delegateYield","return","finish","storeWallet","seenMigration","SigningPopup","callSign","sign","signing","_componentDidMount","item","updateAtomConnectionStatus","refreshAtomConnectionStatus","refreshStatus","authorizeSwapper","swapperID","getID","authorize","SigningPopup_SigningPopup","AtomicNoticeClass","retryAuthorize","handleLinkAtom","actions","retryConnect","resetStatus","atomAction","linkError","linkPending","reconnect","disabled","href","NotAuthorized","AtomNotAuthorized","ChangedSwapper","InvalidSwapper","ConnectedLocked","ConnectedUnlocked","AtomicNotice","connect","bindActionCreators","NUMERATOR","DENOMINATOR","OFFSET","Console","bottomElement","render","enhanced","role","onClickHandler","logs","ref","updateBottomElement","componentDidMount","scrollToBottom","componentWillReceiveProps","forceUpdate","scrollIntoView","behavior","_event","TradeTokenBanner","leftArrow","spendTokenIcon","require","receiveTokenIcon","src","OpenOrderPopupClass","renderConfirm","feePercent","_symbol$split","split","_symbol$split2","spendTokenDetails","receiveTokenDetails","baseTokenDetails","quoteTokenDetails","baseVolume","minBaseVolume","quoteVolume","feeVolume","minus","feeTokenDetails","TradeTokenBanner_TradeTokenBanner","onConfirm","renderOpening","Console_Console","simpleConsole","confirmed","log","push","skipConfirm","OpenOrderPopup","newOpenOrderPopup","openOrder","minimumVolume","orderType","onSuccess","onError","marketPair","pricepointBN","volumeBN","minimumVolumeBN","openOrderCall","onDismiss","openOrderResult","errors","UserRejectedSwap","cancelOrder","_callee8","_context8","orderCancelling","cancelOrderCall","_ref6","_callee7","_ref7","_context7","CANCELED","_ref9","_callee6","_context6","_x5","InfoLabel","onMouseEnter","_event$currentTarget$","currentTarget","getBoundingClientRect","top","left","width","height","children","iconType","Info","style","SubmittedTradesTableClass","context","timeout","rerender","highlightLatest","receivedOrders","relevantRows","nextProps","clearTimeout","_this3","amountToShow","magnitude","reduce","val","min","generateRows","colSpan","_this4","_this$props2","atomConnected","reverse","spendDetails","receiveDetails","fstSymbol","SELL","sndSymbol","receive","spend","priceFixed","format","FAILED_TO_SETTLE","SLASHED","renderOrderStatus","InfoLabel_InfoLabel","handleCancel","bind","SubmittedTradesTable","traderBook","ViewBalancesTableClass","pendingWithdrawal","currency","withdrawAmount","onDone","withdrawing","_unused","balanceHistorySize","list","_TokenDetails$get","usableBalance","link","lockedBalance","lockedBalanceRender","readableUsableBalanceText","image","TOKEN_URL","etherscan","rel","ViewBalancesTable","orderFilter","MigrationPopupClass","renderWelcome","renderAtomicNotice","showLater","previous","renderCancelOrders","renderWithdraw","renderClose","renderLoading","pages","pageList","page","MigrationPopup","newMigrationPopup","onDoneAction","history","createBrowserHistory","storeAddress","storeURL","logout","updateProvider","setAddress","reload","location","replace","login","web3Provider","ethNetwork","setUser","fetchTraderOrders","fetchBalanceActions","balanceActions","redirect","lookForLogout","getWeb3","account","join","AlertsClass","DEFAULT_TIME","alertIntervalTimeout","handleClose","clearInterval","Alerts","updatePrices","setHiddenOrders","getHiddenOrders","fetchOrderbook","limit","storeSDK","storeSDKData","BackgroundTasksClass","setupLoopsTimeout","callGetLegacyBalancesTimeout","callHiddenOrdersTimeout","callUpdatePricesTimeout","callLookForLogoutTimeout","callConnectToAtomTimeout","callUpdateAtomStatusTimeout","callGetAtomicBalancesTimeout","callCheckOrderStatusesTimeout","callCheckRenExExecutionTimeout","callUpdateBalancesHistoryTimeout","setupLoops","callLookForLogout","callGetLegacyBalances","callUpdateAtomStatus","delay","callGetAtomicBalances","callHiddenOrders","callUpdateBalancesHistory","count","_this$props3","newCount","callUpdatePrices","_ref8","pair","_ref10","callCheckOrderStatuses","_ref11","_callee10","_this$props4","_context10","_callee9","_context9","_callee11","_ref14","_ref15","_context11","fetchDarknodeFeePercent","fetchWrappingFeePercent","fetchMinEthTradeVolume","fetchMarkets","BackgroundTasks","ErrorBoundary","componentDidCatch","reportFeedback","whiteSpace","componentStack","_catch_","ErrorBoundary_ErrorBoundary","BalanceBannerClass","atomic","atomicTokens","listBalances","balanceText","err","BalanceBanner","inputs","Heading","BalanceHistoryClass","highlightTimeout","datesRerenderTimeout","receivedBalances","Heading_Heading","rows","TX_URL","readableAmount","currentMoment","actionType","charAt","toUpperCase","Failed","blockies","randSeed","rand","t","createColor","h","s","l","buildOpts","opts","newOpts","scale","seed","random","i","charCodeAt","seedRand","color","bgColor","spotColor","renderIcon","optsIn","canvas","imageData","dataWidth","mirrorWidth","y","row","x","r","rowItem","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","document","createElement","Blocky","blocky","getOpts","setCanvas","data-tip","HeaderClass","showDropdown","dropdownVisible","copied","hideDropdown","copyToClipboard","childNodes","getAttribute","dummy","body","appendChild","setAttribute","select","execCommand","removeChild","handleLogOut","withMenu","pathname","loggedIn","Link","to","onMouseLeave","Blocky_Blocky","data-addr","substring","Header","withRouter","MarketBannerClass","listPairs","pairDetails","marketPrice","fstDetails","sndDetails","updateMarket","MarketBanner","ViewAtomicBalancesClass","balanceReadable","usable","usableReadable","ViewAtomicBalances","ViewBalancesClass","ViewBalances","_state","Balances","BalanceHistory_BalanceHistory","SubmittedTradesClass","recent","SubmittedTrades","ExecutedTradesClass","executedOrders","receivedTokenDetails","spentTokenDetails","receiveAmountReadable","paidAmountReadable","ExecutedTrades","HiddenOrderStatusDisplay","_HiddenOrderStatusDis","defineProperty","HiddenOrderbookClass","HiddenOrderbook","hiddenBook","removeExcessDigits","readableIn","readable","integerValue","ROUND_FLOOR","readableToBalance","balanceIn","balanceBN","balanceToReadable","NewOrderInputField","_this$props$form","form","dirty","ticker","hint","handleBlur","notice","_this$props$field","field","onBlur","objectWithoutProperties","react_default","assign","calculateStep","stepFunction","Component","NewOrderInputFormClass","preRender","values","settlementType","marketDetails","priorityTokenDetails","nonPriorityTokenDetails","sellAmount","priorityVolume","buyAmount","pricepointRender","initialMarketPrice","Fragment","prioritySymbol","NewOrderInputField_NewOrderInputField","setAndUpdateValues","volumeRender","fillVolume","renderMinVolume","allOrNothing","renderPriorityVolume","_this$state2","nonPriorityVolume","_this$props5","priorityToken","nonPriorityToken","_e$target","_e$target2","_this$props6","setValues","calculateNewState","_this$props7","validateForm","marketChanged","initialMarketPriceChanged","pricepointBigNumber","absoluteMinVolume","calculateAbsoluteMinTradeVolume","_this$props9","isSubmitting","isValid","_this$state3","formik_esm","oldState","valueIn","newState","objectSpread","_newState","_this$props10","_sdk$utils","utils","normalizePrice","normalizeVolume","volumeBigNumber","minVolumeBigNumber","lt","max","blur","_this$props11","coerceValues","NewOrderInputForm","OuterForm","handleSubmit","formikBag","setSubmitting","resetForm","immediateOrCancel","fillOrKill","LIMIT_IOC","validate","minEthereumTradeVolume","sellToken","whichVolume","sellBalance","sellVolume","sellTokenDetails","priorityVolumeBigNumber","nonPriorityDetails","volumeString","handleMoreOptions","checked","dividedBy","multipliedBy","showMoreOptions","defaultMarketPrice","initialValues","NewOrderInputs","CustomControl","cx","getStyles","isDisabled","isFocused","innerRef","innerProps","menuIsOpen","css","control","control--is-disabled","control--is-focused","control--menu-is-open","CustomValue","option","filename","single-value","single-value--is-disabled","CustomOption","isSelected","option--is-disabled","option--is-focused","option--is-selected","SelectMarketClass","listCurrencies","Array","from","Set","first","fstCode","_TokenDetails$get2","sndCode","leftCurrencies","rightCurrencies","find","components","SingleValue","Option","Control","isClearable","backspaceRemovesValue","SelectMarket","WrapBitcoinClass","enableWrap","disableWrap","checkDisable","inputValue","swap","unwrap","wbtcOrder","btcTokenDetails","wbtcTokenDetails","isNaN","isFinite","spendBalance","WrapBitcoin","NewOrderClass","newOrder","settlement","NewOrder","ExchangeClass","params","Exchange","SelectWeb3AccountClass","referrer","attemptVerification","onSelectAccount","selectedAccountIndex","Axios","post","ingress","verified","data-item","SelectWeb3Account","VerificationPopupClass","handler","openWyreHandler","open","Wyre","Widget","accountId","WYRE_KEY","auth","operation","onExit","callbackURL","protocol","host","KYBER_KEY","VerificationPopup","WalletItemClass","handleSelectWallet","walletDetails","providerAccounts","cancel","canceled","ethNetworkLabel","getParameterByName","WalletItem","WalletsClass","listWallets","Wallets","fixedName","results","exec","decodeURIComponent","HomeClass","checkingVerification","kyberVerification","kyberUID","handleForwardLogin","es_Redirect","authCode","redirectURL","request","grant_type","redirect_uri","client_id","uid","lowerCaseAddresses","active_wallets","kyc_status","Home","LoggingOut","Orders","PopupClass","_this$props$popups$la","popups","last","popupDetails","Popup","agreeToTerms","TermsPopupClass","handleScroll","scrollHeight","scrollTop","clientHeight","scrollBottom","handleAgreement","onScroll","TermsPopup","newTermsPopup","ScrollToTop","ScrollToTopWithoutRouter","prevProps","scrollTo","AppClass","withAccount","component","checkingReLogin","LoggingOut_LoggingOut","Redirect","handleReLogin","Router","Route","exact","App","rootReducer","combineReducers","getType","alertActions","payload","pendingAlertActions","_action$payload","alertID","delete","balancesActions","hiddenBookActions","inputsActions","marketActions","popupActions","documentElement","classList","add","stackItem","newStack","remove","traderBookActions","toAdd","accountActions","accountBalance","atomicActions","termsActions","migrationActions","walletActions","sdkActions","assert","traderTransform","createTransform","inboundState","serialize","outboundState","deserialize","whitelist","persistConfig","storage","transforms","middlewares","thunk","config","reducer","persistedReducer","persistReducer","createStore","applyMiddleware","dsn","SENTRY_DSN","release","RENEX_VERSION","ReactDOM","es","integration_react","persistor","persistStore","getElementById","./btc.svg","./dgx.svg","./eth.svg","./omg.svg","./ren.svg","./tusd.svg","./wbtc.png","./wbtc.svg","./zrx.svg","webpackContext","req","webpackContextResolve","module","exports","p"],"mappings":"6MAkBMA,EAAqB,SAAoBC,EAAYC,GACvDC,YAAiB,SAAAC,GAETF,EAAQG,UACRD,EAAME,OAAO,WAAYJ,EAAQG,UAIjCH,EAAQK,OACRH,EAAMI,SAASN,EAAQK,OAI3BE,OAAOC,KAAKR,GACPS,QAAQ,SAAAC,GACLR,EAAMS,SAASD,EAAKV,EAAQU,MAIhCX,GAASA,EAAMa,UAAYb,EAAMa,SAASC,MAC1CX,EAAMS,SAAS,iBAAkBZ,EAAMa,SAASC,MAGpDX,EAAMS,SAAS,UAAU,GAEzBG,QAAQf,MAAMA,GAEd,IAAMgB,EAAmEC,OAAOC,QAAQC,QACpE,YAAhBH,IACqB,kBAAVhB,EAEPA,EAAK,IAAAoB,OAAOJ,EAAP,MAAAI,OAAuBpB,GAE5BA,EAAMqB,QAAN,IAAAD,OAAoBJ,EAApB,MAAAI,OAAoCpB,EAAMqB,SAAWrB,IAI7DE,mBAAwBF,MAKnBsB,EAA+B,SAAgCtB,EAAYC,GACpFF,EAAmBC,EAADQ,OAAAe,EAAA,EAAAf,CAAA,GAAaP,EAAb,CAAsBG,SAAU,2BAIzCoB,EAAgC,SAA8CxB,EAAYC,GACnGF,EAAmBC,EAADQ,OAAAe,EAAA,EAAAf,CAAA,GAAaP,EAAb,CAAsBG,SAAU,4BAIzCqB,EAA8B,SAACzB,EAAY0B,GACpD3B,EAAmBC,EAADQ,OAAAe,EAAA,EAAAf,CAAA,GAAakB,EAAb,CAAwBC,YAAa,6DAA8DvB,SAAU,uJChEtHwB,EAAuB,eAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAC/BrB,OAAOsB,SADwB,CAAAH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGrBrB,OAAOsB,SAASC,SAHK,cAAAJ,EAAAK,OAAA,SAIpBxB,OAAOsB,UAJa,aAAAH,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAMrB,IAAIO,MARc,qDAEG,QAAAP,EAAAE,KAAA,qBAQxBrB,OAAO2B,KARiB,CAAAR,EAAAE,KAAA,gBAAAF,EAAAK,OAAA,SASxBxB,OAAO2B,KAAKC,iBATY,cAW7B,IAAIF,MAdU,6CAGe,yBAAAP,EAAAU,SAAAZ,EAAAa,KAAA,YAAH,yBAAAlB,EAAAmB,MAAAD,KAAAE,YAAA,GAcvBC,EAAyB,CAClCC,KAAM,WACNC,KAAM,WACNzB,YAAa,yDACb0B,SAAS,EACTC,gBAAe,eAAAC,EAAA/C,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAE,SAAAuB,IAAA,IAAAC,EAAA,OAAA1B,EAAAC,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACUV,IADV,cACP6B,EADOC,EAAAC,KAAAD,EAAAjB,OAAA,SAEN,CAACgB,EAAU,OAFL,wBAAAC,EAAAZ,SAAAU,EAAAT,SAAF,yBAAAQ,EAAAP,MAAAD,KAAAE,YAAA,qCC1BnBW,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAGaG,EAAWG,+BAAqB,YAArBA,GAEXF,EAAaE,+BAAqB,cAArBA,oCCL1BN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,GAKaO,EAA2C,SAACE,GAAiB,IAC9DC,EAAQD,EAARC,IACR,OACIF,EAAA,qBAAKG,UAAS,yBAAAnD,OAA2BkD,EAAM,MAAQ,yRCoBzDE,EAAkB,IAAIC,OAAO,0CAE7BC,EAAwB,CAC1B,CAAEC,MAAO,iBAAkBC,MAAO,uCAElC,CAAED,MAAO,gBAAiBC,MAAO,4BAOxBC,EAAb,SAAAC,GACI,SAAAD,EAAYR,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA8B,IACtBE,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAqE,GAAAM,KAAApC,KAAMsB,KAmDOe,aAAe,SAACT,GAC7B,OAAOH,EAAgBa,KAAKV,IArDNI,EAyDTO,aAAe,SAACC,GAC7BR,EAAKS,SAAS,CAAED,gBA1DMR,EA6DTU,aA7DS,eAAA5D,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KA6DM,SAAAC,EAAO0D,GAAP,IAAAC,EAAAC,EAAAC,EAAAR,EAAAS,EAAA,OAAAL,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC5BsD,EAAEK,iBAD0BJ,EAGSd,EAAKV,MAAlCyB,EAHoBD,EAGpBC,gBAAiBC,EAHGF,EAGHE,QACjBR,EAAeR,EAAKmB,MAApBX,WAERR,EAAKS,SAAS,CAAEW,SAAS,IANG/D,EAAAC,KAAA,EASlBsC,EAAQY,EAAWZ,MATD,CAAAvC,EAAAE,KAAA,cAWd,IAAIK,MAAM,sBAXI,cAAAP,EAAAM,GAaxBqD,EAbwB3D,EAAAE,KAAA,GAaVwD,EAAgB,CAAEP,WAAYZ,IAbpB,QAAAvC,EAAAgE,GAAAhE,EAAAuB,MAAA,EAAAvB,EAAAM,IAAAN,EAAAgE,IAAAhE,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAiE,GAAAjE,EAAA,SAepBA,EAAAiE,GAAMhF,QAAQiF,MAAM,8BACpBlE,EAAAiE,GAAQ,IAAI1D,MAAM,iCAElBnB,YAA6BY,EAAAiE,GAAQ,CACjC1E,YAAa,uCACb4E,YAAa,kCAEjBnE,EAAAiE,GAAQ,IAAI1D,MAAMP,EAAAiE,GAAQjE,EAAAiE,GAAMhF,SAANe,EAAAiE,GAAyB,iCAEvDtB,EAAKS,SAAS,CAAEW,SAAS,EAAOnG,MAAOoC,EAAAiE,GAAMhF,UAxBrBe,EAAAK,OAAA,mCAAAL,EAAAU,SAAAZ,EAAAa,KAAA,aA7DN,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,GAEtB8B,EAAKmB,MAAQ,CACTC,SAAS,EACTnG,MAAO,KACPuF,WAAYb,EAAQ,IALFK,EAD9B,OAAAvE,OAAAiG,EAAA,EAAAjG,CAAAqE,EAAAC,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAAqE,EAAA,EAAAlE,IAAA,oBAAAgE,MAAA,eAAAhE,IAAA,SAAAgE,MAAA,WAkBqC,IAAAgC,EACF5D,KAAKmD,MAAxBlG,EADqB2G,EACrB3G,MAAOmG,EADcQ,EACdR,QAGf,OACIS,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,yBACIA,EAAA,oDAEAA,EAAA,qBAAKrC,UAAU,wBACXqC,EAAA,gFACAA,EAAA,wBACIA,EAAA,8DACAA,EAAA,iEACAA,EAAA,8DAIG,OAAV5G,EAAiB4G,EAAA,mBAAGrC,UAAU,OAAOvE,GAAa,KACnD4G,EAAA,sBAAMC,SAAU9D,KAAK0C,cAEjBmB,EAAA,cAACE,EAAA,EAAD,CACInC,MAAO5B,KAAKmD,MAAMX,WAClBwB,SAAUhE,KAAKuC,aACfZ,QAASA,EACTsC,iBAAkBjE,KAAKqC,eAG3BwB,EAAA,wBAAQK,KAAK,WAAsB,IAAZd,EAAmBS,EAAA,cAACzC,EAAA,EAAD,MAAc,kBA9ChFU,EAAA,CAAiCqC,qBCL3BC,EAAiB,SAAC5B,GACpB,IAAM6B,EAAyB,IAAIC,IAG/BC,EAAgB/B,EAGc,OAA9B+B,EAAcC,MAAM,EAAG,KACvBD,EAAgBA,EAAcC,MAAM,IAGxC,IAAMC,EAASC,IATM,kBAAMC,IAAaC,UASa,CACjDC,UAAWC,IAAYC,aACvBC,eAAgB,EAChBC,KAAMV,IAOV,OALAF,EAAOa,YAAYT,GACnBJ,EAAOa,YAAY,IAAIC,KACvBd,EAAOa,YAAY,IAAIE,IAAiB,CAAEC,OAAQC,OAClDjB,EAAOkB,QAEAlB,GAGLtB,EAAe,eAAAjE,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAC,EAAOqG,GAAP,IAAAnB,EAAAoB,EAAA,OAAA7C,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAMd8E,EAASD,EAAeoB,EAAKhD,YANfnD,EAAAE,KAAA,EAOGmG,YAAY,IAAIC,IAAKtB,IAPxB,WAOdoB,EAPcpG,EAAAuB,OAQiB,IAApB6E,EAASG,OARN,CAAAvG,EAAAE,KAAA,cASV,IAAIK,MAAM,4BATA,cAAAP,EAAAK,OAAA,SAYb,CAAC2E,EAAQoB,IAZI,wBAAApG,EAAAU,SAAAZ,EAAAa,SAAH,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,GAeR2F,EAAuB,CAChCzF,KAAM,SACNC,KAAM,SACNzB,YAAa,4CACb0B,SAAS,EAETC,gBAAe,eAAAC,EAAA/C,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAE,SAAA4G,EAAOC,GAAP,IAAAC,EAAA,OAAApD,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACPyG,EAAOE,SADAD,EAAAvG,OAAA,SAENyG,EAA0CH,EAA9B,eAAAI,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAoC,SAAAuB,EAAOuC,EAASqD,GAAhB,OAAAzD,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACnD+G,QAAMC,SAASvF,YACX,CACIgF,OACAQ,MAAO3C,EAAA,cAAC4C,EAAD,CAAazD,QAASA,EAASqD,OAAQA,EAAQN,QAASA,EAAShD,gBAAiBA,IACzF2D,SAAU,WAAQL,EAAO,IAAIzG,MAAM+G,QALQ,wBAAAhG,EAAAZ,SAAAU,EAAAT,SAApC,gBAAA4G,EAAAC,GAAA,OAAAT,EAAAnG,MAAAD,KAAAE,YAAA,KAFN,wBAAA+F,EAAAlG,SAAA+F,EAAA9F,SAAF,gBAAA8G,GAAA,OAAAtG,EAAAP,MAAAD,KAAAE,YAAA,IC9EN6G,EAA2B,CACpC3G,KAAM,cACNC,KAAM,MACNzB,YAAa,GACb0B,SAAS,EACTC,gBAAiB,iBAAM,CAACyG,IAAuB,QCJtCC,EAAuB,CAChC7G,KAAM,SACNC,KAAM,SACNzB,YAAa,kCACb0B,SAAS,EACTC,gBAAiB,iBAAM,CAACyG,IAAuB,iPCO5C,IAGKE,EAHCP,EAAsB,uBACtBQ,EAA0B,uCAE3BD,kJASL,IAAME,EAAaC,YAAK,CAACH,EAAO/G,SAAU+G,EAAOrB,OAAQqB,EAAOI,SAAUJ,EAAOD,OAAQC,EAAOH,aAU1FC,EAAsB,WAC/B,IAAM3C,EAAS,IAAIC,IAInB,OAHAD,EAAOa,YAAY,IAAIE,IAAiB,CAAEC,OAAQC,OAClDjB,EAAOkB,QAEAlB,GAGE8B,EAAY,eAAArH,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAC,EAAU6G,EAAcuB,GAAxB,OAAA3E,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAK,OAAA,SACjB,IAAI8H,QAAQ,SAACxE,EAASqD,GAUzBkB,EAJ2D,SAACE,GACxDnB,QAAMC,SAAStF,YAAW,CAAC+E,UAC3BhD,EAAQyE,IANkC,SAACA,GAC3CnB,QAAMC,SAAStF,YAAW,CAAC+E,UAC3BK,EAAOoB,QALS,wBAAApI,EAAAU,SAAAZ,EAAAa,SAAH,gBAAAyD,EAAAqD,GAAA,OAAAhI,EAAAmB,MAAAD,KAAAE,YAAA,GAeZwH,EAA2CC,cACnDC,IAAIV,EAAO/G,SAAUA,KACrByH,IAAIV,EAAOrB,OAAQA,GACnB+B,IAAIV,EAAOI,SAAUA,KACrBM,IAAIV,EAAOD,OAAQA,GACnBW,IAAIV,EAAOH,WAAYA,oCC/D5BlG,EAAAC,EAAAC,EAAA,sBAAA+D,IAAAjE,EAAAC,EAAAC,EAAA,sBAAAuE,IAAO,IAAMR,EAA2B5G,OAAOC,QAEzC0J,EAA8D,MAAtD/C,EAAYgD,OAAOhD,EAAYgD,OAAOlC,OAAS,GAAa,GAAK,IAClEN,EAAU,GAAAjH,OAAMyG,EAAYgD,QAAlBzJ,OAA2BwJ,GAA3BxJ,OAAmCH,OAAO6J,qPCepDT,EAAyB,CAClClH,KAAM,gBACNC,KAAM,WACNzB,YAAa,qCACb0B,SAAS,EAETC,gBAAe,eAAAC,EAAA/C,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAE,SAAA4G,EAAOC,GAAP,IAAAC,EAAA,OAAAhH,EAAAC,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACPyG,EAAOE,SADAD,EAAAvG,OAAA,SAGNyG,YAA0CH,EAA9B,eAAAlH,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAoC,SAAAuB,EAAOuC,EAASqD,GAAhB,IAAAD,EAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhE,EAAA,OAAArF,EAAAC,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAGd,IAAIiI,QAAJ,eAAAc,EAAA7K,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAY,SAAAC,EAAOoJ,GAAP,OAAAvJ,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7C+G,QAAMC,SAASvF,YACX,CACIgF,OACAQ,MAAOgC,EAAA,cAACC,EAAA,EAAD,CAAezF,QAASuF,EAAclC,OAAQA,EAAQN,QAASA,IACtEW,SAAU,WAAQL,EAAO,IAAIzG,MAAM+G,UALE,wBAAAtH,EAAAU,SAAAZ,EAAAa,SAAZ,gBAAA6G,GAAA,OAAAyB,EAAArI,MAAAD,KAAAE,YAAA,IAHc,UAAAkG,EAAAzF,EAAAC,KAG3CoH,EAH2C5B,EAG3C4B,SAAUC,EAHiC7B,EAGjC6B,SAUdD,EAASU,SAAWV,EAASW,SAC7BX,EAASW,OAASX,EAASU,QAGzBR,EAAUU,SAASZ,EAASE,QAAS,IAjBQvH,EAAArB,KAAA,EAsB/B,IAAZ4I,EAtB2C,CAAAvH,EAAApB,KAAA,SAuB3C4I,EAASU,SAAwBb,EAAUC,GAvBAtH,EAAApB,KAAA,oBAwBxB,IAAZ2I,EAxBoC,CAAAvH,EAAApB,KAAA,SAyB3C4I,EAASU,SAAwBb,EAAUC,GAzBAtH,EAAApB,KAAA,qBA0BpCyI,EAASI,WA1B2B,CAAAzH,EAAApB,KAAA,SA4BZ,QAD3B6I,EAAaJ,EAASI,YACX5D,MAAM,EAAG,KACpB4D,EAAaA,EAAW5D,MAAM,IAElC2D,EAASU,iBAAgC,IAAIC,EAAOV,EAAY,QA/BrBzH,EAAApB,KAAA,uBAiCrC,IAAIK,MA7CG,+BAY8B,WAoC1CuI,EApC0C,CAAAxH,EAAApB,KAAA,eAqCrC,IAAIK,MAlDF,4CAamC,QAAAe,EAAApB,KAAA,wBAAAoB,EAAArB,KAAA,GAAAqB,EAAAhB,GAAAgB,EAAA,SAwC/C3C,QAAQ+K,KAARpI,EAAAhB,IACsB,oBAAlBgB,EAAAhB,GAAMrB,SACY,oBAAlBqC,EAAAhB,GAAMrB,QACN+H,EAAO,IAAIzG,MAvDE,gEAwDNe,EAAAhB,GAAMrB,QACb+H,EAAM1F,EAAAhB,IA1DE,6CA2DDgB,EAAAhB,GAAMrB,QACb+H,EAAM1F,EAAAhB,IAEN0G,EAAO,IAAIzG,MA5DD,0DAWiCe,EAAAjB,OAAA,kBAuDnDyI,EAAOa,mBAAsB,sBAAA3K,OACzB8J,EACKc,aACAC,SAAS,SAIZb,EAAiB,IAAIc,IAAkBhB,EAAQ,KAE/C9D,EAAS,IAAIC,KACZY,YAAYmD,GACnBhE,EAAOa,YAAY,IAAIC,KACvBd,EAAOa,YAAY,IAAIE,IAAiB,CAAEC,OAAQC,OAClDjB,EAAOkB,QACPvC,EAAQ,CAACqB,EAAQ,OArEkC,yBAAA1D,EAAAZ,SAAAU,EAAAT,KAAA,aAApC,gBAAA8G,EAAAF,GAAA,OAAA9H,EAAAmB,MAAAD,KAAAE,YAAA,KAHN,wBAAA+F,EAAAlG,SAAA+F,EAAA9F,SAAF,gBAAAyD,GAAA,OAAAjD,EAAAP,MAAAD,KAAAE,YAAA,uKClBNkJ,EAAb,SAAArH,GACI,SAAAqH,EAAY9H,GAAc,IAAAU,EAAA,OAAAvE,OAAA4L,EAAA,EAAA5L,CAAAuC,KAAAoJ,IACtBpH,EAAAvE,OAAA6L,EAAA,EAAA7L,CAAAuC,KAAAvC,OAAA8L,EAAA,EAAA9L,CAAA2L,GAAAhH,KAAApC,KAAMsB,KA+COkI,YAAc,SAACC,GAC5B,IAAMC,EAAWD,EAAME,OACvB3H,EAAKS,SAAS,SAACmH,GAAD,OAAAnM,OAAAoM,EAAA,EAAApM,CAAA,GAAmBmM,EAAnBnM,OAAAqM,EAAA,EAAArM,CAAA,GAA6BiM,EAAQtJ,KAAOsJ,EAAQ9H,WAlD5CI,EAqDT+H,aAAe,SAACN,GAC7B,GAA2B,OAAvBA,EAAME,OAAOK,OAAgD,IAA9BP,EAAME,OAAOK,MAAMpE,OAAtD,CAGA,IAAMqE,EAAIR,EAAME,OAAOK,MAAM,GAEvBE,EAAS,IAAIC,WAGnBD,EAAOE,OAEI,SAACC,GAEJ,IAAIzM,EACJ,IACIA,EAAM0M,KAAKC,MAAMF,EAAOV,OAAOa,QACjC,MAAOvN,GAEL,YADA+E,EAAKS,SAAS,CAAExF,MAAO,wCAG3B+E,EAAKS,SAAS,CAAExF,MAAO,KAAM+K,SAAUpK,KAK/CsM,EAAOO,WAAWR,KA9EIjI,EAiFTU,aAAe,SAACG,GAE7B,GADAA,EAAEK,iBACGlB,EAAKmB,MAAM6E,SAAhB,CAKAhG,EAAKS,SAAS,CAAEW,SAAS,IAEzB,IAAM4E,EAAWhG,EAAKmB,MAAM6E,SACtBC,OAA4CyC,IAAxB1I,EAAKmB,MAAM8E,SACjC,GACAjG,EAAKmB,MAAM8E,SAEfjG,EAAKV,MAAM0B,QAAQ,CACfgF,WACAC,kBAbAjK,QAAQf,MAAM,qBAlFlB+E,EAAKmB,MAAQ,CACTlG,MAAO,KACP+K,SAAU,KACV5E,SAAS,EACT6E,SAAU,IANQjG,EAD9B,OAAAvE,OAAAkN,EAAA,EAAAlN,CAAA2L,EAAArH,GAAAtE,OAAAmN,EAAA,EAAAnN,CAAA2L,EAAA,EAAAxL,IAAA,oBAAAgE,MAAA,eAAAhE,IAAA,SAAAgE,MAAA,WAmBqC,IAAAgC,EACQ5D,KAAKmD,MAAlClG,EADqB2G,EACrB3G,MAAOgL,EADcrE,EACdqE,SAAU7E,EADIQ,EACJR,QACjB2C,EAAY/F,KAAKsB,MAAjByE,QAER,OACI8E,EAAA,qBAAKrJ,UAAU,kBACXqJ,EAAA,yBACIA,EAAA,wBACK9E,EAAO,aAAA1H,OACS0H,GACb,sBAGR8E,EAAA,sBAAM/G,SAAU9D,KAAK0C,cACjBmI,EAAA,uBAAO3G,KAAK,OAAO9D,KAAK,UAAU0K,YAAY,SAAS9G,SAAUhE,KAAK+J,eACtEc,EAAA,uBACI3G,KAAK,WACL9D,KAAK,WACL0K,YAAY,sBACZlJ,MAAOqG,EACPjE,SAAUhE,KAAKwJ,cAEnBqB,EAAA,wBAAQ3G,KAAK,WAAsB,IAAZd,EAAmByH,EAAA,cAACE,EAAA,EAAD,MAAc,WAEjD,OAAV9N,EAAiB4N,EAAA,mBAAGrJ,UAAU,OAAOvE,GAAa,WA3CvEmM,EAAA,CAAmCjF,kTCNtBuB,EAAW,eAAA5G,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAG,SAAAC,EAAOU,GAAP,OAAAb,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAK,OAAA,SAChBG,EAAKmL,IAAItF,eADO,wBAAArG,EAAAU,SAAAZ,EAAAa,SAAH,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,GAIX+K,EAAU,eAAA7E,EAAA3I,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAG,SAAAuB,EAAOZ,GAAP,OAAAb,EAAAC,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAjB,OAAA,SAEdG,EAAKmL,IAAIE,IAAYC,kBAFP,wBAAAxK,EAAAZ,SAAAU,EAAAT,SAAH,gBAAA8G,GAAA,OAAAV,EAAAnG,MAAAD,KAAAE,YAAA,GAKVkL,EAAe,eAAA9C,EAAA7K,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAAG,SAAA4G,EAAOjG,EAAYwL,GAAnB,IAAAtF,EAAA,OAAA/G,EAAAC,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACrBwG,EAAUsF,EAAUC,cADCrF,EAAAvG,OAAA,SAEpBgG,EAAY7F,GACd0L,KAAK,SAAC9F,GACH,OAAOA,EAAS+F,IAAI,SAAAC,GAAG,OAAIA,EAAIH,gBAC1BI,SAAS3F,MALK,wBAAAE,EAAAlG,SAAA+F,EAAA9F,SAAH,gBAAA4G,EAAAC,GAAA,OAAAyB,EAAArI,MAAAD,KAAAE,YAAA,+CCwChByL,0LC5CCC,EAAWzK,+BAAqB,YAArBA,GAUX0K,EAAa1K,+BAAqB,cAArBA,4EDJb2K,EAAc,SAACC,EAAgBpK,GACxC,IAAIqK,EAMAC,GAFAD,EAHCrK,EAAQuK,UAGFC,IAAOC,SAASD,IAAOE,KAAKN,GAAQC,KAAKG,QAFzCA,IAAOC,SAASD,MAASH,KAAKG,IAAOE,KAAKN,MAIrCO,SACZC,EAAQP,EAAKQ,UACbC,EAAUT,EAAKU,YACfC,EAAUX,EAAKY,YAEbC,EAASlL,EAAQkL,OAAR,IAAAxO,OAAqBsD,EAAQkL,QAAW,GAEvD,OAAIZ,EAAO,GACPA,EAAOa,KAAKC,MAAMd,GAClB,GAAA5N,OAAU4N,EAAV,KAAA5N,OAA2B,IAAT4N,EAAa,MAAQ,QAAvC5N,OAAgDwO,IAEhDN,GAAS,GAETA,EAAQO,KAAKC,MAAMR,GACnB,GAAAlO,OAAUkO,EAAV,KAAAlO,OAA6B,IAAVkO,EAAc,OAAS,SAA1ClO,OAAoDwO,IAC7CJ,GAAW,GAClBA,EAAUK,KAAKC,MAAMN,GACrB,GAAApO,OAAUoO,EAAV,KAAApO,OAAiC,IAAZoO,EAAgB,SAAW,WAAhDpO,OAA4DwO,IACrDlL,EAAQqL,gBAAkBL,GAAW,GAC5CA,EAAUG,KAAKG,MAAMN,GACrB,GAAAtO,OAAUsO,EAAV,KAAAtO,OAAiC,IAAZsO,EAAgB,SAAW,WAAhDtO,OAA4DwO,IAE5D,GAAAxO,OAAUsD,EAAQrD,UAMb4O,EAAK,eAAApO,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAC,EAAOgO,GAAP,OAAAvK,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAK,OAAA,SAAsB,IAAI8H,QAAQ,SAAAxE,GAAO,OAAIoK,WAAWpK,EAASmK,MAAjE,wBAAA9N,EAAAU,SAAAZ,EAAAa,SAAH,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,aAGNyL,cACC,cADDA,WAEC,cAFDA,SAGD,aAHCA,QAIF,cAJEA,WAQL,IE1CK0B,EF0CCC,EAAmB,SAACvB,GAA0D,IACnFC,EADyCgB,EAA0C9M,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,IAAAA,UAAA,GAOjF+L,GAJFD,EADAG,IAAOE,KAAKN,GAAQwB,SAASpB,OACtBA,IAAOC,SAASD,MAASH,KAAKG,IAAOE,KAAKN,KAE1CI,IAAOC,SAASD,IAAOE,KAAKN,GAAQC,KAAKG,SAElCG,SACZC,EAAQP,EAAKQ,UACbC,EAAUT,EAAKU,YAErB,OAAIT,EAAO,EACAN,EAAc6B,IAErBjB,GAAS,EACFZ,EAAc8B,KACdhB,GAAW,IAAMO,EACjBrB,EAAc+B,OAEd/B,EAAcgC,QAkChBC,EAAU,SAAChM,EAAkBiM,GACtC,GAAIjM,EAAMkM,SACN,OAAO,IAAIC,IAAUF,GAAMG,UAG/B,IAAMC,EAAyC,EAA/BnB,KAAKG,MAAMH,KAAKoB,MAAML,IALyBM,EA9BzC,SAACC,EAAcH,GAAyE,IAAzDI,EAAyDnO,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,IAAAA,UAAA,GAA9BoO,IAA8BpO,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,KAAAA,UAAA,GAC9G,GAAIkO,EAAEG,UAAU,GACZ,MAAO,CAAC,EAAG,GAEf,IAGIC,EAHAC,EAAM3B,KAAKG,MAAMH,KAAKoB,MAAME,EAAEM,cAAgBT,EAAS,GACrDU,EAAM,IAAIZ,IAAU,IAAIa,gBAAgB,IAAIb,IAAUU,GAAKC,YAWjE,GAPIF,EADAF,EACIxB,KAAKG,MAAMmB,EAAES,IAAIF,EAAID,YACpBA,YAED5B,KAAKgC,KAAKV,EAAES,IAAIF,EAAID,YACnBA,YAGLL,EACA,KAAOG,EAAI,KAAO,GAAW,IAANA,GACnBA,GAAQ,GACRC,GAAO,EAGf,MAAO,CAACD,EAAGC,GAeKM,CAAkBnN,EAAOqM,GAAQ,GAAxCQ,EAPsDhR,OAAAuR,EAAA,EAAAvR,CAAA0Q,EAAA,MAQzDtL,EAAI,IAAIkL,IAAU,IAAIY,IAAIF,GAAOR,EAAS,IAChD,OAAO,IAAIF,IAAUF,GAChBoB,MAAMpM,GACNmL,WAGIkB,EAAe,SAACC,GACzB,OAAOvB,EAAQuB,EAAO,OAGbC,EAAgB,SAACC,GAC1B,OAAOzB,EAAQyB,EAAQ,+BElHfhC,ySAaL,IAAMiC,EAAuCC,cAE/C3H,IAAIyF,EAAKmC,QAAS,CACfC,KAAMpC,EAAKmC,QACXE,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMC,IAClBC,UAAWF,QAAMG,IACjB5S,SAAUyS,QAAMC,MAEnBnI,IAAIyF,EAAK6C,SAAU,CAChBT,KAAMpC,EAAK6C,SACXR,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMC,IAClBC,UAAWF,QAAMK,KACjB9S,SAAUyS,QAAMC,IAChBK,WAAY,IAAIrC,IAAU,KAE7BnG,IAAIyF,EAAKgD,QAAS,CACfZ,KAAMpC,EAAKgD,QACXX,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMC,IAClBC,UAAWF,QAAMQ,IACjBjT,SAAUyS,QAAMC,MAEnBnI,IAAIyF,EAAKkD,SAAU,CAChBd,KAAMpC,EAAKkD,SACXb,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMC,IAClBC,UAAWF,QAAMU,KACjBnT,SAAUyS,QAAMC,MAGnBnI,IAAIyF,EAAKoD,QAAS,CACfhB,KAAMpC,EAAKoD,QACXf,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMG,IAClBD,UAAWF,QAAMQ,MAEpB1I,IAAIyF,EAAKqD,QAAS,CACfjB,KAAMpC,EAAKqD,QACXhB,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMG,IAClBD,UAAWF,QAAMa,MAEpB/I,IAAIyF,EAAKuD,SAAU,CAChBnB,KAAMpC,EAAKuD,SACXlB,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMG,IAClBD,UAAWF,QAAMU,OAEpB5I,IAAIyF,EAAKwD,QAAS,CACfpB,KAAMpC,EAAKwD,QACXnB,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMG,IAClBD,UAAWF,QAAMgB,MAEpBlJ,IAAIyF,EAAK0D,QAAS,CACftB,KAAMpC,EAAK0D,QACXrB,gBAAiBC,kBAAgBC,YACjCC,WAAYC,QAAMG,IAClBD,UAAWF,QAAMkB,MAiBdC,EAA4CtJ,cAE1CuJ,EAA4B,CACrC9Q,KAAM,UACN+Q,OAAQ,MACRC,KAAM,GACNrL,QAAS,6CACTsL,MAAO9B,cACPtB,OAAQ,EACRqD,MAAO,EACPC,YAAa,GACbC,YAAa,GACbC,UAAU,GAmGdR,GAZAA,GAZAA,GAZAA,GAZAA,GAbAA,GAlBAA,GAjBAA,EAAeA,EAAarJ,IAAIkI,QAAMC,IAAK,CACvC3P,KAAM,UACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAAS,GACTsL,MAAO9B,cACF3H,IAAIkI,QAAMG,IAAK5C,EAAKmC,SACpB5H,IAAIkI,QAAMK,KAAM9C,EAAK6C,UACrBtI,IAAIkI,QAAMQ,IAAKjD,EAAKgD,SACpBzI,IAAIkI,QAAMU,KAAMnD,EAAKkD,UAC1BtC,OAAQ,EACRqD,MAAO,EACPC,YAAa,UACbC,YAAa,CAAC7B,kBAAgBC,aAC9B6B,UAAU,KAGc7J,IAAIkI,QAAMG,IAAK,CACvC7P,KAAM,WACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAAS,6CACTsL,MAAO9B,cACF3H,IAAIkI,QAAMa,IAAKtD,EAAKqD,SACpB9I,IAAIkI,QAAMU,KAAMnD,EAAKuD,UACrBhJ,IAAIkI,QAAMQ,IAAKjD,EAAKoD,SACpB7I,IAAIkI,QAAMkB,IAAK3D,EAAK0D,SACpBnJ,IAAIkI,QAAMgB,IAAKzD,EAAKwD,SAEzB5C,OAAQ,GACRqD,MAAO,KACPC,YAAa,WACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,gBAG7BhI,IAAIkI,QAAMK,KAAM,CACxC/P,KAAM,kBACN+Q,OAAQ,OACRC,KAAM,WACNrL,QAAS,GACTsL,MAAO9B,cACPtB,OAAQ,EACRqD,MAAO,EACPC,YAAa,UACbC,YAAa,CAAC7B,kBAAgBC,aAC9B6B,UAAU,KAGc7J,IAAIkI,QAAMa,IAAK,CACvCvQ,KAAM,mBACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAASjB,IAAY6M,OAAOhB,IAC5BU,MAAO9B,cACPtB,OAAQ,EACRqD,MAAO,KACPC,YAAa,aACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,gBAG7BhI,IAAIkI,QAAMQ,IAAK,CACvClQ,KAAM,oBACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAASjB,IAAY6M,OAAOrB,IAC5Be,MAAO9B,cACPtB,OAAQ,GACRqD,MAAO,KACPC,YAAa,oBACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,gBAG7BhI,IAAIkI,QAAMU,KAAM,CACxCpQ,KAAM,UACN+Q,OAAQ,OACRC,KAAM,WACNrL,QAASjB,IAAY6M,OAAOnB,KAC5Ba,MAAO9B,cACPtB,OAAQ,GACRqD,MAAO,KACPC,YAAa,WACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,gBAG7BhI,IAAIkI,QAAMkB,IAAK,CACvC5Q,KAAM,UACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAASjB,IAAY6M,OAAOX,IAC5BK,MAAO9B,cACPtB,OAAQ,GACRqD,MAAO,KACPC,YAAa,UACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,gBAG7BhI,IAAIkI,QAAMgB,IAAK,CACvC1Q,KAAM,KACN+Q,OAAQ,MACRC,KAAM,UACNrL,QAASjB,IAAY6M,OAAOb,IAC5BO,MAAO9B,cACPtB,OAAQ,GACRqD,MAAO,KACPC,YAAa,KACbC,YAAa,CAAC7B,kBAAgB+B,MAAO/B,kBAAgBC,eASlD,IAAMgC,EAAQ,eAAA9S,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAC,EAAO0S,EAAsBC,GAA7B,IAAAC,EAAAC,EAAAC,EAAAnU,EAAAC,EAAAoR,EAAA+C,EAAA,OAAAtP,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdwS,EAAed,EAAakB,IAAIN,OAAWnH,GAC3CsH,EAAcf,EAAakB,IAAIL,OAAUpH,QAE1BA,IAAjBqH,QAA8CrH,IAAhBsH,EAJd,CAAA3S,EAAAE,KAAA,eAAAF,EAAAK,OAAA,SAKT,CAAC,EAAG,IALK,cAQduS,EARc,0CAAA5T,OAQkC2T,EAAYT,YAR9C,gHAAAlS,EAAAE,KAAA,EASG6S,MAAMH,GATT,cASdnU,EATcuB,EAAAuB,KAAAvB,EAAAE,KAAA,GAUDzB,EAASuU,OAVR,eAUdtU,EAVcsB,EAAAuB,KAWhBuO,EAAuBpR,EAAKuU,YAAYC,cAAcR,EAAaZ,OAAO7F,eAExD,QADlB4G,EAA+BnU,EAAKuU,YAAYE,wCAAwCT,EAAaZ,OAAO7F,kBAE5G4G,EAAgB,GAEN,OAAV/C,IACAA,EAAQ,GAjBQ9P,EAAAK,OAAA,SAmBb,CAACyP,EAAO+C,IAnBK,yBAAA7S,EAAAU,SAAAZ,EAAAa,SAAH,gBAAAyD,EAAAqD,GAAA,OAAAhI,EAAAmB,MAAAD,KAAAE,YAAA,GAsBRuS,EAAc,SAACd,GAAD,OAA6BA,EACnDe,OAAO,SAACC,GAEL,YAAiBjI,IAAViI,IAEsC,IADzC1B,EAAakB,IAAIQ,EAAOzB,GAAcM,YACjCoB,QAAQjD,kBAAgB+B,SAEpCmB,UAEQC,EAAoB,SAACnB,GAAD,OAA6BA,EACzDe,OAAO,SAACC,GAEL,YAAiBjI,IAAViI,IAE4C,IAD/C1B,EAAakB,IAAIQ,EAAOzB,GAAcM,YACjCoB,QAAQjD,kBAAgBC,eAEpCiD,mBCpQQE,GAAS,SAAIhV,GAGtB,gBAAAiV,GACI,SAAAC,EAAmBC,GAAqB,OAAAzV,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiT,GAAAxV,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwV,GAAA7Q,KAAApC,KAC9BmT,IAAiBD,GAAS,MAFxC,OAAAzV,OAAAiG,EAAA,EAAAjG,CAAAwV,EAAAD,GAAAvV,OAAAkG,EAAA,EAAAlG,CAAAwV,EAAA,EAAArV,IAAA,MAAAgE,MAAA,SAY2DhE,GACnD,OAAOH,OAAA2V,EAAA,EAAA3V,QAAA0E,EAAA,EAAA1E,CAAAwV,EAAAI,WAAA,MAAArT,MAAAoC,KAAApC,KAAUpC,KAbzB,CAAAA,IAAA,MAAAgE,MAAA,SAwBiFhE,EAAQgE,GACjF,OAAOnE,OAAA2V,EAAA,EAAA3V,QAAA0E,EAAA,EAAA1E,CAAAwV,EAAAI,WAAA,MAAArT,MAAAoC,KAAApC,KAAUpC,EAAKgE,KAzB9B,CAAAhE,IAAA,QAAAgE,MAAA,SAqCoDsR,GAG5C,OAAOzV,OAAA2V,EAAA,EAAA3V,QAAA0E,EAAA,EAAA1E,CAAAwV,EAAAI,WAAA,QAAArT,MAAAoC,KAAApC,KAAYkT,OAxC3BD,EAAA,CAAqBE,IAAiBpV,KCyB7BuV,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA7V,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAsT,GAAA7V,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA6V,GAAArT,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAA6V,EAAAC,GAAAD,EAAA,CAAgCP,GAAO,CACnCS,OAAQnG,EAAKoD,QACbgD,YAAa,CACTC,KAAMC,YAAUC,IAChBC,WAAY,GACZxE,OAAQ,GACRyE,UAAW,OAINC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAtW,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA+T,GAAAtW,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAsW,GAAA9T,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAsW,EAAAC,GAAAD,EAAA,CAAoChB,GAAO,CACvCkB,aAAc,QAGLC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAzW,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAkU,GAAAzW,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAyW,GAAAjU,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAyW,EAAAC,GAAAD,EAAA,CAAoCnB,GAAO,CACvCqB,aAAc7E,cACd8E,WAAY1M,iBAGH2M,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA7W,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAsU,GAAA7W,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA6W,GAAArU,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAA6W,EAAAC,GAAAD,EAAA,CAAoCvB,GAAO,CACvCyB,YAAa,EACbC,eAAgBlF,iBAGPmF,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAjX,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA0U,GAAAjX,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAiX,GAAAzU,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAiX,EAAAC,GAAAlX,OAAAkG,EAAA,EAAAlG,CAAAiX,EAAA,EAAA9W,IAAA,YAAAgE,MAAA,WA6BQ,OAAO0I,KAAKsK,UAAU,CAClB7O,QAAS/F,KAAK+F,QACd8O,cAAe7U,KAAK6U,cACpBC,iBAAkB9U,KAAK8U,qBAhCnC,CAAAlX,IAAA,cAAAgE,MAAA,SAoCuBmT,GAEf,IAAIxV,EAAOS,KACX,IACI,IAAMjC,EAAOuM,KAAKC,MAAMwK,GAGxBxV,GADAA,GADAA,EAAOA,EAAKqI,IAAI,UAAW7J,EAAKgI,UACpB6B,IAAI,gBAAiB7J,EAAK8W,gBAC1BjN,IAAI,mBAAoBD,YAAqB5J,EAAK+W,mBAChE,MAAO7X,GACLsB,YAA6BtB,EAAO,CAChC2B,YAAa,qCAGrB,OAAOW,MAjDfmV,EAAA,CAAgC3B,GAAO,CACnChN,QAAS,KACTkM,IAAK,KACL4C,eAAe,EACfC,iBAAkBnN,cAElBQ,OAAQ,KAGR6M,eAAgBzF,cAChB0F,qBAAsB1F,cACtB2F,gBAAiB3F,cACjB4F,qBAAsBC,yBAAuBC,aAG7CC,eAAgB/F,cAChBgG,sBAAuBhG,cACvBiG,qBAAsBjG,cAOtBkG,iBAAkB,KAClBC,eAAgB,QA4BpBxX,OAAOyX,IAAM,IAAIC,IAAS,IAAIjQ,IAAKkQ,UAAUC,aAAaxQ,KAAaR,KAEhE,IAwBKiR,GAMAC,GA9BCC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxY,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiW,GAAAxY,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwY,GAAAhW,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAwY,EAAAC,GAAAD,EAAA,CAA6BlD,GAAO,CAChC4C,IAAKzX,OAAOyX,IACZQ,gBAAiB9O,cACjB+O,sBAAuB/O,cACvBgP,iBAAkBhP,cAClBiP,kBAAmB,IAAIvI,IAAU,GACjCwI,mBAAoB,IAAIxI,IAAU,GAClCyI,mBAAoB,IAAIzI,IAAU,MAQzB0I,GAAkC,CAC3CtH,MAAO,EACP+C,cAAe,GAGNwE,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAjZ,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA0W,GAAAjZ,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAiZ,GAAAzW,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAiZ,EAAAC,GAAAD,EAAA,CAAqC3D,GAAO,CACxC6D,aAAcrH,2BAGNwG,kFAMAC,mDAKL,OAAMa,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApZ,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA6W,GAAApZ,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAoZ,GAAA5W,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAoZ,EAAAC,GAAAD,EAAA,CAA2B9D,GAAO,CAC9BgE,UAAWhB,GAAUiB,QACrB1Y,QAAS,MAGA2Y,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxZ,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiX,GAAAxZ,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwZ,GAAAhX,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAwZ,EAAAC,GAAAD,EAAA,CAA+BlE,GAAO,CAClCoE,cAAexP,cACfyP,MAAO,CAAE9Y,QAAS,OAST+Y,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5Z,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAqX,GAAA5Z,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA4Z,GAAApX,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAA4Z,EAAAC,GAAAD,EAAA,CAA+BtE,GAAO,CAClCwE,MAAOhI,iBC3KEiI,GAAkBrW,+BAAqB,oBAArBA,GAKlBsW,GAAsBtW,+BAAqB,wBAArBA,YCK7BuW,eAQF,SAAAA,EAAYpW,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA0X,IACtB1V,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAia,GAAAtV,KAAApC,KAAMsB,KAHFqW,YAAsB,EAI1B3V,EAAKmB,MAAQ,CACTlG,MAAO,KACP2a,SAAU,GAJQ5V,sFAStBhC,KAAK2X,YAAa,0KAIlB3X,KAAK2X,YAAa,EAEVvV,EAASpC,KAAKsB,MAAdc,cAEFA,IACDyV,MAAM,SAAC5a,GAEJ,IAAI6a,EACA7a,EAAMqB,QAAQiF,MAAM,qCACpBuU,EAAenR,MAEflI,YAA8BxB,EAAO,CACjC2B,YAAa,gCACb4E,YAAauU,EAAKJ,WAAa,+BAAiC,kBAEpEG,EAAe7a,EAAMqB,SAAWrB,GAGhC8a,EAAKJ,YACLI,EAAKtV,SAAS,CAAExF,MAAO6a,yIASN,IACrB7a,EAAU+C,KAAKmD,MAAflG,MACA+a,EAAehY,KAAKsB,MAApB0W,WAEJC,EAAQpU,EAAA,mDACRvF,EAAUuF,EAAA,iEACd,GAAI5G,EACA,OAAQA,GACJ,KAAK0J,KACDsR,EAAQpU,EAAA,gDACRvF,EAAUuF,EAAA,wBACV,MACJ,QACIoU,EAAQpU,EAAA,oBAAIrC,UAAU,OAAd,kCACRlD,EAAUuF,EAAA,uBAAI5G,GAG1B,OAAO4G,EAAA,qBAAKrC,UAAU,iBACjByW,EACA3Z,EACArB,GACG4G,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,wBAAQqU,QAASF,GAAjB,kBAvEQ7T,aA+FfgU,GAAmB,SAACnS,EAAc5D,EAAwDgW,GAAvE,MAAwH,CACpJpS,OACAQ,MAAO3C,EAAA,cAACwU,GAAD,CAAeL,WAAYI,EAAgBhW,KAAMA,IACxDkW,aAAa,EACb5R,SAAU0R,wBCxGRG,yIAA0BxF,GAAO,CACnC5B,OAAQ,GACRuC,KAAMC,YAAUC,IAChBzE,MAAO,IAAIpB,IAAU,GACrBsB,OAAQ,IAAItB,IAAU,MAGpByK,yIAA6BzF,GAAO,CACtC5B,OAAQ,GACRnB,UAAW,GACXH,WAAY,GACZ6D,KAAMC,YAAUC,IAChBzE,MAAO,IAAIpB,IAAU,GACrBsB,OAAQ,IAAItB,IAAU,GACtB+F,UAAW,IAAI/F,IAAU,GACzB7J,KAAMuU,YAAUC,MAChBhJ,gBAAiBC,kBAAgB+B,MACjCiH,MAAO,IAAIC,KAAG,GACd7M,OAAQ,KAGC8M,GAAb,SAAA1E,GAAA,SAAA0E,IAAA,OAAApb,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA6Y,GAAApb,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAob,GAAA5Y,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAob,EAAA1E,GAAA0E,EAAA,CAAwC9F,GAAO,CAC3C+F,QAAS,GACTC,UAAW,GAEXC,eAAgB,IAAIjL,IAAU,GAC9BkL,YAAa,IAAIlL,IAAU,GAC3BmL,IAAK,IAAInL,IAAU,GACnBoL,cAAe,GACfC,WAAY,MAGVC,yIAAmCtG,GAAO,CAC5CuG,WAAY,GACZC,aAAc,GACdC,cAAe,IAAIzL,IAAU,GAC7B0L,YAAa,IAAI1L,IAAU,GAC3B2L,KAAM,EACNC,UAAW,IAAI5L,IAAU,GACzB6L,SAAU,GACVlK,gBAAiBC,kBAAgB+B,MACjCiH,MAAO,IAAIC,KAAG,MAGZiB,GAAoC,CACtCC,gBAAYpP,EAEZqP,GAAI,GACJC,OAAQ,GACRC,OAAQC,cAAYC,cACpBC,kBAAc1P,EAEd2P,qBAAsB,IAAIhB,GAC1B5F,YAAa,IAAI+E,GACjB8B,gBAAiB,IAERC,GAAb,SAAA5F,GAAA,SAAA4F,IAAA,OAAA9c,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAua,GAAA9c,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA8c,GAAAta,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAA8c,EAAA5F,GAAA4F,EAAA,CAAqCxH,GAAO8G,KAItCW,GAAoC,CACtCV,YAAY,EAEZC,GAAI,GACJC,OAAQ,GACRC,OAAQC,cAAYC,cACpBC,kBAAc1P,EAEd2P,qBAAsB,IAAIhB,GAC1B5F,YAAa,IAAI8E,IAERkC,GAAb,SAAAvE,GAAA,SAAAuE,IAAA,OAAAhd,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAya,GAAAhd,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAgd,GAAAxa,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAgd,EAAAvE,GAAAuE,EAAA,CAAqC1H,GAAOyH,KAI/BE,GAAb,SAAA/D,GAAA,SAAA+D,IAAA,OAAAjd,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA0a,GAAAjd,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAid,GAAAza,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAid,EAAA/D,GAAA+D,EAAA,CAAyC3H,GAAO,CAC5C4H,OAAQC,oBAAkBC,SAC1BC,OAAQ,IAAI/M,IAAU,GACtBgN,KAAM,EACNd,OAAQe,oBAAkBC,QAC1BtI,MAAO,GACPqH,OAAQ,GACRkB,OAAQ,GACRvC,WAAOjO,KAKEyQ,GAAsB,SAACC,GAChC,GAAIA,EAAYtB,WAAY,CACxB,IAAM5G,EAA8B,CAChC4G,WAAYsB,EAAYtB,WACxBC,GAAIqB,EAAYrB,GAChBC,OAAQoB,EAAYpB,OACpBC,OAAQmB,EAAYnB,OACpBG,aAAcgB,EAAYhB,aAAe,IAAIvB,GAAmBuC,EAAYhB,mBAAgB1P,EAE5F2P,qBAAsB,IAAIhB,GAA2B+B,EAAYf,sBACjE5G,YAAa,IAAI8E,GAAkB6C,EAAY3H,cAEnD,OAAO,IAAIgH,GAAgBvH,GAE3B,IAAMA,EAA8B,CAChC4G,WAAYsB,EAAYtB,WACxBC,GAAIqB,EAAYrB,GAChBC,OAAQoB,EAAYpB,OACpBC,OAAQmB,EAAYnB,OACpBG,aAAcgB,EAAYhB,aAAe,IAAIvB,GAAmBuC,EAAYhB,mBAAgB1P,EAE5F2P,qBAAsB,IAAIhB,GAA2B+B,EAAYf,sBACjE5G,YAAa,IAAI+E,GAAqB4C,EAAY3H,aAClD6G,gBAAiBc,EAAYd,iBAEjC,OAAO,IAAIC,GAAgBrH,ICnGtBmI,GAAsBla,+BAAqB,wBAArBA,GACtBma,GAAuBna,+BAAqB,yBAArBA,GACvBoa,GAA6Bpa,+BAAqB,gCAArBA,GAC7Bqa,GAA4Bra,+BAAqB,+BAArBA,GAC5Bsa,GAA6Bta,+BAAqB,gCAArBA,GAC7Bua,GAA8Bva,+BAAqB,iCAArBA,GAG9Bwa,GAAuBxa,+BAAqB,yBAArBA,GACvBya,GAAwBza,+BAAqB,0BAArBA,GACxB0a,GAA6B1a,+BAAqB,gCAArBA,GAI7B2a,GAAW,SACpBnG,EACAoG,EACAC,EACAlB,EACAmB,EACAC,GANoB,sBAAApd,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAOnB,SAAA4G,EAAOS,GAAP,IAAA4V,EAAAC,EAAA,OAAAxZ,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,YACc,OAAXub,GAAgC,OAAbiB,GAAsC,OAAjBE,GAAyBI,WAAWvB,IAAW,GAAa,OAARnF,GAD/F,CAAA1P,EAAA1G,KAAA,cAES,IAAIK,MA1Bc,4BAwB3B,YAKKuc,EAAkB,IAAIpO,IAAU+M,IAClBwB,IAAI,IAAIvO,IAAU,IANrC,CAAA9H,EAAA1G,KAAA,eAOGgH,EAASqF,EAAS,CACdwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,gCARnC2H,EAAAvG,OAAA,yBAeegL,KADV0R,EAAUJ,EAAe7J,IAAI8J,OAAcvR,KACR,OAAZ0R,EAf5B,CAAAnW,EAAA1G,KAAA,cAgBS,IAAIK,MAAM,qDAhBnB,WAkBGuc,EAAgBI,GAAGH,GAlBtB,CAAAnW,EAAA1G,KAAA,eAmBS,IAAIK,MAAM,0CAnBnB,eAAAqG,EAAAvG,OAAA,SAsBM,IAAI8H,QAAQ,SAACxE,GAEhB,IAAMgD,EAAOE,SACPsW,EAAQ,WACVjW,EAAStF,YAAW,CAAE+E,UACtBhD,KAGEyZ,EAAe,eAAArW,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAuB,IAAA,OAAAmC,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAjB,OAAA,SACbiW,EAAImG,SAASK,EAAiBF,EAAc,CAAES,mBAAmB,IACnEnR,KADE,eAAAjD,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KACG,SAAAC,EAAMwd,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAla,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMqd,EAA8BD,EAA9BC,eAAeC,EAAeF,EAAfE,YAEnBA,EACKE,GAAG,QAASb,GACZc,KAAK,eAAgBd,GAE1BA,IAGEY,EAAsB,IAAIpC,GAAoBkC,GACpDrW,EAAS0W,GAAoB,CAACH,KAX5Bzd,EAAAE,KAAA,EAaI2d,GAAkBvH,EAAlBuH,CAAuB3W,GAb3B,OAcFiW,IAdE,wBAAAnd,EAAAU,SAAAZ,EAAAa,SADH,gBAAA8G,GAAA,OAAAwB,EAAArI,MAAAD,KAAAE,YAAA,IAiBF2X,MAAM,SAAC5a,GAAwB,MAAZif,IAAkBjf,KAlBtB,wBAAA0D,EAAAZ,SAAAU,EAAAT,SAAH,yBAAAoG,EAAAnG,MAAAD,KAAAE,YAAA,GAqBrBqG,EAASvF,YAASmX,GAAiBnS,EAAMyW,EAAiBD,QAnD7D,yBAAAvW,EAAAlG,SAAA+F,EAAA9F,SAPmB,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,ICLX+c,GAAsB9b,+BAAqB,eAArBA,GAOtBgc,GAAwB,SACjCxH,EACAlB,GAFiC,IAGjC2I,EAHiCld,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,IAAAA,UAAA,yBAAApB,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAIhC,SAAA4G,EAAOS,GAAP,IAAAmM,EAAA,OAAA9P,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,OAEGmT,EAAS,SAACkK,GAAD,YAAsElS,IAAlBkS,GAA+BA,EAAc3C,SAAWe,oBAAkBC,SACvImC,IACA1K,EAAS,kBAAM,IAGnB+B,EACK/B,OAAOA,GACP2K,WACAC,UACA9R,IAJL,eAAApF,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAIS,SAAAuB,EAAOmc,GAAP,IAAAW,EAAAnG,EAAA,OAAAxU,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEmCoW,EAAI6H,yBAAyBZ,EAAc1B,QAF9E,WAEOqC,EAFP5c,EAAAC,QAM+Boa,oBAAkByC,SANjD,CAAA9c,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,EAOa2N,EAAM,KAPnB,cAAAvM,EAAApB,KAAA,EAQmCoW,EAAI6H,yBAAyBZ,EAAc1B,QAR9E,OAQOqC,EARP5c,EAAAC,KAAA,QAWO2c,IAAwBX,EAAc3C,SAClCsD,IAAwBvC,oBAAkB0C,OACpCtG,EAD0C,eAAA9O,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAClC,SAAAC,IAAA,IAAAwe,EAAA,OAAA/a,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACJoe,EAAe1M,EAAakB,IAAIyK,EAAcjK,MAAOzB,GAC3D3K,EAASqF,EAAS,CACdwL,MAAO,IAAIP,GAAM,CACbvY,QAAO,GAAAD,OAAKue,EAAc9B,OAAnB,KAAAzc,OAA6Bsf,EAAaxM,OAA1C,2BAAA9S,OAA0Eue,EAAcjC,SAAWC,oBAAkBgD,QAAU,YAAc,aACpJ7G,UAAWhB,GAAU8H,aALnB,wBAAAxe,EAAAU,SAAAZ,EAAAa,SADkC,yBAAAsI,EAAArI,MAAAD,KAAAE,YAAA,GAUhDqG,EAASiR,GAAgB,CAAEuC,GAAI6C,EAAc1B,OAAQ4C,OAAQ1G,MAEjE7Q,EAAS0W,GAAoB,CAACL,EAAchV,IAAI,SAAU2V,OAxBjE5c,EAAApB,KAAA,iBAAAoB,EAAArB,KAAA,GAAAqB,EAAAhB,GAAAgB,EAAA,SA2BGpC,YAA4BoC,EAAAhB,GAExB,CAAEf,YAAa,0CA7BtB,yBAAA+B,EAAAZ,SAAAU,EAAAT,KAAA,aAJT,gBAAA8G,GAAA,OAAAV,EAAAnG,MAAAD,KAAAE,YAAA,IAPC,wBAAA+F,EAAAlG,SAAA+F,EAAA9F,SAJgC,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,IAkDxBgd,GAAoB,SAACvH,EAAewB,GAAhB,sBAAA4G,EAAAtgB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAA+D,SAAA8e,EAAOzX,GAAP,IAAAkP,EAAAuG,EAAAD,EAAAkC,EAAA9H,EAAA+H,EAAA,OAAAtb,EAAA3D,EAAAG,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,cAAA4e,EAAA7e,KAAA,EAKpFmW,GAAmB,EAEnBuG,EAAiBzM,cACjBwM,EAAWxM,cACX0O,EAAkB1O,cATkE4O,EAAA5e,KAAA,EAW1DoW,EAAIyI,uBAXsD,cAWlFjI,EAXkFgI,EAAAvd,KAAAud,EAAA5e,KAAA,GAYzDoW,EAAI0I,cAAclI,GAZuC,QAYlF+H,EAZkFC,EAAAvd,KAaxFuV,EAAgBxY,QAAQ,SAACgV,GACrB,IAAI2L,EAAO,KACPC,EAAQ,KACRC,EAAe,KACbC,EAAeP,EAAiB/L,IAAIQ,GACtC8L,IACAH,EAAOG,EAAaH,KACM,OAAtBG,EAAaH,MAAuC,OAAtBG,EAAaC,OAC3CH,EAAQE,EAAaH,KAAKK,KAAKF,EAAaC,MAC5CjJ,EAAmBA,GAAoB8I,EAAMzQ,UAEjD0Q,EAAeC,EAAaD,cAEhCxC,EAAiBA,EAAepU,IAAI+K,EAAO2L,GAC3CvC,EAAWA,EAASnU,IAAI+K,EAAO4L,GAC/BN,EAAkBA,EAAgBrW,IAAI+K,EAAO6L,KAEjDjY,EAASgV,GAA2B,CAAES,oBACtCzV,EAASmV,GAA4B,CAAEuC,qBACvC1X,EAAS+U,GAAqB,CAAES,cAEhCxV,EAASqY,GAAoBnJ,IAlC2D0I,EAAA5e,KAAA,iBAAA4e,EAAA7e,KAAA,GAAA6e,EAAAxe,GAAAwe,EAAA,SAoCxF5f,YAA4B4f,EAAAxe,GAAQ,CAAEf,YAAa,gCApCqC,QAyCxFuY,IACA5Q,EAASkR,GAAoB,CACzBoH,IAAK1H,EACA2H,SACAxB,aAETnG,EAAc3L,IAAI,SAACuT,EAAmCnhB,GAClDmhB,IACKlH,MAAM,SAAC5a,GACJsB,YACItB,EACA,CAAE2B,YAAW,iDAAAP,OAAmDT,UApDQ,yBAAAugB,EAAApe,SAAAie,EAAAhe,KAAA,aAA/D,gBAAA4G,GAAA,OAAAmX,EAAA9d,MAAAD,KAAAE,YAAA,IA2DpB8e,GAAoB,SAACrJ,GAAD,sBAAAsJ,EAAAxhB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAmB,SAAAggB,EAAO3Y,GAAP,IAAA4P,EAAA,OAAAvT,EAAA3D,EAAAG,KAAA,SAAA+f,GAAA,cAAAA,EAAA7f,KAAA6f,EAAA5f,MAAA,UAC3CoW,EAAIyJ,SAASC,cAD8B,CAAAF,EAAA5f,KAAA,eAE5ChB,YAA6B,KAAM,CAAEK,YAAW,2DAFJugB,EAAAzf,OAAA,wBAAAyf,EAAA7f,KAAA,EAAA6f,EAAA5f,KAAA,EAOdoW,EAAI2J,6BAPU,cAOtCnJ,EAPsCgJ,EAAAve,KAAAue,EAAA5f,KAAA,EAQtCiI,QAAQ+X,IAAI,CAEd5J,EAAIyJ,SAASI,eAAerJ,GACvB5K,KAAK,SAAAkU,GACF,IAAIvK,EAAkB3F,cACtB4G,EAAgB3K,IAAI,SAACmH,EAAO+M,GACxBxK,EAAkBA,EAAgBtN,IAAI+K,EAAO8M,EAAqBC,MAEtEnZ,EAASqV,GAAsB,CAAE1G,uBAEpC2C,MAAM,SAAC5a,GACJsB,YACItB,EACA,CAAE2B,YAAa,uDAG3B+W,EAAIyJ,SAASf,cAAclI,GACtB5K,KAAK,SAAAoU,GACF,IAAI3K,EAAiBzF,cACjB0F,EAAuB1F,cAC3B4G,EAAgBxY,QAAQ,SAAAgV,GACpB,IAAM8L,EAAekB,EAAiBxN,IAAIQ,GAC1C,GAAI8L,EAAc,CACd,IAAImB,EAAiC,KACX,OAAtBnB,EAAaH,MAAuC,OAAtBG,EAAaC,OAC3CkB,EAAenB,EAAaH,KAAKK,KAAKF,EAAaC,OAEvD1J,EAAiBA,EAAepN,IAAI+K,EAAOiN,GAC3C3K,EAAuBA,EAAqBrN,IAAI+K,EAAO8L,EAAaH,SAG5E/X,EAASoV,GAAqB,CAAE3G,oBAChCzO,EAASsV,GAA2B,CAAE5G,4BAEzC4C,MAAM,SAAC5a,GACJsB,YACItB,EACA,CAAE2B,YAAa,wDA7Ca,OAAAugB,EAAA5f,KAAA,iBAAA4f,EAAA7f,KAAA,GAAA6f,EAAAxf,GAAAwf,EAAA,SAiD5C5gB,YAA4B4gB,EAAAxf,GAAQ,CAChCf,YAAa,sCAlD2B,yBAAAugB,EAAApf,SAAAmf,EAAAlf,KAAA,aAAnB,gBAAA6G,GAAA,OAAAoY,EAAAhf,MAAAD,KAAAE,YAAA,IC1IpB2f,GAAY1e,+BAAqB,aAArBA,GAUZ2e,GAAW3e,+BAAqB,YAArBA,GCHX4e,IAFmB5e,+BAAqB,qBAArBA,GAEPA,+BAAqB,aAArBA,IAEZ6e,GAAoB7e,+BAAqB,eAArBA,GAEpB8e,GAAwB9e,+BAAqB,0BAArBA,GAOxB+e,IALmB/e,+BAAqB,qBAArBA,GAKE,SAACgf,GAAD,OAA8B,SAACC,GAC7D,YAAc1V,IAAV0V,MAICD,GACGC,EAAMnG,SAAWC,cAAYmG,MAC7BD,EAAMnG,SAAWC,cAAYC,eAC7BiG,EAAMnG,SAAWC,cAAYoG,cAS5BC,GAAqB,SAC9B5K,EACAvB,GAF8B,IAG9B+L,EAH8BjgB,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,IAAAA,UAAA,yBAAApB,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAI7B,SAAAuB,EAAO8F,GAAP,IAAAia,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApe,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,OAEKihB,EAAkBpM,EACnB1B,OAAO,SAAC0N,GAAD,OAAWA,EAAM/F,qBAAqB3K,kBAAoBC,kBAAgB+B,QACjFuP,KACL1a,EAAS2a,GAAsC,IAApBV,IAGrBC,EAAUrM,EACXiJ,WACA3K,OAAOwN,GAAmBC,IAC1B7C,UAXJoD,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAAzE,EAAA3G,KAAA,EAAAuhB,EAAAje,EAAA3D,EAAAC,KAAA,SAAA2hB,IAAA,IAAAT,EAAAe,EAAA/J,EAAA,OAAAxU,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,eAciBmL,KADT0V,EAbRW,EAAAnf,OAAA,CAAAjB,EAAApB,KAAA,eAAAoB,EAAAjB,OAAA,UAAA0hB,OAAA,kBAiBOD,OAjBP,EAAAxgB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAmB2BoW,EAAI0L,iBAAiBjB,EAAMrG,IAnBtD,OAmBOoH,EAnBPxgB,EAAAC,KAAAD,EAAApB,KAAA,wBAAAoB,EAAArB,KAAA,GAAAqB,EAAAhB,GAAAgB,EAAA,SAqBOpC,YAA4BoC,EAAAhB,GAExB,CAAEf,YAAa,uCAvB1B+B,EAAAjB,OAAA,gCA6BQ0gB,EAAMtG,YAAesG,EAAMhG,cAAgB+G,IAAgBjH,cAAYoH,QA7B/E,CAAA3gB,EAAApB,KAAA,gBAAAoB,EAAA0C,GA8Be+c,EA9Bfzf,EAAA2C,GA8B6CuV,GA9B7ClY,EAAApB,KAAA,GA8BsEoW,EAAI4L,kBAAkBnB,EAAMrG,IA9BlG,QAAApZ,EAAA6gB,GAAA7gB,EAAAC,KAAAD,EAAA8gB,GAAA,IAAA9gB,EAAA2C,GAAA3C,EAAA6gB,IA+BOpB,GADAA,EA9BPzf,EAAA0C,GA8BqBuE,IA9BrBxF,KAAAzB,EAAA0C,GA8ByB,eA9BzB1C,EAAA8gB,KA+BqB7Z,IAAI,SAAUsS,cAAYoH,SAGlClK,EAlCb,eAAAhR,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAkCqB,SAAAC,IAAA,OAAAyD,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACVgH,EAASwZ,GAAU,CAACK,KAEpB7Z,EAASqF,EAAS,CACdwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAU8H,QAErBvf,QAAS,gDAPP,wBAAAe,EAAAU,SAAAZ,EAAAa,SAlCrB,yBAAAoG,EAAAnG,MAAAD,KAAAE,YAAA,GA6COqG,EAASiR,GAAgB,CAAEuC,GAAE,YAAA1b,OAAc+hB,EAAMrG,IAAM+D,OAAQ1G,KA7CtEzW,EAAApB,KAAA,iBA+Cc6gB,EAAMnG,SAAWkH,GACxB5a,EAASyZ,GAAkB,CAAElH,QAASsH,EAAMrG,GAAIoH,iBAhDvD,yBAAAxgB,EAAAZ,SAAA8gB,EAAA7gB,KAAA,YAAA8gB,EAaiBL,EAbjBva,OAAAwb,YAAA,UAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,KAAA,CAAA1b,EAAA1G,KAAA,gBAAA0G,EAAA2b,cAAAf,IAAA,iBAAAG,EAAA/a,EAAAtG,GAAAsG,EAAA5C,GAAA2d,EAAA/a,EAAA1G,KAAA,aAAA0G,EAAA5C,GAAA,2BAAA4C,EAAAvG,OAAA,4CAAAshB,EAAA,CAAA/a,EAAA1G,KAAA,gBAAA0G,EAAAvG,OAAA,SAAAshB,EAAAI,GAAA,QAAAV,GAAA,EAAAza,EAAA1G,KAAA,gBAAA0G,EAAA1G,KAAA,iBAAA0G,EAAA3G,KAAA,GAAA2G,EAAA3C,GAAA2C,EAAA,SAAA0a,GAAA,EAAAC,EAAA3a,EAAA3C,GAAA,QAAA2C,EAAA3G,KAAA,GAAA2G,EAAA3G,KAAA,GAAAohB,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAA5b,EAAA3G,KAAA,IAAAqhB,EAAA,CAAA1a,EAAA1G,KAAA,eAAAqhB,EAAA,eAAA3a,EAAA6b,OAAA,mBAAA7b,EAAA6b,OAAA,6BAAA7b,EAAAlG,SAAAU,EAAAT,KAAA,+BAJ6B,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,ICvCrB6hB,GAAc5gB,+BAAqB,eAArBA,GCFd6gB,GAAgB7gB,+BAAqB,iBAArBA,YCOhB8gB,GAAb,SAAAlgB,GACI,SAAAkgB,EAAY3gB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiiB,IACtBjgB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwkB,GAAA7f,KAAApC,KAAMsB,KAqCO4gB,SAtCSzkB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAsCE,SAAAC,IAAA,IAAAgjB,EAAA,OAAAvf,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChB4iB,EAASngB,EAAKV,MAAd6gB,KAERngB,EAAKS,SAAS,CAAE2f,SAAS,EAAMnlB,MAAO,OAHdoC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMd4iB,IANc,OAAA9iB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQpBZ,YAA6BY,EAAAM,GAAQ,CACjCf,YAAa,iCACb4E,YAAa,gCAEjBxB,EAAKS,SAAS,CAAExF,MAAOoC,EAAAM,GAAMrB,SAANe,EAAAM,KAZH,QAcxBqC,EAAKS,SAAS,CAAE2f,SAAS,IAdD,yBAAA/iB,EAAAU,SAAAZ,EAAAa,KAAA,YApCxBgC,EAAKmB,MAAQ,CACTlG,MAAO,KACPmlB,SAAS,GAJSpgB,EAD9B,OAAAvE,OAAAiG,EAAA,EAAAjG,CAAAwkB,EAAAlgB,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAAwkB,EAAA,EAAArkB,IAAA,oBAAAgE,MAAA,eAAAygB,EAAA5kB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAA,SAAAuB,IAAA,OAAAmC,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAUQS,KAAKkiB,WACArK,MAAM,MAXnB,wBAAAlX,EAAAZ,SAAAU,EAAAT,SAAA,yBAAAqiB,EAAApiB,MAAAD,KAAAE,YAAA,KAAAtC,IAAA,SAAAgE,MAAA,WAkBqC,IAAAgC,EACF5D,KAAKmD,MAAxBif,EADqBxe,EACrBwe,QAASnlB,EADY2G,EACZ3G,MACTc,EAASiC,KAAKsB,MAAdvD,KACR,OAAO8F,EAAA,qBAAKrC,UAAU,cAClBqC,EAAA,6CACAA,EAAA,mBAAGrC,UAAU,cAAczD,EAAKyN,IAAI,SAAC8W,EAAM1kB,GAAP,OAAeiG,EAAA,sBAAMjG,IAAKA,EAAK4D,UAAU,yBAAyB8gB,MACrGF,EACGve,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACzC,GAAA,EAAD,OAEJyC,EAAA,cAAAA,EAAA,cACK5G,EAAQ4G,EAAA,mBAAGrC,UAAU,OAAOvE,GAAa,KAC1C4G,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,wBAAQqU,QAASlY,KAAKsB,MAAM0W,YAA5B,SACAnU,EAAA,wBAAQqU,QAASlY,KAAKkiB,UAAtB,oBAhCxBD,EAAA,CAAkC9d,aCErBoe,GAA6BphB,+BAAqB,gCAArBA,GAE7BqhB,GAA8B,SAAC7M,GAAD,sBAAA7W,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAmB,SAAAC,EAAOoH,GAAP,IAAA4O,EAAA,OAAAvS,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvBoW,EAAIyJ,SAASqD,gBADU,OACpDtN,EADoD9V,EAAAuB,KAE1D2F,EAASgc,GAA2B,CAAEpN,0BAFoB,wBAAA9V,EAAAU,SAAAZ,EAAAa,SAAnB,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,IAK9BwiB,GAAmB,SAAC/M,GAAD,OAAmB,SAACpP,GAAD,OAAwB,IAAIiB,QAAJ,eAAApB,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAY,SAAA4G,EAAO9C,EAASqD,GAAhB,IAAAsc,EAAA5kB,EAAAiI,EAAA5D,EAAAsE,EAAAF,EAAA,OAAA5D,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,EAE3DoW,EAAIyJ,SAASwD,QAF8C,OAE7ED,EAF6E1c,EAAArF,KAI7E7C,EAAiB,0BAAAM,OAA4BskB,IAE7C3c,EAAOE,SAEP9D,EAR6E,eAAAkG,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAQtE,SAAAuB,IAAA,IAAAwZ,EAAA,OAAArX,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACYoW,EAAIyJ,SAASyD,YADzB,OACH5I,EADGtZ,EAAAC,KAET2F,EAAStF,YAAW,CAAE+E,UAEtBhD,EAAQiX,GAJC,wBAAAtZ,EAAAZ,SAAAU,EAAAT,SARsE,yBAAAsI,EAAArI,MAAAD,KAAAE,YAAA,GAe7EwG,EAAW,WACbH,EAAStF,YAAW,CAAE+E,UACtBK,KAGEG,EAAQ3C,EAAA,cAACif,GAAD,CAAc/kB,KAAMA,EAAMokB,KAAM/f,EAAM4V,WAAYtR,IAEhEH,EAASvF,YAAS,CAAEgF,OAAMQ,QAAOE,cAtBkD,wBAAAT,EAAAlG,SAAA+F,EAAA9F,SAAZ,gBAAA8G,EAAAF,GAAA,OAAAR,EAAAnG,MAAAD,KAAAE,YAAA,MCHrE6iB,eAEF,SAAAA,EAAYzhB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA+iB,IACtB/gB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAslB,GAAA3gB,KAAApC,KAAMsB,KAuFO0hB,eAxFSvlB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAwFQ,SAAAC,IAAA,IAAAwW,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtBoW,EAAQ3T,EAAKV,MAAbqU,IADsBtW,EAAAE,KAAA,EAIxByC,EAAKihB,eAAe,kBAAOjhB,EAAKV,MAAM4hB,QAAQR,iBAAyB/M,KAJ/C,wBAAAtW,EAAAU,SAAAZ,EAAAa,SAxFRgC,EAkGTmhB,aAlGS1lB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAkGM,SAAAuB,IAAA,IAAAkV,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cACpBoW,EAAQ3T,EAAKV,MAAbqU,IADoBhV,EAAApB,KAAA,EAEtByC,EAAKihB,eAAetN,EAAIyJ,SAASgE,aAFX,wBAAAziB,EAAAZ,SAAAU,EAAAT,SAlGNgC,EA4GTihB,eA5GS,eAAA3a,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KA4GQ,SAAA4G,EAAOud,GAAP,IAAAH,EAAA,OAAAtgB,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACtB2jB,EAAYlhB,EAAKV,MAAjB4hB,QAERlhB,EAAKS,SAAS,CACV6gB,UAAW,KACXC,aAAa,IALatd,EAAAvG,OAAA,SAQvB2jB,IACF9X,KAAK,SAAA4J,GACFnT,EAAKS,SAAS,CACV8gB,aAAa,IAEjBL,EAAQX,2BAA2B,CAAEpN,2BAExC0C,MAAM,SAAC5a,GACJ+E,EAAKS,SAAS,CACV6gB,UAAYrmB,GAASA,EAAMqB,SAAYrB,EACvCsmB,aAAa,OAlBK,wBAAAtd,EAAAlG,SAAA+F,EAAA9F,SA5GR,gBAAAyD,GAAA,OAAA6E,EAAArI,MAAAD,KAAAE,YAAA,GAEtB8B,EAAKmB,MAAQ,CACTmgB,UAAW,KACXC,aAAa,GAJKvhB,wEAYO,IAQzBkR,EAPIiC,EAAyBnV,KAAKsB,MAA9B6T,qBADqBvR,EAEM5D,KAAKmD,MAAhCogB,EAFqB3f,EAErB2f,YAAaD,EAFQ1f,EAER0f,UAEfE,EAAY3f,EAAA,wBAAQqU,QAASlY,KAAKmjB,aAAcM,SAAUF,GAC3DA,EAAc1f,EAAA,cAACzC,GAAA,EAAD,MAAc,SAKjC,OAAQ+T,GACJ,KAAKC,yBAAuBC,aACxBnC,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,qDACAA,EAAA,4KACAA,EAAA,wBACIA,EAAA,wBAAIA,EAAA,mBAAG6f,KAAK,+DAAR,yBACJ7f,EAAA,wBAAIA,EAAA,mBAAG6f,KAAK,+DAAR,wBAEPJ,GAAazf,EAAA,mBAAGrC,UAAU,OAAO8hB,GACjCE,GAEL,MACJ,KAAKpO,yBAAuBuO,cACxBzQ,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,4HACCyf,GAAazf,EAAA,mBAAGrC,UAAU,OAAO8hB,GACjCE,GAEL,MACJ,KAAKpO,yBAAuBwO,kBACxB1Q,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,gGACCyf,GAAazf,EAAA,mBAAGrC,UAAU,OAAO8hB,GAClCzf,EAAA,wBAAQqU,QAASlY,KAAKgjB,eAAgBS,SAAUF,GAC3CA,EAAc1f,EAAA,cAACzC,GAAA,EAAD,MAAckiB,EAAY,QAAU,cAG3D,MACJ,KAAKlO,yBAAuByO,eACxB3Q,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,yLACCyf,GAAazf,EAAA,mBAAGrC,UAAU,OAAO8hB,GACjCE,GAEL,MACJ,KAAKpO,yBAAuB0O,eACxB5Q,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,0GACCyf,GAAazf,EAAA,mBAAGrC,UAAU,OAAO8hB,GACjCE,GAEL,MACJ,KAAKpO,yBAAuB2O,gBACxB7Q,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,yEACC2f,GAEL,MACJ,KAAKpO,yBAAuB4O,kBACxB9Q,EAAQrP,EAAA,cAAAA,EAAA,cACJA,EAAA,uBAAGA,EAAA,sBAAMrC,UAAU,iBAAhB,UAAH,6BAEJ,MACJ,QACI0R,EAAQrP,EAAA,8DAAwCsR,GAGxD,OAAOtR,EAAA,qBAAKrC,UAAU,kBACjB0R,UAnFmB/O,aAkKnB8f,GAAeC,YA5BJ,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACfR,qBAAsBhS,EAAM6W,OAAO7E,uBAGZ,SAAC5O,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBzB,oBACAH,+BACDhc,KAmBqB2d,CAA6CnB,IC5KnEqB,GAAY,IACZC,GAAc,GACdC,GAAS,KAEFC,GAAb,SAAAxiB,GAEI,SAAAwiB,EAAYjjB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAukB,IACtBviB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA8mB,GAAAniB,KAAApC,KAAMsB,KAFFkjB,cAAoC,KAClBxiB,EAOnByiB,OAAS,WAAmB,IAEzBC,EADY1iB,EAAKmB,MAAf5F,MACkB6mB,GAAStX,KAAA6B,IAAG0V,GAAe,GACrD,OACIxgB,EAAA,qBAAK8gB,KAAK,MAAMnjB,UAAS,qBAAAnD,OAAuBqmB,EAAW,WAAa,IAAMxM,QAASlW,EAAK4iB,gBACvF5iB,EAAKV,MAAMujB,KACZhhB,EAAA,qBAAKihB,IAAK9iB,EAAK+iB,wBAbD/iB,EAiBnB+iB,oBAAsB,SAACD,GAAiC9iB,EAAKwiB,cAAgBM,GAjB1D9iB,EAmBnBgjB,kBAAoB,WACvBhjB,EAAKijB,kBApBiBjjB,EAuBnBkjB,0BAA4B,WAC/BljB,EAAKijB,kBAxBiBjjB,EA2BTijB,eAAiB,WAE9BjjB,EAAKmjB,YAAY,WACTnjB,EAAKwiB,eACLxiB,EAAKwiB,cAAcY,eAAe,CAAEC,SAAU,cA/BhCrjB,EAoCT4iB,eAAiB,SAACU,GAAgD,IACvE/nB,EAAUyE,EAAKmB,MAAf5F,MACRyE,EAAKS,SAAS,CACVlF,MAAOA,EAAQ,KArCnByE,EAAKmB,MAAQ,CACT5F,MAAO+mB,IAHWtiB,EAF9B,OAAAvE,OAAAiG,EAAA,EAAAjG,CAAA8mB,EAAAxiB,GAAAwiB,EAAA,CAA6BpgB,aCHhBohB,GAAb,SAAAxjB,GACI,SAAAwjB,EAAYjkB,GAAe,OAAA7D,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAulB,GAAA9nB,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA8nB,GAAAnjB,KAAApC,KACjBsB,IAFd,OAAA7D,OAAAiG,EAAA,EAAAjG,CAAA8nB,EAAAxjB,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAA8nB,EAAA,EAAA3nB,IAAA,SAAAgE,MAAA,WASqC,IAAAkB,EAC+C9C,KAAKsB,MAAzEgY,EADqBxW,EACrBwW,WAAYC,EADSzW,EACTyW,aAAcE,EADL3W,EACK2W,YAAaD,EADlB1W,EACkB0W,cAAegM,EADjC1iB,EACiC0iB,UAExDC,EAAiBC,MAAQ,KAAArnB,OAAaib,EAAWlI,OAEjDuU,EAAmBD,MAAQ,KAAArnB,OAAakb,EAAanI,OAE3D,OAAOvN,EAAA,qBAAKrC,UAAU,gBAClBqC,EAAA,yBACIA,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAKH,IACpChM,GAAe5V,EAAA,uBAAI4V,EAAYzL,UAAhB,IAA4BsL,EAAWnI,SAE3DtN,EAAA,qBAAKrC,UAAU,eAAegkB,EAAY,SAAM,UAChD3hB,EAAA,yBACIA,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAKD,IACpCnM,GAAiB3V,EAAA,uBAAI2V,EAAcxL,UAAlB,IAA8BuL,EAAapI,cAxB7EoU,EAAA,CAAsCphB,aCahC0hB,eAGF,SAAAA,EAAYvkB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA6lB,IACtB7jB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAooB,GAAAzjB,KAAApC,KAAMsB,KAHFqW,YAAsB,EAEJ3V,EAwCT8jB,cAAgB,WAAuB,IAAAhjB,EAChBd,EAAKV,MAAjCykB,EAD4CjjB,EAC5CijB,WAAYtS,EADgC3Q,EAChC2Q,YAEZtC,EAA2CsC,EAA3CtC,OAAQuC,EAAmCD,EAAnCC,KAAMvE,EAA6BsE,EAA7BtE,MAAOE,EAAsBoE,EAAtBpE,OAAQyE,EAAcL,EAAdK,UAHekS,EAKpB7U,EAAO8U,MAAM,KALOC,EAAAzoB,OAAAuR,EAAA,EAAAvR,CAAAuoB,EAAA,GAK7ChW,EAL6CkW,EAAA,GAKlCrW,EALkCqW,EAAA,GAM9C5M,EAAa5F,IAASC,YAAUC,IAAM/D,EAAaG,EACnDuJ,EAAe7F,IAASC,YAAUC,IAAM5D,EAAYH,EACpDsW,EAAoBlV,EAAakB,IAAImH,EAAYpI,GACjDkV,EAAsBnV,EAAakB,IAAIoH,EAAcrI,GACrDmV,EAAmBpV,EAAakB,IAAInC,EAAWkB,GAC/CoV,EAAoBrV,EAAakB,IAAItC,EAAYqB,GAEjDqV,EAAa,IAAIxY,IAAUsB,GAC3BmX,EAAgB,IAAIzY,IAAU+F,GAAa,GAC3C2S,EAAcF,EAAWtX,MAAM,IAAIlB,IAAUoB,IAE7CsK,EAAe/F,IAASC,YAAUC,IAAO6S,EAAcF,EACzD/M,EAAiB9F,IAASC,YAAUC,IAAO2S,EAAaE,EAGtD7M,EAAWL,EACXmN,EAAYlN,EAAcvK,MAAM8W,GACtCvM,EAAgBA,EAAcmN,MAAMD,GAEpC,IAAME,EAAkB3V,EAAakB,IAAIyH,EAAU1I,GAEnD,OAAOrN,EAAA,cAAAA,EAAA,cACHA,EAAA,iDACAA,EAAA,cAACgjB,GAAD,CACIvN,WAAY6M,EACZ5M,aAAc6M,EACd3M,YAAaA,EACbD,cAAeA,IAEnB3V,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,uBAAGA,EAAA,oCAAH,IAAwBsL,EAAxB,IAAgCmX,EAAkBnV,QAClDtN,EAAA,uBAAGA,EAAA,6CAAH,IAAiC2iB,EAAcxY,UAA/C,IAA2DqY,EAAiBlV,QAC5EtN,EAAA,qCAAe6iB,EAAU1Y,UAAzB,IAAqC4Y,EAAgBzV,OAArD,SAEJtN,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,wBAAQrC,UAAU,gBAAgB0W,QAASlW,EAAK8kB,WAAWjjB,EAAA,sCAC3DA,EAAA,wBAAQqU,QAASlW,EAAKV,MAAM0W,YAA5B,aAlFchW,EAuFT+kB,cAAgB,WAAuB,IAAAnjB,EAC5B5B,EAAKmB,MAArBlG,EAD4C2G,EAC5C3G,MAAO4nB,EADqCjhB,EACrCihB,KACP7M,EAAehW,EAAKV,MAApB0W,WAEJC,EAAQpU,EAAA,4CACRvF,EAAUuF,EAAA,iEACd,GAAI5G,EACA,OAAQA,EAAMqB,SACV,KAAKqI,KACDsR,EAAQpU,EAAA,0CACRvF,EAAUuF,EAAA,wBACV,MACJ,QACIoU,EAAQpU,EAAA,oBAAIrC,UAAU,OAAd,kCACRlD,EAAUuF,EAAA,uBAAI5G,EAAMqB,SAGhC,OAAOuF,EAAA,cAAAA,EAAA,cACFoU,EACA3Z,EACArB,GACG4G,EAAA,qBAAKrC,UAAU,kBACVvE,EAAQ4G,EAAA,wBAAQqU,QAASlW,EAAK8kB,WAAtB,SAAkDjjB,EAAA,cAAAA,EAAA,eAC3DA,EAAA,wBAAQqU,QAASF,GAAjB,UAGRnU,EAAA,cAACmjB,GAAD,CAASnC,KAAMA,MAjHG7iB,EAqHT8kB,UArHSrpB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAqHG,SAAAC,IAAA,IAAAiD,EAAA6kB,EAAA,OAAArkB,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjB6C,EAASJ,EAAKV,MAAdc,KAERJ,EAAKS,SAAS,CAAExF,MAAO,KAAMiqB,WAAW,IAElCD,EAAgB,CAAEE,IAAKnlB,EAAKmlB,IAAKlqB,MAAO+E,EAAK/E,OAL1BoC,EAAAE,KAAA,EAOnB6C,EAAK6kB,GACNpP,MAAM,SAAC5a,GACJe,QAAQf,MAAMA,GAEV+E,EAAK2V,YACL3V,EAAKS,SAAS,CAAExF,YAZH,wBAAAoC,EAAAU,SAAAZ,EAAAa,SArHHgC,EAsITmlB,IAAM,SAAC7oB,GACpB,IAAMsZ,EAAW5V,EAAKmB,MAAMyU,SAC5B5V,EAAKS,SAAS,CAAEmV,SAAUA,EAAW,EAAGiN,KAAM7iB,EAAKmB,MAAM0hB,KAAKuC,KAAKvjB,EAAA,mBAAGjG,IAAKga,GAAWtZ,OAxIhE0D,EA2IT/E,MAAQ,SAACqB,GACtB,IAAMsZ,EAAW5V,EAAKmB,MAAMyU,SAC5B5V,EAAKS,SAAS,CAAEmV,SAAUA,EAAW,EAAGiN,KAAM7iB,EAAKmB,MAAM0hB,KAAKuC,KAAKvjB,EAAA,mBAAGjG,IAAKga,EAAUpW,UAAU,OAAOlD,OA3ItG0D,EAAKmB,MAAQ,CACT+jB,eAAiCxc,IAAtBpJ,EAAM+lB,aAA6B/lB,EAAM+lB,YACpDpqB,MAAO,KACP2a,SAAU,EACViN,KAAMxd,eANYrF,8LAWtBhC,KAAK2X,YAAa,GACd3X,KAAKmD,MAAM+jB,0CACLlnB,KAAK8mB,qQAKf9mB,KAAK2X,YAAa,qIAOW,IAGzBzE,EAOJ,OAHIA,EANkBlT,KAAKmD,MAAnB+jB,UAMIlnB,KAAK+mB,gBAFL/mB,KAAK8lB,gBAKVjiB,EAAA,qBAAKrC,UAAU,cACjB0R,UAvCqB/O,aAsK5BmjB,GAAiBpD,YAlBC,SAAC/gB,GAAD,MAA6B,CACjD4iB,WAAY5iB,EAAMwS,IAAIY,qBAiBsB,KAAzB2N,CAA+B2B,IAEzC0B,GAAoB,SAACvhB,EAAcyN,EAA0BrR,EAAwDgW,EAA4BiP,GAA7H,MAAyK,CACtMrhB,OACAQ,MAAO3C,EAAA,cAACyjB,GAAD,CAAgBllB,KAAMA,EAAM4V,WAAYI,EAAgB3E,YAAaA,EAAa4T,YAAaA,IACtG/O,aAAa,EACb5R,SAAU0R,IC3KDoP,GAAY,SACrB7R,EACAnC,EACAE,EACAG,EACAxE,EACAoY,EACAC,EACAC,EACAC,GATqB,sBAAA9oB,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAUpB,SAAA8e,EAAOzX,GAAP,IAAAshB,EAAAR,EAAAS,EAAAC,EAAAC,EAAAvU,EAAAzN,EAAAiiB,EAAAC,EAAA,OAAAtlB,EAAA3D,EAAAG,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,UACKsoB,EAAavY,EAAM6C,IAAIqB,OAAQ9I,GADpC,CAAAyT,EAAA5e,KAAA,eAAA4e,EAAAze,OAAA,iBAKK2nB,EAAcQ,EAAWnY,kBAAoBC,kBAAgBC,YAE7DkY,EAAe,IAAI/Z,IAAU8F,GAC7BkU,EAAW,IAAIha,IAAUsB,GACzB2Y,EAAkB,IAAIja,IAAU0Z,GAEhChU,EAA2B,CAC7BtC,OAAM,GAAA9S,OAAKwpB,EAAW7X,UAAhB,KAAA3R,OAA6BwpB,EAAWhY,YAC9C6D,OACAvE,MAAO2Y,EAAa9Z,UACpBqB,OAAQ0Y,EACRjU,UAAWkU,EACX9jB,KAAMwjB,GAGJ1hB,EAAOE,SAEP+hB,EAtBL,eAAA7hB,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAsBqB,SAAA4G,EAAOmhB,GAAP,OAAArkB,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAAvG,OAAA,SACXiW,EAAI6R,UAAU/T,EAAa,CAAEwT,gBAAevK,mBAAmB,IACjEnR,KADE,eAAAjD,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KACG,SAAAC,EAAOgpB,GAAP,IAAA/M,EAAA,OAAAxY,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACM6b,EAAgB+M,EAAhB/M,YACR7U,EAASwZ,GAAU,CAAC5E,GAAoBC,MAFtC/b,EAAAE,KAAA,EAKI2d,GAAkBvH,EAAlBuH,CAAuB3W,GAL3B,OAOFA,EAASqF,EAAS,CACdwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAU8H,QACrBvf,QAAS,gCAIjBiI,EAAStF,YAAW,CAAE+E,UAClB2hB,GACAA,IAhBF,wBAAAtoB,EAAAU,SAAAZ,EAAAa,SADH,gBAAA4G,GAAA,OAAA0B,EAAArI,MAAAD,KAAAE,YAAA,IAoBF2X,MApBE,eAAAkG,EAAAtgB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAoBI,SAAAuB,EAAOxD,GAAP,OAAA2F,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACCqoB,GACAA,KAEA3qB,EAAMqB,QAAQiF,MAAM,uCAAwCtG,EAAMqB,QAAQiF,MAAMoS,EAAIyS,OAAOC,kBAJ5F,CAAA1nB,EAAApB,KAAA,cAKO,IAAIK,MAAM+G,MALjB,aAOHlI,YAA8BxB,EAAO,CACjC2B,YAAa,sBACb4E,YAAa,qCAEXvG,EAXH,wBAAA0D,EAAAZ,SAAAU,EAAAT,SApBJ,gBAAA6G,GAAA,OAAAkX,EAAA9d,MAAAD,KAAAE,YAAA,KADW,wBAAA+F,EAAAlG,SAAA+F,EAAA9F,SAtBrB,gBAAA8G,GAAA,OAAAV,EAAAnG,MAAAD,KAAAE,YAAA,GA0DKgoB,EAAY,WACd3hB,EAAStF,YAAW,CAAE+E,UAClB4hB,GACAA,KAIRrhB,EAASvF,YAASumB,GAAkBvhB,EAAMyN,EAAawU,EAAeC,EAAWb,KAjEhF,yBAAAlJ,EAAApe,SAAAie,EAAAhe,SAVoB,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,IA8EZooB,GAAc,SACvB3S,EACAmD,GAFuB,sBAAAmG,EAAAxhB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAGtB,SAAAqpB,EAAOhiB,GAAP,OAAA3D,EAAA3D,EAAAG,KAAA,SAAAopB,GAAA,cAAAA,EAAAlpB,KAAAkpB,EAAAjpB,MAAA,cAAAipB,EAAA9oB,OAAA,SAEM,IAAI8H,QAAQ,SAACxE,GAEhB,IAAMgD,EAAOE,SAEPsW,EAAQ,WACVjW,EAAStF,YAAW,CAAE+E,UACtBhD,KAGJuD,EAAS0Z,GAAsB,CAAEnH,UAAS2P,iBAAiB,KAC3D,IAAMC,EAAe,eAAAC,EAAAlrB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAA0pB,IAAA,IAAAC,EAAAhM,EAAA,OAAAja,EAAA3D,EAAAG,KAAA,SAAA0pB,GAAA,cAAAA,EAAAxpB,KAAAwpB,EAAAvpB,MAAA,cAAAupB,EAAAvpB,KAAA,EACSoW,EAAI2S,YAAYxP,EAAS,CAAE4D,mBAAmB,IADvD,UAAAmM,EAAAC,EAAAloB,KACZic,EADYgM,EACZhM,WADY,CAAAiM,EAAAvpB,KAAA,cAGV,IAAIK,MAAM,0BAHA,cAAAkpB,EAAAppB,OAAA,SAKbmd,EACFE,GAAG,kBADDtf,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KACoB,SAAAggB,IAAA,OAAAtc,EAAA3D,EAAAG,KAAA,SAAA+f,GAAA,cAAAA,EAAA7f,KAAA6f,EAAA5f,MAAA,OAEnBid,IAFmB,wBAAA2C,EAAApf,SAAAmf,EAAAlf,UAItBuL,KAAK,WAEFhF,EAASyZ,GAAkB,CAAElH,UAASqI,YAAajH,cAAY6O,YAE/D,IAAM3R,EAAK,eAAA4R,EAAAvrB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAA+pB,IAAA,OAAArmB,EAAA3D,EAAAG,KAAA,SAAA8pB,GAAA,cAAAA,EAAA5pB,KAAA4pB,EAAA3pB,MAAA,OACVgH,EAASqF,EAAS,CACdwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAU8H,QACrBvf,QAAS,qCAGjBiI,EAAS0Z,GAAsB,CAAEnH,UAAS2P,iBAAiB,KAPjD,wBAAAS,EAAAnpB,SAAAkpB,EAAAjpB,SAAH,yBAAAgpB,EAAA/oB,MAAAD,KAAAE,YAAA,GASXqG,EAASiR,GAAgB,CAAEuC,GAAE,WAAA1b,OAAaya,GAAWgF,OAAQ1G,OAEhES,MAAM,SAAC5a,GAGJ,MADAsJ,EAAS0Z,GAAsB,CAAEnH,UAAS2P,iBAAiB,KACrDxrB,KA5BM,wBAAA6rB,EAAA/oB,SAAA6oB,EAAA5oB,SAAH,yBAAA2oB,EAAA1oB,MAAAD,KAAAE,YAAA,GAgCrBqG,EAASvF,YAASmX,GAAiBnS,EAAM0iB,EAAiBlM,QA5C7D,wBAAAgM,EAAAzoB,SAAAwoB,EAAAvoB,SAHsB,gBAAAmpB,GAAA,OAAAlK,EAAAhf,MAAAD,KAAAE,YAAA,IC1FdkpB,GAAb,SAAArnB,GACI,SAAAqnB,EAAY9nB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAopB,IACtBpnB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA2rB,GAAAhnB,KAAApC,KAAMsB,KAsBO+nB,aAAe,SAAC5f,GAAyC,IAAA6f,EACjC7f,EAAM8f,cAAcC,wBAAjDC,EAD8DH,EAC9DG,IAAKC,EADyDJ,EACzDI,KAAMC,EADmDL,EACnDK,MAAOC,EAD4CN,EAC5CM,OAC1B5nB,EAAKS,SAAS,CACVgnB,IAAKA,EAAMG,EAAS,EACpBF,KAAMA,EAAOC,EAAQ,KAzBzB3nB,EAAKmB,MAAQ,CACTsmB,IAAK,EACLC,KAAM,GAJY1nB,EAD9B,OAAAvE,OAAAiG,EAAA,EAAAjG,CAAA2rB,EAAArnB,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAA2rB,EAAA,EAAAxrB,IAAA,SAAAgE,MAAA,WAaqC,IAAAkB,EACD9C,KAAKsB,MAAzB/D,EADqBuF,EACrBvF,MAAOssB,EADc/mB,EACd+mB,SACTC,EAAWvsB,GAASyY,GAAW+T,KACrC,OACIlmB,EAAA,qBAAKrC,UAAU,SACXqC,EAAA,qBAAKrC,UAAS,eAAAnD,OAAiByrB,EAAjB,UAAmCT,aAAcrpB,KAAKqpB,eACpExlB,EAAA,qBAAKmmB,MAAOhqB,KAAKmD,MAAO3B,UAAU,kBAAkBqoB,GAAsB,SAnB1FT,EAAA,CAA+BjlB,aCyBzB8lB,eAIF,SAAAA,EAAmB3oB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiqB,IAC9CjoB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwsB,GAAA7nB,KAAApC,KAAMsB,EAAO4oB,KAJTC,aAG0C,EAAAnoB,EAF1CooB,cAE0C,EAE9CpoB,EAAKmB,MAAQ,CACTknB,iBAAiB,EACjBC,gBAAgB,EAChBC,aAAc,GAL4BvoB,yFASjBwoB,GAAwB,IAAAzS,EAAA/X,KAEjDA,KAAKsB,MAAM8S,aAAa6M,KAAOuJ,EAAUpW,aAAa6M,KAClDjhB,KAAKmD,MAAMmnB,gBACXtqB,KAAKyC,SAAS,CAAE4nB,iBAAiB,IAE7BrqB,KAAKmqB,SAAWM,aAAazqB,KAAKmqB,SACtCnqB,KAAKmqB,QAAU/c,WACX,WAAQ2K,EAAKtV,SAAS,CAAE4nB,iBAAiB,KACzC,MAGJrqB,KAAKyC,SAAS,CAAE6nB,gBAAgB,IAE7BtqB,KAAKsB,MAAM8S,aAAa6M,KAAOuJ,EAAUpW,aAAa6M,MAE7DjhB,KAAKyC,SAAS,CAAE4nB,iBAAiB,mDAKjCrqB,KAAKmqB,SAAWM,aAAazqB,KAAKmqB,SAClCnqB,KAAKoqB,UAAYK,aAAazqB,KAAKoqB,2CAOV,IAAAM,EAAA1qB,KACrB2qB,EAAiB3qB,KAAKsB,MAAtBqpB,aACAvW,EAAiBpU,KAAKsB,MAAtB8S,aACJmW,EAAe,KACnB,GAAInW,EAAa6M,KAAO,EAAG,CAGvB,IAAM2J,EAAYxW,EACb5I,IAAI,SAAC4P,GAAD,OAAoC9N,EAAiB8N,EAAYf,qBAAqBX,QAC1FmR,OAAO,SAACC,EAAaC,GAAd,OAA8Bje,KAAKie,IAAID,EAAKC,IAAMpf,EAAc6B,KAExExN,KAAKoqB,UAAYK,aAAazqB,KAAKoqB,UACvCpqB,KAAKoqB,SAAWhd,WACZ,WACIsd,EAAKvF,eAETyF,EAAY,GAGhBL,EAAevqB,KAAKgrB,eAGxB,OACInnB,EAAA,qBAAKrC,UAAU,gCACXqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBAGIA,EAAA,oCACAA,EAAA,gCACAA,EAAA,8BACAA,EAAA,iCACAA,EAAA,kCACAA,EAAA,kCACAA,EAAA,qCAGRA,EAAA,2BACK0mB,GAAgBA,EAAa3kB,OAAS,OAClB8E,IAAjBigB,EAA6BJ,EAAa/lB,MAAM,EAAGmmB,GAAgBJ,EAEnE1mB,EAAA,wBACIA,EAAA,oBAAIonB,QAAS,GAAb,wGASDnS,kFACO9Y,KAAKsB,MAA3BqU,QAAKvB,iBAERuB,GAAQvB,4EAOHpU,KAAKsB,MAAM4hB,QAAQoF,YAAY3S,EAAKmD,0DAE1Cra,YAA6BY,EAAAM,GAAQ,CACjCf,YAAa,6CACb4E,YAAa,WACbsV,YAEJ9Y,KAAKsB,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAUnW,MAErBtB,QAAS,gLAMwB,IAAA4sB,EAAAlrB,KAAAmrB,EACKnrB,KAAKsB,MAA/C8S,EADqC+W,EACrC/W,aAAcuB,EADuBwV,EACvBxV,IAAKtB,EADkB8W,EAClB9W,WAAY3B,EADMyY,EACNzY,OAC/B2X,EAAoBrqB,KAAKmD,MAAzBknB,gBAEFe,EAAgBzV,EAAIyJ,SAASC,cAInC,OAFe3M,EAAS0B,EAAa1B,OAAOA,GAAU0B,GAGjDiJ,WACAC,UACA+N,UACA7f,IAAI,SAAC4U,EAA0BxiB,GAE5B,IAAM0tB,EAAera,EAAakB,IAAIiO,EAAM/F,qBAAqBf,WAAYpI,GACvEqa,EAAiBta,EAAakB,IAAIiO,EAAM/F,qBAAqBd,aAAcrI,GAE3Esa,GAAapL,EAAM3M,YAAYC,OAASC,YAAU8X,KAAOF,EAAiBD,GAAcna,OACxFua,GAAatL,EAAM3M,YAAYC,OAASC,YAAU8X,KAAOH,EAAeC,GAAgBpa,OAKxFwa,EAAUvL,EAAM/F,qBAAqBb,cACrCoS,EAAQxL,EAAM/F,qBAAqBZ,YAEnCoS,EAAgD,kBAA5BzL,EAAM3M,YAAYtE,MACxCiR,EAAM3M,YAAYtE,MAAMnB,UACxBoS,EAAM3M,YAAYtE,MAAMjG,WAE5B,OACIrF,EAAA,oBAAIjG,IAAKA,EAAK4D,UAAS,GAAAnD,OAAK+hB,EAAMnG,OAAO3O,cAAlB,KAAAjN,OAA2C,IAART,GAAaysB,EAAkB,SAAW,KAChGxmB,EAAA,wBAAIA,EAAA,sBAAMrC,UAAU,aAAa4e,EAAMrG,KACvClW,EAAA,oBAAIrC,UAAU,gBACVqC,EAAA,0BAAO+nB,EAAM1iB,WAAb,IAA0BoiB,EAAana,SAE3CtN,EAAA,oBAAIrC,UAAU,gBACVqC,EAAA,0BAAO8nB,EAAQziB,WAAf,IAA4BqiB,EAAepa,SAE/CtN,EAAA,oBAAIrC,UAAU,gBAAd,GAAAnD,OAAiCwtB,EAAjC,KAAAxtB,OAA+CmtB,EAA/C,QAAAntB,OAA+DqtB,IAC/D7nB,EAAA,oBACIrC,UAAU,SACVyW,MACI9L,IAAyC,IAAlCiU,EAAM/F,qBAAqBX,MAC7BoS,OAAO,2BAGhBjoB,EAAA,0BAAOiI,EAAYsU,EAAM/F,qBAAqBX,KAAM,CAAEpb,QAAS,WAAYuO,OAAQ,MAAOX,WAAW,MAEzGrI,EAAA,oBAAIrC,UAAU,UAEN4e,EAAMnG,SAAWC,cAAYC,cACzBtW,EAAA,cAACzC,GAAA,EAAD,MACAyC,EAAA,0BA5LV,SAACoW,GACvB,OAAQA,GACJ,KAAKC,cAAYC,cAAe,MAAO,UACvC,KAAKD,cAAY6R,iBAAkB,MAAO,SAC1C,KAAK7R,cAAYmG,KAAM,MAAO,OAC9B,KAAKnG,cAAYoG,UAAW,MAAO,WACnC,KAAKpG,cAAY6O,SAAU,MAAO,WAClC,KAAK7O,cAAYoH,QAAS,MAAO,UACjC,KAAKpH,cAAY8R,QAAS,MAAO,UACjC,QACI,MAAO,WAkLwBC,CAAkB7L,EAAMnG,QAC1BmG,EAAM/F,qBAAqB3K,kBAAoBC,kBAAgBC,aAC5DwQ,EAAMnG,SAAWC,cAAYoG,WAC5B8K,EAEC,KADFvnB,EAAA,cAACqoB,GAAD,CAAW3uB,MAAOyY,GAAWgB,SAA7B,mCAMpBnT,EAAA,oBAAIrC,UAAU,UAEN4e,EAAMnG,SAAWC,cAAYmG,KACzBhM,EAAWlC,IAAIiO,EAAMrG,IAAI,GACrBlW,EAAA,cAACzC,GAAA,EAAD,MAEAyC,EAAA,sBACIrC,UAAU,QACVmjB,KAAK,SAELzM,QAASgT,EAAKiB,aAAaC,KAAKlB,EAAM9K,EAAMrG,KAJhD,QAUJlW,EAAA,0CAxMIM,aAyO3BkoB,GAAuBnI,YAxBZ,SAAC/gB,GAAD,MAA6B,CACjDkR,WAAYlR,EAAMmpB,WAAWjY,WAC7BD,aAAcjR,EAAMmpB,WAAWlY,aAC/BuB,IAAKxS,EAAMwS,IAAIA,MAGQ,SAACpP,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBmE,eACA1c,YACDrF,KAc6B2d,CAA6C+F,ICrP3EsC,eACF,SAAAA,EAAmBjrB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAusB,IAC9CvqB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA8uB,GAAAnqB,KAAApC,KAAMsB,EAAO4oB,KA4HApO,SA7HiC,eAAAhd,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KA6HtB,SAAAC,EAAOsK,GAAP,IAAA3G,EAAA6S,EAAAL,EAAAE,EAAAgX,EAAA9iB,EAAA+iB,EAAAC,EAAAC,EAAA,OAAA/pB,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuD,EAE8Bd,EAAKV,MAAnDqU,EAFgB7S,EAEhB6S,IAAKL,EAFWxS,EAEXwS,eAAgBE,EAFL1S,EAEK0S,qBACrBgX,EAAsBxqB,EAAKmB,MAA3BqpB,kBAEF9iB,EAAWD,EAAME,OACjB8iB,EAAW/iB,EAAQ9H,MAEnB8qB,EAAiBlX,EAAqBrD,IAAIsa,GARxB,CAAAptB,EAAAE,KAAA,eAWpByC,EAAKV,MAAM4hB,QAAQtX,SAAS,CAAEwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,4CAXtCe,EAAAK,OAAA,qBAepB8sB,EAfoB,CAAAntB,EAAAE,KAAA,gBAgBpByC,EAAKV,MAAM4hB,QAAQtX,SAAS,CAAEwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,2DAhBtCe,EAAAK,OAAA,yBAoBxBsC,EAAKS,SAAS,CAAEmqB,YAAaH,IAEvBE,EAAS,WACX,IACI3qB,EAAKS,SAAS,CAAEmqB,YAAa,OAC/B,MAAAC,MAzBkBxtB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAgCdyC,EAAKV,MAAM4hB,QAAQpH,SACrBnG,EAAKL,EAAgBE,EAAsBkX,EAAe1e,UAAWye,EAAUE,GAjC/D,QAAAttB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,UAoChBA,EAAAM,GAAMrB,UAAYqI,OAClBlI,YAA6BY,EAAAM,GAAQ,CAAEf,YAAa,sCAAuC4E,YAAa,aAExGxB,EAAKV,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAUnW,MACrBtB,QAASe,EAAAM,GAAMrB,SAANe,EAAAM,QAIrBgtB,IA9CoB,yBAAAttB,EAAAU,SAAAZ,EAAAa,KAAA,cA7HsB,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,GAE9C8B,EAAKmB,MAAQ,CACT2pB,mBAAoB,EACpBN,mBAAmB,EACnBI,YAAa,MAL6B5qB,yFASjBwoB,GAAwB,IAC7C/V,EAAmB+V,EAAnB/V,eAIR,GAAIA,EAAewM,OAASjhB,KAAKmD,MAAM2pB,oBAAsB9sB,KAAKmD,MAAMqpB,kBAAmB,CACvFxsB,KAAKyC,SAAS,CAAEqqB,mBAAoBrY,EAAewM,OACnD,IAAMuL,EAAoB/X,EAAe/B,OAAO,SAAC4P,GAC7C,YAAgB5X,IAAT4X,GAAsBA,EAAK3H,SAAWC,oBAAkBC,UAAYyH,EAAKrI,SAAWe,oBAAkBC,UAC9GgG,KAAO,EACNuL,IAAsBxsB,KAAKmD,MAAMqpB,mBACjCxsB,KAAKyC,SAAS,CAAE+pB,wDAWxB,IAAMjC,EAAevqB,KAAKgrB,eAE1B,OAAOnnB,EAAA,qBAAKrC,UAAU,8BAClBqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBACIA,EAAA,iCACAA,EAAA,yCAEQA,EAAA,cAACqoB,GAAD,8EAERroB,EAAA,yCAEQA,EAAA,cAACqoB,GAAD,yGAERroB,EAAA,2BAGRA,EAAA,2BACK0mB,GAAgBA,EAAa3kB,OAAS,EACnC2kB,EACA1mB,EAAA,wBAAIA,EAAA,oBAAIonB,QAAS,GAAb,0DAOkB,IAAAlT,EAAA/X,KAAAmrB,EAC4BnrB,KAAKsB,MAA/DgU,EAD8B6V,EAC9B7V,eAAgBE,EADc2V,EACd3V,qBAAsBW,EADRgV,EACQhV,gBACtCyW,EAAgB5sB,KAAKmD,MAArBypB,YAEFG,EAA0B,GA2DhC,OA1DAta,EAAY0D,GACPxY,QAAQ,SAACgV,GAAqB,IAAAqa,EACa/b,EAAakB,IAAIQ,EAAOzB,GAAxD9Q,EADmB4sB,EACnB5sB,KAAM+Q,EADa6b,EACb7b,OAAQC,EADK4b,EACL5b,KAAMrL,EADDinB,EACCjnB,QACtBqW,EAAU9G,EAAenD,IAAIQ,EAAO,MACpCsa,EAAgBzX,EAAqBrD,IAAIQ,EAAO,MAEtD,IAAIyJ,IAAWA,EAAQtO,SAAvB,CAIA,IAWIof,EAXEC,EAAgB/Q,GAAW6Q,EAAgB7Q,EAAQuK,MAAMsG,GAAiB7Q,EAE1EgR,GAAuBD,GAAiBA,EAAcrf,SAAhC,GAExBjK,EAAA,sBAAMrC,UAAU,OAAO2rB,EAAcnf,UAArC,IAAiDmD,GAE/Ckc,EAA+C,OAAlBJ,EAA0BA,EAAcjf,UAAY,IAGjFsf,EAAQ5H,MAAQ,KAAArnB,OAAa+S,IAGnC,GAAIuB,IAAU7C,QAAMG,IAAK,CACrB,IAAMsd,EAAS,GAAAlvB,OAAMyG,IAAY0oB,UAAlB,WAAAnvB,OAAqC0H,GACpDmnB,EACIrpB,EAAA,mBAAGrC,UAAU,iBAAiBkiB,KAAM6J,EAAWE,IAAI,sBAAsB9jB,OAAO,SAASsO,MAAM,qBAC3FpU,EAAA,qCAGZkpB,EAAK3F,KACDvjB,EAAA,oBAAIjG,IAAK+U,GACL9O,EAAA,wBACIA,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAK0H,IACrCzpB,EAAA,6BAAAxF,OAAU+B,EAAV,MACC8sB,GAELrpB,EAAA,wBACK+oB,IAAgBja,EAAQ,GAAKya,EACjB,OAAZhR,GACGvY,EAAA,cAACqoB,GAAD,CAAW3uB,MAAOyY,GAAWgB,SAA7B,6BAAiE7F,EAAjE,cAGRtN,EAAA,2BAAAxF,OACQgvB,EADR,KAAAhvB,OACqC8S,GACd,OAAlB8b,GACGppB,EAAA,cAACqoB,GAAD,CAAW3uB,MAAOyY,GAAWgB,SAA7B,6BAAiE7F,EAAjE,cAGRtN,EAAA,oBAAIrC,UAAU,UACTorB,IAAgBja,EACb9O,EAAA,cAACzC,GAAA,EAAD,MACAyC,EAAA,wBAAQ4f,SAA0B,OAAhBmJ,EAAsBhrB,MAAO+Q,EAAOuF,QAASH,EAAK+D,UAApE,kBAOjBiR,SA3HsB5oB,aA2MxBupB,GAAoBxJ,YA1BT,SAAC/gB,GAAD,MAA6B,CACjDoS,sBAAuBpS,EAAM6W,OAAOzE,sBACpCd,eAAgBtR,EAAMsR,eAAeA,eACrCa,eAAgBnS,EAAM6W,OAAO1E,eAC7BlB,aAAcjR,EAAMmpB,WAAWlY,aAC/BoB,qBAAsBrS,EAAM6W,OAAOxE,qBACnCG,IAAKxS,EAAMwS,IAAIA,IACfQ,gBAAiBhT,EAAMwS,IAAIQ,kBAGJ,SAAC5P,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBvY,WACAkQ,aACDvV,KAY0B2d,CAA6CqI,IC/MxEoB,GAAc,SAACvN,GAAD,OAChBA,EAAM/F,qBAAqB3K,kBAAoBC,kBAAgB+B,OAC/D0O,EAAMnG,SAAWC,cAAYmG,MAK3BuN,eAEF,SAAAA,EAAmBtsB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA4tB,IAC9C5rB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAmwB,GAAAxrB,KAAApC,KAAMsB,EAAO4oB,KAkBV2D,cAAgB,WACnB,OAAOhqB,EAAA,cAAAA,EAAA,cACHA,EAAA,mCACAA,EAAA,qBAAKrC,UAAU,mBACXqC,EAAA,qBAAKrC,UAAU,0BACXqC,EAAA,yCACmBA,EAAA,mCADnB,yGAKJA,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKzC,MAAtB,YA9BkCyC,EAqD3C8rB,mBAAqB,WAAmB,IAGrCC,EAF2B/rB,EAAKV,MAA9B6T,uBAGqBC,yBAAuB4O,kBAEpD,OAAOngB,EAAA,cAAAA,EAAA,cACHA,EAAA,4CACAA,EAAA,qBAAKrC,UAAU,mBAEXqC,EAAA,qBAAKrC,UAAU,0BACXqC,EAAA,wGAIJA,EAAA,qBAAKrC,UAAU,oBACXqC,EAAA,cAACogB,GAAD,OAEJpgB,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKgsB,UAAtB,YACCD,EACGlqB,EAAA,wBAAQqU,QAASlW,EAAKzC,MAAtB,SACAsE,EAAA,wBAAQqU,QAASlW,EAAKzC,KAAMiC,UAAU,gBAAtC,YA3E8BQ,EAkF3CisB,mBAAqB,WAAmB,IAGrCF,EAFmB/rB,EAAKV,MAAtB8S,aAEuB1B,OAAOib,IAAa1M,KAAO,EAE1D,OAAOpd,EAAA,cAAAA,EAAA,cACHA,EAAA,6CACAA,EAAA,qBAAKrC,UAAU,mBAEXqC,EAAA,qBAAKrC,UAAU,0BACXqC,EAAA,8OASJA,EAAA,qBAAKrC,UAAU,oBACXqC,EAAA,cAACwoB,GAAD,CAAsB3Z,OAAQib,MAElC9pB,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKgsB,UAAtB,YACCD,EACGlqB,EAAA,wBAAQqU,QAASlW,EAAKzC,MAAtB,SACAsE,EAAA,wBAAQqU,QAASlW,EAAKzC,KAAMiC,UAAU,gBAAtC,YA5G8BQ,EAmH3CksB,eAAiB,WAAmB,IAGjCH,EAFqB/rB,EAAKV,MAAxBgU,eAE0B5C,OAC9B,SAAC0J,GAAD,OACgB,OAAZA,IACCA,EAAQtO,WAAWmT,KAAO,EAGnC,OAAOpd,EAAA,cAAAA,EAAA,cACHA,EAAA,oDACAA,EAAA,qBAAKrC,UAAU,mBAEXqC,EAAA,qBAAKrC,UAAU,0BACXqC,EAAA,yFAEJA,EAAA,qBAAKrC,UAAU,oBACXqC,EAAA,cAAC6pB,GAAD,OAEJ7pB,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKgsB,UAAtB,YACCD,EACGlqB,EAAA,wBAAQqU,QAASlW,EAAKzC,MAAtB,SACAsE,EAAA,wBAAQqU,QAASlW,EAAKzC,KAAMiC,UAAU,gBAAtC,YA1I8BQ,EAiJ3CmsB,YAAc,WACjB,OAAOtqB,EAAA,cAAAA,EAAA,cACHA,EAAA,qBAAKrC,UAAU,mBACXqC,EAAA,uCACAA,EAAA,qBAAKrC,UAAU,2BACfqC,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKgsB,UAAtB,YACAnqB,EAAA,wBAAQqU,QAASlW,EAAK2f,KAAMngB,UAAU,gBAAtC,aAxJkCQ,EA8J3CosB,cAAgB,WACnB,OAAOvqB,EAAA,cAAAA,EAAA,cACHA,EAAA,qBAAKrC,UAAU,mBACXqC,EAAA,cAACzC,GAAA,EAAD,MACAyC,EAAA,yBACAA,EAAA,qBAAKrC,UAAU,sBACXqC,EAAA,wBAAQqU,QAASlW,EAAKgsB,UAAtB,YACAnqB,EAAA,wBAAQqU,QAASlW,EAAKzC,MAAtB,YArKkCyC,EA8KjCqsB,MAAQ,WAAgC,IAAAvrB,EACRd,EAAKV,MAA1CmU,EAD6C3S,EAC7C2S,iBAAkBC,EAD2B5S,EAC3B4S,eAEpB4Y,EAAW,GAmBjB,OAlBAA,EAASlH,KAAKplB,EAAK6rB,eAEnBS,EAASlH,KAAKplB,EAAK8rB,oBAEI,OAAnBpY,EACA4Y,EAASlH,KAAKplB,EAAKosB,gBACO,IAAnB1Y,GACP4Y,EAASlH,KAAKplB,EAAKisB,oBAGE,OAArBxY,EACA6Y,EAASlH,KAAKplB,EAAKosB,gBACS,IAArB3Y,GACP6Y,EAASlH,KAAKplB,EAAKksB,gBAGvBI,EAASlH,KAAKplB,EAAKmsB,aAEZG,GApMuCtsB,EAuMjCzC,KAAO,WACpByC,EAAKS,SAAS,CAAE8rB,KAAMvsB,EAAKmB,MAAMorB,KAAO,KAxMMvsB,EA2MjCgsB,SAAW,WACxBhsB,EAAKS,SAAS,CAAE8rB,KAAMvsB,EAAKmB,MAAMorB,KAAO,KA5MMvsB,EA+MjC2f,KAAO,WAAY,IACxB5b,EAAY/D,EAAKV,MAAjByE,QACJA,GACA/D,EAAKV,MAAM4hB,QAAQlB,cAAc,CAAEjc,UAASic,eAAe,IAE/DhgB,EAAKV,MAAMqrB,UAlNX3qB,EAAKmB,MAAQ,CACTorB,KAAM,GAHoCvsB,wEAWjB,IACrBusB,EAASvuB,KAAKmD,MAAdorB,KAER,OAAO1qB,EAAA,qBAAKrC,UAAU,mBACjBxB,KAAKquB,QAAQE,aAjBQpqB,aAqPrBqqB,GAAiBtK,YA3BN,SAAC/gB,GAAD,MAA6B,CACjDmS,eAAgBnS,EAAM6W,OAAO1E,eAC7BlB,aAAcjR,EAAMmpB,WAAWlY,aAE/BsB,eAAgBvS,EAAM6W,OAAOtE,eAC7BD,iBAAkBtS,EAAM6W,OAAOvE,iBAE/BN,qBAAsBhS,EAAM6W,OAAO7E,qBAEnCpP,QAAS5C,EAAM6W,OAAOjU,UAGC,SAACQ,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBnC,iBACA/gB,gBACDsF,KAWuB2d,CAA6C0J,IAE9Da,GAAoB,SAACzoB,EAAcoS,EAA4BsW,GAA3C,MAA0F,CACvH1oB,OACAQ,MAAO3C,EAAA,cAAC2qB,GAAD,CAAgB7B,OAAQ+B,IAC/BpW,aAAa,EACb5R,SAAU0R,aCjRDuW,GAAUC,wBC4BVC,GAAe1tB,+BAAqB,gBAArBA,GAEf2tB,GAAW3tB,+BAAqB,YAArBA,GAKXyd,GAAsBzd,+BAAqB,yBAArBA,GAKtB+f,GAAoB/f,+BAAqB,uBAArBA,GAEpB4tB,GAAS,SAACpZ,EAAehU,GAAhB,sBAAA7C,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAiD,SAAAC,EAAOoH,GAAP,OAAA3D,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGnEgH,EAASsoB,GAAa,OAGtBtoB,EAASsZ,GAAU,CAAErM,OAAQnG,EAAKoD,WAGlClK,EAAS+U,GAAqB,CAAES,SAAUxM,iBAC1ChJ,EAASgV,GAA2B,CAAES,eAAgBzM,iBACtDhJ,EAASmV,GAA4B,CAAEuC,gBAAiB1O,iBACxDhJ,EAASoV,GAAqB,CAAE3G,eAAgBzF,iBAEhDhJ,EAASqV,GAAsB,CAAE1G,gBAAiB3F,iBAClDhJ,EAASwb,GAAY,CAAE5Z,OAAQ,QAG/BwN,EAAIqZ,eAAe,IAAIrpB,IAAKkQ,UAAUC,aAAaxQ,MACnDqQ,EAAIsZ,WAAW,IAEf9xB,iBAAsB,SAACC,GACnBA,EAAMS,SAAS,YAAY,KAG3B8D,EAAQutB,SACRP,GAAQvH,KAAK,YAGb+H,SAASC,QAAQ,MA7B8C,yBAAA/vB,EAAAU,SAAAZ,EAAAa,SAAjD,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,IAiCTmvB,GAAQ,SACjB1Z,EACA2Z,EACAvpB,EACAic,EACArgB,GALiB,sBAAAyE,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAMhB,SAAAuB,EAAO8F,GAAP,IAAAP,EAAAwW,EAAA,OAAA5Z,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAES0L,aAAW,IAAItF,IAAK2pB,IAF7B,UAAA3uB,EAAAhB,GAAAgB,EAAAC,KAAAD,EAAA0C,GAEgDyB,IAAYyqB,WAF5D5uB,EAAAhB,KAAAgB,EAAA0C,GAAA,CAAA1C,EAAApB,KAAA,eAOGwvB,GAAOpZ,EAAK,CAAEuZ,QAAQ,GAAtBH,CAA+BxoB,GAC1BsR,MAAM,SAAC5a,GACJwB,YACIxB,EACA,CAAE2B,YAAa,8BAA+B4E,YAAa,SAX1E7C,EAAAjB,OAAA,iBAiBDvC,iBAAsB,SAACC,GACnBA,EAAMoyB,QAAQ,CAAEzV,GAAIhU,IACpB3I,EAAMS,SAAS,YAAY,KAI/B0I,EAASsoB,GAAa9oB,IAGtB4P,EAAIqZ,eAAeM,GACnB3Z,EAAIsZ,WAAWlpB,GAGf4P,EAAI8Z,oBACClkB,KAAK,SAAC6I,GAAD,OAAkB7N,EAASwZ,GAAU3L,EAAa5I,IAAI2P,QAC3DtD,MAAM,SAAC5a,GACJsB,YACItB,EACA,CAAE2B,YAAa,6CAI3B+W,EAAI+Z,sBAECnkB,KAAK,SAACokB,GAAD,OAAoBppB,EAAS0W,GAC/B0S,EAAenkB,IAAI,SAAAoR,GAAa,OAAI,IAAIlC,GAAoBkC,SAE/D/E,MAAM,SAAC5a,GACJsB,YACItB,EACA,CAAE2B,YAAa,+CAGvB+C,EAAQiuB,UACRjB,GAAQvH,KAAKzlB,EAAQsQ,IAAMtQ,EAAQsQ,IAAM,aAGxC+P,IACKhc,EAAOE,SACPsW,EAAQ,kBAAMjW,EAAStF,YAAW,CAAE+E,WAC1CO,EAASvF,YAASytB,GAAkBzoB,EAAMwW,EAAOA,MAzDpD,yBAAA7b,EAAAZ,SAAAU,EAAAT,SANgB,gBAAA8G,GAAA,OAAAV,EAAAnG,MAAAD,KAAAE,YAAA,IAmER2vB,GAAgB,SAACla,GAAD,sBAAArN,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAmB,SAAA4G,EAAOS,GAAP,IAAAd,EAAAM,EAAA,OAAAnD,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UACvCoW,EAAI1M,aADmC,CAAAhD,EAAA1G,KAAA,eAAA0G,EAAAvG,OAAA,wBAAAuG,EAAA1G,KAAA,EAKvBoW,EAAIma,UAAU9kB,IAC9BtF,cANuC,OAQ5CD,GAHIA,EALwCQ,EAAArF,MAQxB4K,IAAI,SAACukB,GAAD,OAAaA,EAAQzkB,gBAEvCvF,EAAU4P,EAAI1M,aACfqC,cAEA7F,EAASiG,SAAS3F,KACnB/H,QAAQ+K,KAAR,+CAAA1K,OAA4DsX,EAAI1M,aAAhE,aAAA5K,OAAwFoH,EAASuqB,KAAK,MAAtG,OACAjB,GAAOpZ,EAAK,CAAEuZ,QAAQ,GAAtBH,CAA8BxoB,GACzBsR,MAAM,SAAC5a,GACJsB,YAA6BtB,EAAO,CAChC2B,YAAa,2CAlBe,wBAAAqH,EAAAlG,SAAA+F,EAAA9F,SAAnB,gBAAA4G,GAAA,OAAA0B,EAAArI,MAAAD,KAAAE,YAAA,cCpIvB+vB,eAYF,SAAAA,EAAmB3uB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAiwB,IAC9CjuB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAwyB,GAAA7tB,KAAApC,KAAMsB,EAAO4oB,KARAgG,aAAe,IAOkBluB,EAF1CmuB,0BAE0C,EAAAnuB,EAwCjCouB,YAAc,WACvBpuB,EAAKmuB,sBAAwBE,cAAcruB,EAAKmuB,sBACpDnuB,EAAKV,MAAM4hB,QAAQrX,cA1C2B7J,yFAIjBwoB,GAAwB,IAC7ClsB,EAAYksB,EAAUpT,MAAtB9Y,QACQ,OAAZA,GAAoBA,IAAY0B,KAAKsB,MAAM8V,MAAM9Y,UAKjD0B,KAAKmwB,sBAAwB1F,aAAazqB,KAAKmwB,sBACnDnwB,KAAKmwB,qBAAuB/iB,WACxBpN,KAAKsB,MAAM4hB,QAAQrX,WACnB7L,KAAKkwB,gDAQoB,IACrB5xB,EAAY0B,KAAKsB,MAAM8V,MAAvB9Y,QACAyY,EAAc/W,KAAKsB,MAAM8V,MAAzBL,UACR,MAAgB,KAAZzY,EACOuF,EAAA,cAAAA,EAAA,eAIPA,EAAA,qBAAK8gB,KAAK,QAAQnjB,UAAS,SAAAnD,OAAW0Y,IAClClT,EAAA,sBAAMrC,UAAU,kBAAkBlD,GAClCuF,EAAA,sBAAM8gB,KAAK,SAASnjB,UAAU,eAAe0W,QAASlY,KAAKowB,aAA3D,gBA5CUjsB,aA0EbmsB,GAASpM,YAhBE,SAAC/gB,GAAD,MAA6B,CACjDiU,MAAOjU,EAAMiU,MAAMA,QAGI,SAAC7Q,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBtY,cACDtF,KASe2d,CAA6C+L,IC/EtDM,GAAepvB,+BAAqB,gBAArBA,GCDfqvB,GAAkBrvB,+BAAqB,oBAArBA,GAOlBsvB,GAAkB,SAAC9a,GAAD,sBAAA7W,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAmB,SAAAC,EAAOoH,GAAP,IAAA0N,EAAA,OAAArR,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAM,GAEzB0H,IAFyBhI,EAAAE,KAAA,EAEdoW,EAAI+a,eAAe,CAAEC,MAAO,KAFd,OAAAtxB,EAAAgE,GAAAhE,EAAAuB,KAExCqT,GAFwC,EAAA5U,EAAAM,IAAAN,EAAAgE,IAI9CkD,EAASiqB,GAAgB,CAAEvc,kBAJmB,wBAAA5U,EAAAU,SAAAZ,EAAAa,SAAnB,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,ICLlB0wB,GAAWzvB,+BAAqB,YAArBA,GAWX0vB,GAAe1vB,+BAAqB,iBAArBA,GCItB2vB,eAqBF,SAAAA,EAAmBxvB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA8wB,IAC9C9uB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAqzB,GAAA1uB,KAAApC,KAAMsB,EAAO4oB,KAdA6G,uBAaiC,EAAA/uB,EAZ1CgvB,kCAY0C,EAAAhvB,EAX1CivB,6BAW0C,EAAAjvB,EAV1CkvB,6BAU0C,EAAAlvB,EAT1CmvB,8BAS0C,EAAAnvB,EARjCovB,8BAQiC,EAAApvB,EAP1CqvB,iCAO0C,EAAArvB,EAN1CsvB,kCAM0C,EAAAtvB,EAL1CuvB,mCAK0C,EAAAvvB,EAJjCwvB,oCAIiC,EAAAxvB,EAH1CyvB,sCAG0C,EAAAzvB,EAsCjC0vB,WAAa,WAE1B,IAAMC,EAAiB,eAAA7yB,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAC,IAAA,IAAA2D,EAAA6S,EAAAxN,EAAA,OAAAvF,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuD,EACEd,EAAKV,MAArBqU,EADc7S,EACd6S,IAAKxN,EADSrF,EACTqF,QACTwN,EAAI1M,cAAgBd,IAAWjB,KAAO/G,SAFpB,CAAAd,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKRyC,EAAKV,MAAM4hB,QAAQ2M,cAAcla,GALzB,OAAAtW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOdd,YAA4Bc,EAAAM,GAAQ,CAAEf,YAAa,+CAPrC,QAUtBoD,EAAKmvB,yBAA2B/jB,WAAWukB,EAAmB,KAVxC,yBAAAtyB,EAAAU,SAAAZ,EAAAa,KAAA,YAAH,yBAAAlB,EAAAmB,MAAAD,KAAAE,YAAA,GAYvByxB,IACK9Z,MAAMtZ,KAGX,IAAMqzB,EAAqB,eAAAxrB,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAuB,IAAA,IAAA0qB,EAAAxV,EAAAwB,EAAA,OAAAvU,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAA4rB,EACKnpB,EAAKV,MAA5BqU,EADkBwV,EAClBxV,IAAKwB,EADagU,EACbhU,eACTxB,EAAI1M,aAFkB,CAAAtI,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAIhByC,EAAKV,MAAM4hB,QAAQhG,kBAAkBvH,EAAKwB,GAJ1B,OAM1BnV,EAAKgvB,6BAA+B5jB,WAAWwkB,EAAuB,KAN5C,wBAAAjxB,EAAAZ,SAAAU,EAAAT,SAAH,yBAAAoG,EAAAnG,MAAAD,KAAAE,YAAA,GAQ3B0xB,IACK/Z,MAAMtZ,KAGX,IAAMszB,EAAoB,eAAAvpB,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAA4G,IAAA,IAAA6P,EAAAmc,EAAA,OAAAlvB,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UACjBoW,EAAQ3T,EAAKV,MAAbqU,IACJmc,EAAQ,GACA,OAARnc,GAAqC,KAArBA,EAAI1M,aAHC,CAAAhD,EAAA1G,KAAA,gBAAA0G,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAMXyC,EAAKV,MAAM4hB,QAAQV,4BAA4B7M,GANpC,OAAA1P,EAAA1G,KAAA,gBAAA0G,EAAA3G,KAAA,EAAA2G,EAAAtG,GAAAsG,EAAA,SAQjB1H,YAA4B0H,EAAAtG,GAAQ,CAAEf,YAAa,oDARlC,QAAAqH,EAAA1G,KAAA,iBAWrBuyB,EAAQ,EAXa,QAazB9vB,EAAKqvB,4BAA8BjkB,WAAWykB,EAA8B,IAARC,GAb3C,yBAAA7rB,EAAAlG,SAAA+F,EAAA9F,KAAA,YAAH,yBAAAsI,EAAArI,MAAAD,KAAAE,YAAA,GAe1B2xB,IACKha,MAAMtZ,KAGX,IAAMwzB,EAAqB,eAAAhU,EAAAtgB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAA8e,IAAA,IAAArI,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,YAClBoW,EAAQ3T,EAAKV,MAAbqU,KACA1M,eAAgB0M,EAAIyJ,SAASC,cAFX,CAAAlB,EAAA5e,KAAA,gBAAA4e,EAAA7e,KAAA,EAAA6e,EAAA5e,KAAA,EAKZyC,EAAKV,MAAM4hB,QAAQlE,kBAAkBrJ,GALzB,OAAAwI,EAAA5e,KAAA,gBAAA4e,EAAA7e,KAAA,EAAA6e,EAAAxe,GAAAwe,EAAA,SAOlB5f,YAA4B4f,EAAAxe,GAAQ,CAAEf,YAAa,mDAPjC,QAU1BoD,EAAKsvB,6BAA+BlkB,WAAW2kB,EAAuB,KAV5C,yBAAA5T,EAAApe,SAAAie,EAAAhe,KAAA,YAAH,yBAAA+d,EAAA9d,MAAAD,KAAAE,YAAA,GAY3B6xB,IACKla,MAAMtZ,KAGX,IAAMyzB,EAAgB,eAAA/S,EAAAxhB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAggB,IAAA,IAAAvJ,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAA+f,GAAA,cAAAA,EAAA7f,KAAA6f,EAAA5f,MAAA,cACboW,EAAQ3T,EAAKV,MAAbqU,IADawJ,EAAA7f,KAAA,EAAA6f,EAAA5f,KAAA,EAIXyC,EAAKV,MAAM4hB,QAAQuN,gBAAgB9a,GAJxB,OAAAwJ,EAAA5f,KAAA,eAAA4f,EAAA7f,KAAA,EAAA6f,EAAAxf,GAAAwf,EAAA,SAMjB5gB,YAA4B4gB,EAAAxf,GAAQ,CAAEf,YAAa,8CANlC,OAQrBoD,EAAKivB,wBAA0B7jB,WAAW4kB,EAAkB,KARvC,yBAAA7S,EAAApf,SAAAmf,EAAAlf,KAAA,YAAH,yBAAAif,EAAAhf,MAAAD,KAAAE,YAAA,GAUtB8xB,IACKna,MAAMtZ,KAGX,IAAM0zB,EAAyB,eAAAtJ,EAAAlrB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAA0pB,EAAOsJ,GAAP,IAAAC,EAAAxc,EAAAlB,EAAA2d,EAAA,OAAAxvB,EAAA3D,EAAAG,KAAA,SAAA0pB,GAAA,cAAAA,EAAAxpB,KAAAwpB,EAAAvpB,MAAA,UAAA4yB,EACEnwB,EAAKV,MAA7BqU,EADsBwc,EACtBxc,IAAKlB,EADiB0d,EACjB1d,eACT2d,EAAWF,GACXvc,EAAI1M,aAHsB,CAAA6f,EAAAvpB,KAAA,gBAAAupB,EAAAxpB,KAAA,EAAAwpB,EAAAvpB,KAAA,EAOhByC,EAAKV,MAAM4hB,QAAQ/F,sBAAsBxH,EAAKlB,EAAiB2d,EAAW,KAAO,GAPjE,OAQtBA,GAAY,EARUtJ,EAAAvpB,KAAA,gBAAAupB,EAAAxpB,KAAA,EAAAwpB,EAAAnpB,GAAAmpB,EAAA,SAUtBvqB,YAA4BuqB,EAAAnpB,GAAQ,CAAEf,YAAa,uDAV7B,QAa9BoD,EAAKyvB,iCAAmCrkB,WAAU3P,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAC,SAAA+pB,IAAA,OAAArmB,EAAA3D,EAAAG,KAAA,SAAA8pB,GAAA,cAAAA,EAAA5pB,KAAA4pB,EAAA3pB,MAAA,cAAA2pB,EAAAxpB,OAAA,SAAYuyB,EAA0BG,IAAtC,wBAAAlJ,EAAAnpB,SAAAkpB,EAAAjpB,SAAiD,KAbtE,yBAAA8oB,EAAA/oB,SAAA6oB,EAAA5oB,KAAA,YAAH,gBAAAyD,GAAA,OAAAklB,EAAA1oB,MAAAD,KAAAE,YAAA,GAe/B+xB,EAA0B,GACrBpa,MAAMtZ,KAGX,IAAM8zB,EAAgB,eAAAC,EAAA70B,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAqpB,IAAA,IAAAuJ,EAAApR,EAAAC,EAAAC,EAAAE,EAAAC,EAAAwR,EAAAvJ,EAAAwJ,EAAArjB,EAAA+C,EAAA,OAAAtP,EAAA3D,EAAAG,KAAA,SAAAopB,GAAA,cAAAA,EAAAlpB,KAAAkpB,EAAAjpB,MAAA,OACjBuyB,EAAQ,GADStJ,EAAAlpB,KAAA,EAAAohB,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAA8d,EAAAlpB,KAAA,EAAAwhB,EAGExR,EAAM+N,WAAWC,UAHnBpX,OAAAwb,YAAA,UAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,KAAA,CAAA6G,EAAAjpB,KAAA,gBAGNgzB,EAHMxR,EAAAnf,MAAA4mB,EAAAjpB,KAAA,GAIwBqS,EAAS2gB,EAAK1iB,WAAY0iB,EAAKviB,WAJvD,QAAAgZ,EAAAR,EAAA5nB,KAAA4xB,EAAA/0B,OAAAuR,EAAA,EAAAvR,CAAAurB,EAAA,GAIN7Z,EAJMqjB,EAAA,GAICtgB,EAJDsgB,EAAA,GAKbxwB,EAAKV,MAAM4hB,QAAQqN,aAAa,CAAEphB,QAAO+C,gBAAeqgB,KAAMA,EAAK9iB,OALtD,QAAAiR,GAAA,EAAA8H,EAAAjpB,KAAA,gBAAAipB,EAAAjpB,KAAA,iBAAAipB,EAAAlpB,KAAA,GAAAkpB,EAAA7oB,GAAA6oB,EAAA,SAAA7H,GAAA,EAAAC,EAAA4H,EAAA7oB,GAAA,QAAA6oB,EAAAlpB,KAAA,GAAAkpB,EAAAlpB,KAAA,GAAAohB,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAA2G,EAAAlpB,KAAA,IAAAqhB,EAAA,CAAA6H,EAAAjpB,KAAA,eAAAqhB,EAAA,eAAA4H,EAAA1G,OAAA,mBAAA0G,EAAA1G,OAAA,YAAA0G,EAAAjpB,KAAA,iBAAAipB,EAAAlpB,KAAA,GAAAkpB,EAAAnlB,GAAAmlB,EAAA,SAQjBjqB,YAA4BiqB,EAAAnlB,GAAQ,CAAEzE,YAAa,8CACnDkzB,EAAQ,GATS,QAWrB9vB,EAAKkvB,wBAA0B9jB,WAAWilB,EAA0B,IAARP,GAXvC,yBAAAtJ,EAAAzoB,SAAAwoB,EAAAvoB,KAAA,sCAAH,yBAAAsyB,EAAAryB,MAAAD,KAAAE,YAAA,GAatBmyB,IACKxa,MAAMtZ,KAGX,IAAMk0B,EAAsB,eAAAC,EAAAj1B,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAG,SAAAyzB,EAAOT,GAAP,IAAAU,EAAAjd,EAAAvB,EAAAge,EAAA,OAAAxvB,EAAA3D,EAAAG,KAAA,SAAAyzB,GAAA,cAAAA,EAAAvzB,KAAAuzB,EAAAtzB,MAAA,UAAAqzB,EACG5wB,EAAKV,MAA3BqU,EADmBid,EACnBjd,IAAKvB,EADcwe,EACdxe,aACTge,EAAWF,GACXvc,EAAI1M,aAHmB,CAAA4pB,EAAAtzB,KAAA,gBAAAszB,EAAAvzB,KAAA,EAAAuzB,EAAAtzB,KAAA,EAabyC,EAAKV,MAAM4hB,QAAQ3C,mBAAmB5K,EAAKvB,EAAege,EAAW,MAAQ,GAbhE,OAcnBA,GAAY,EAdOS,EAAAtzB,KAAA,gBAAAszB,EAAAvzB,KAAA,EAAAuzB,EAAAlzB,GAAAkzB,EAAA,SAgBnBt0B,YAA4Bs0B,EAAAlzB,GAAQ,CAAEf,YAAa,oDAhBhC,QAmB3BoD,EAAKuvB,8BAAgCnkB,WAAU3P,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAAC,SAAA4zB,IAAA,OAAAlwB,EAAA3D,EAAAG,KAAA,SAAA2zB,GAAA,cAAAA,EAAAzzB,KAAAyzB,EAAAxzB,MAAA,cAAAwzB,EAAArzB,OAAA,SAAY+yB,EAAuBL,IAAnC,wBAAAW,EAAAhzB,SAAA+yB,EAAA9yB,SAA8C,KAnBnE,yBAAA6yB,EAAA9yB,SAAA4yB,EAAA3yB,KAAA,YAAH,gBAAA8G,GAAA,OAAA4rB,EAAAzyB,MAAAD,KAAAE,YAAA,GAqB5BuyB,EAAuB,GAClB5a,MAAMtZ,MA/KmCyD,EAsLjC6uB,aAtLiCpzB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAsLlB,SAAA8zB,IAAA,IAAArd,EAAAsd,EAAAC,EAAA/c,EAAAC,EAAAG,EAAAC,EAAAF,EAAAD,EAAA,OAAAzT,EAAA3D,EAAAG,KAAA,SAAA+zB,GAAA,cAAAA,EAAA7zB,KAAA6zB,EAAA5zB,MAAA,cACpBoW,EAAQ3T,EAAKV,MAAbqU,IADoBwd,EAAA5zB,KAAA,EAEwGiI,QAAQ+X,IAAI,CAC5I5J,EAAIyI,uBACJzI,EAAI2J,6BACJ3J,EAAIyd,0BACJzd,EAAI0d,0BACJ1d,EAAI2d,yBACJ3d,EAAI4d,iBARoB,OAAAN,EAAAE,EAAAvyB,KAAAsyB,EAAAz1B,OAAAuR,EAAA,EAAAvR,CAAAw1B,EAAA,GAErB9c,EAFqB+c,EAAA,GAEJ9c,EAFI8c,EAAA,GAEmB3c,EAFnB2c,EAAA,GAEuC1c,EAFvC0c,EAAA,GAE2D5c,EAF3D4c,EAAA,GAE8E7c,EAF9E6c,EAAA,GAW5BlxB,EAAKV,MAAM4hB,QAAQ2N,aAAa,CAC5B1a,gBAAiB9O,YAAK8O,GACtBC,sBAAuB/O,YAAK+O,GAC5BG,qBACAC,qBACAF,oBACAD,iBAAkBhP,YAAKgP,KAjBC,yBAAA8c,EAAApzB,SAAAizB,EAAAhzB,SApL5BgC,EAAKmB,MAAQ,GAFiCnB,2LAO9ChC,KAAK6wB,eACAtlB,KAAKvL,KAAK0xB,YACV7Z,MAAM7X,KAAK0xB,6JAKZ1xB,KAAK+wB,mBAAqBtG,aAAazqB,KAAK+wB,mBAC5C/wB,KAAKgxB,8BAAgCvG,aAAazqB,KAAKgxB,8BACvDhxB,KAAKixB,yBAA2BxG,aAAazqB,KAAKixB,yBAClDjxB,KAAKkxB,yBAA2BzG,aAAazqB,KAAKkxB,yBAClDlxB,KAAKmxB,0BAA4B1G,aAAazqB,KAAKmxB,0BACnDnxB,KAAKoxB,0BAA4B3G,aAAazqB,KAAKoxB,0BACnDpxB,KAAKqxB,6BAA+B5G,aAAazqB,KAAKqxB,6BACtDrxB,KAAKsxB,8BAAgC7G,aAAazqB,KAAKsxB,8BACvDtxB,KAAKuxB,+BAAiC9G,aAAazqB,KAAKuxB,+BACxDvxB,KAAKwxB,gCAAkC/G,aAAazqB,KAAKwxB,gCACzDxxB,KAAKyxB,kCAAoChH,aAAazqB,KAAKyxB,mEAQ/D,OAAO5tB,EAAA,cAAAA,EAAA,sBArDoBM,aA6PtBqvB,GAAkBtP,YA5BP,SAAC/gB,GAAD,MAA6B,CACjDsR,eAAgBtR,EAAMsR,eAAeA,eACrC0C,cAAehU,EAAMiU,MAAMD,cAC3BxB,IAAKxS,EAAMwS,IAAIA,IACfvB,aAAcjR,EAAMmpB,WAAWlY,aAC/BjM,OAAQhF,EAAM6W,OAAO7R,SAGE,SAAC5B,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxB5D,sBACAvB,qBACA9B,qBACAuT,mBACAZ,iBACArN,+BACAqO,gBACA1T,yBACAoT,iBACDhqB,KASwB2d,CAA6C4M,IC/QtE2C,eACF,SAAAA,EAAYnyB,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAyzB,IACtBzxB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAg2B,GAAArxB,KAAApC,KAAMsB,KAIHoyB,kBAAoB,SAACz2B,EAAc0B,GACtCqD,EAAKS,SAAS,CACVxF,QACA0B,cAEJD,YAA4BzB,EAAO0B,IAVbqD,EAwCT2xB,eAAiB,WAC9Bx2B,sBAvCA6E,EAAKmB,MAAQ,CAAElG,MAAO,KAAM0B,UAAW,MAFjBqD,wEAkBtB,OAAIhC,KAAKmD,MAAMxE,UAGPkF,EAAA,qBAAKrC,UAAWxB,KAAKsB,MAAMkF,MAAQ,QAAU,IACzC3C,EAAA,iDACAA,EAAA,yBAASmmB,MAAO,CAAE4J,WAAY,aACzB5zB,KAAKmD,MAAMlG,OAAS+C,KAAKmD,MAAMlG,MAAMiM,WACtCrF,EAAA,yBACC7D,KAAKmD,MAAMxE,UAAUk1B,gBAEzB7zB,KAAKsB,MAAMkF,MAAQ3C,EAAA,qBAAKrC,UAAU,kBAC/BqC,EAAA,wBAAQqU,QAASlY,KAAK2zB,gBAAtB,mBACA9vB,EAAA,wBAAQqU,QAASlY,KAAKsB,MAAMoF,UAA5B,UACK,MAMd1G,KAAKsB,MAAMuoB,gBAtCE1lB,aAgEf2vB,GAAU,SACnBjK,EACAloB,GAFmB,OAGlBkC,EAAA,cAACkwB,GAAD,CAAevtB,MAAO7E,GAAWA,EAAQ6E,MAAOE,SAAU/E,GAAWA,EAAQ+E,UACzEmjB,ICxDHmK,oLAM+B,IAAAlxB,EAC+E9C,KAAKsB,MAAzGqU,EADqB7S,EACrB6S,IAAKnC,EADgB1Q,EAChB0Q,OAAQgC,EADQ1S,EACR0S,qBAAsBP,EADdnS,EACcmS,qBAAsBkB,EADpCrT,EACoCqT,gBAAiBC,EADrDtT,EACqDsT,sBAC5Emc,EAAOjjB,EAAM6C,IAAIqB,OAAQ9I,GACzBupB,OAAkBvpB,IAAT6nB,GAAsBA,EAAK7iB,kBAAoBC,kBAAgBC,YACxE+B,EAASc,EAAY0D,GACrB+d,EAAephB,EAAkBsD,GAEvC,OACIvS,EAAA,qBAAKrC,UAAU,UACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,qBAAKrC,UAAU,mBACVyyB,GAAUte,EAAIyJ,SAASC,cACpBxb,EAAA,cAAAA,EAAA,cACIA,EAAA,gDACAA,EAAA,wBACK7D,KAAKm0B,aAAaD,EAAa5W,UAAWrI,KAInDpR,EAAA,cAAAA,EAAA,cACIA,EAAA,8CACAA,EAAA,wBACK7D,KAAKm0B,aAAaxiB,EAAO2L,UAAW9H,6CAahD7D,EAAqBoK,GACtC,IAAMgR,EAA0B,GAD4ErM,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAA,IAE5G,QAAAqW,EAAAD,EAAoBnP,EAApBzL,OAAAwb,cAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,MAAAjB,GAAA,EAA4B,KAAjB/N,EAAiBoO,EAAAnf,MAClBwa,EAAUL,EAAS5J,IAAIQ,EAAO,MAC9ByhB,EAA2B,OAAZhY,EAAoBA,EAAQpO,UAAY,IAFrCgf,EAIC/b,EAAakB,IAAIQ,EAAOzB,GAAzCC,EAJgB6b,EAIhB7b,OAAQC,EAJQ4b,EAIR5b,KAGVkc,EAAQ5H,MAAQ,KAAArnB,OAAa+S,IAEnC2b,EAAK3F,KACDvjB,EAAA,oBAAIjG,IAAK+U,GAEL9O,EAAA,uBAAGA,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAK0H,IAAxC,IAAmD8G,EAAnD,IAAiEjjB,MAd+B,MAAAkjB,GAAA1T,GAAA,EAAAC,EAAAyT,EAAA,YAAA3T,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAAlB,EAAA,MAAAC,GAmB5G,OAAOmM,SA5DkB5oB,aAoFpBmwB,GAAgBpQ,YApBL,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACfQ,gBAAiBhT,EAAMwS,IAAIQ,gBAC3BC,sBAAuBjT,EAAMwS,IAAIS,sBACjC5C,OAAQrQ,EAAMoxB,OAAO/gB,OACrBgC,qBAAsBrS,EAAM6W,OAAOxE,qBACnCP,qBAAsB9R,EAAM6W,OAAO/E,uBAGZ,SAAC1O,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,GACzB5d,KASsB2d,CAA6C8P,IChG7DQ,GAAb,SAAAzyB,GAAA,SAAAyyB,IAAA,OAAA/2B,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAw0B,GAAA/2B,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA+2B,GAAAv0B,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAA+2B,EAAAzyB,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAA+2B,EAAA,EAAA52B,IAAA,SAAAgE,MAAA,WAKqC,IAAAkB,EACE9C,KAAKsB,MAA5B2W,EADqBnV,EACrBmV,MAAOrZ,EADckE,EACdlE,YAEf,OACIiF,EAAA,qBAAKrC,UAAU,WACXqC,EAAA,oBAAIrC,UAAU,kBAAkByW,GAC/BrZ,GACGiF,EAAA,oBAAIrC,UAAU,wBAAd,IAAuC5C,EAAvC,UAZpB41B,EAAA,CAA6BrwB,aCcvBswB,eAaF,SAAAA,EAAmBnzB,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAy0B,IAC9CzyB,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAg3B,GAAAryB,KAAApC,KAAMsB,EAAO4oB,KARVwK,sBAO2C,EAAA1yB,EAF3C2yB,0BAE2C,EAE9C3yB,EAAKmB,MAAQ,CACTknB,iBAAiB,EACjBuK,kBAAkB,GAJwB5yB,yFAQjBwoB,GAAwB,IAAAzS,EAAA/X,KAEjDA,KAAKsB,MAAMmT,eAAewM,KAAOuJ,EAAU/V,eAAewM,OACtDjhB,KAAKmD,MAAMyxB,kBACX50B,KAAKyC,SAAS,CAAE4nB,iBAAiB,IAE7BrqB,KAAK00B,kBAAoBjK,aAAazqB,KAAK00B,kBAC/C10B,KAAK00B,iBAAmBtnB,WACpB,WACI2K,EAAKtV,SAAS,CAAE4nB,iBAAiB,KAErC,MAGJrqB,KAAKyC,SAAS,CAAEmyB,kBAAkB,oDAMtC50B,KAAK00B,kBAAoBjK,aAAazqB,KAAK00B,kBAC3C10B,KAAK20B,sBAAwBlK,aAAazqB,KAAK20B,uDAOtB,IAAAjK,EAAA1qB,KACrByU,EAAmBzU,KAAKsB,MAAxBmT,eACJ8V,EAAe,KACnB,GAAI9V,EAAewM,KAAO,EAAG,CAGzB,IAAM2J,EAAYnW,EACb4I,WACAC,UACA9R,IAAI,SAAC5J,GAAD,OAA0B0L,EAAiB1L,EAAMmZ,QACrD8P,OAAO,SAACC,EAAaC,GAAd,OAA8Bje,KAAKie,IAAID,EAAKC,IAAMpf,EAAc6B,KAExExN,KAAK20B,sBAAwBlK,aAAazqB,KAAK20B,sBACnD30B,KAAK20B,qBAAuBvnB,WACxB,WACIsd,EAAKvF,eAETyF,EAAY,GAGhBL,EAAevqB,KAAKgrB,eAExB,OACInnB,EAAA,qBAAKrC,UAAU,mBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAM,2CACfpU,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBAGIA,EAAA,4CACAA,EAAA,gCACAA,EAAA,kCACAA,EAAA,oCAGRA,EAAA,2BACsB,OAAjB0mB,EACGA,EAEA1mB,EAAA,wBACIA,EAAA,oBAAIonB,QAAS,GAAb,gEAcyB,IACjDxW,EAAmBzU,KAAKsB,MAAxBmT,eACA4V,EAAoBrqB,KAAKmD,MAAzBknB,gBACJE,GAAe,EAEbuK,EAAOrgB,EACR4I,WACAC,UACA+N,UACA7f,IAAI,SAACoR,EAA8Bhf,GAChC2sB,GAAe,EACf,IAAMwK,EAAM,GAAA12B,OAAMyG,IAAY0oB,UAAlB,QAAAnvB,OAAkCue,EAAc1B,QAEtD8Z,EAAiBpY,EAAc9B,OAE/Bma,EAAgB9oB,IAA4B,IAArByQ,EAAc7B,MACtC+Q,OAAO,0BAENoJ,EAAatY,EAAcjC,OAC5Bwa,OAAO,GACPC,cAEDxY,EAAcjC,OAAOnW,MAAM,GAE/B,OACIX,EAAA,oBAAIjG,IAAKA,EAAK4D,UAAS,GAAAnD,OAAa,IAART,GAAaysB,EAAkB,SAAW,GAA/C,oBAAAhsB,OAAoEue,EAAc3C,SACrGpW,EAAA,oBAAIrC,UAAU,aACTob,EAAc3C,SAAWe,oBAAkBC,QACxCpX,EAAA,cAAEzC,GAAA,EAAF,MACA,GAEJyC,EAAA,mBAAG6f,KAAMqR,EAAQtH,IAAI,sBAAsB9jB,OAAO,UAAUiT,EAAc1B,QACzE0B,EAAc3C,SAAWe,oBAAkBqa,OAASxxB,EAAA,sBAAMrC,UAAU,OAAhB,aAAyC,GAC7Fob,EAAc3C,SAAWe,oBAAkByC,SAAW5Z,EAAA,sBAAMrC,UAAU,OAAhB,eAA2C,IAEtGqC,EAAA,oBAAIoU,MAAOgd,GACPpxB,EAAA,0BAAOiI,EAAY8Q,EAAc7B,KAAM,CAAEzc,QAAS,WAAYuO,OAAQ,MAAOX,WAAW,MAE5FrI,EAAA,wBAAKqxB,GACLrxB,EAAA,wBAAKmxB,EAAehnB,UAApB,IAAgCiD,EAAakB,IAAIyK,EAAcjK,MAAOzB,GAAcC,WAIpG,OAAOoZ,EAAeuK,EAAO,YArJH3wB,aAgLrBmQ,GAAiB4P,YAvBN,SAAC/gB,GAAD,MAA6B,CACjDsR,eAAgBtR,EAAMsR,eAAeA,eACrCkB,IAAKxS,EAAMwS,IAAIA,IACfnB,YAAarR,EAAMsR,eAAeD,cAoBR0P,CAAyBuQ,cC5JjDa,GAAW,WAEb,IAAMC,EAAW,CAAC,EAAG,EAAG,EAAG,GAWrBC,EAAO,WAGT,IAAMC,EAAIF,EAAS,GAAMA,EAAS,IAAM,GAQxC,OANAA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GAEvBA,EAAS,GAAMA,EAAS,GAAMA,EAAS,IAAM,GAAME,EAAKA,GAAK,GAErDF,EAAS,KAAO,IAAO,GAAK,KAAQ,IAG1CG,EAAc,WAEhB,IAAMC,EAAI7oB,KAAKG,MAAe,IAATuoB,KAEfI,EAAC,GAAAv3B,OAAgB,GAATm3B,IAAe,GAAtB,KAEDK,EAAC,GAAAx3B,OAA6C,IAArCm3B,IAASA,IAASA,IAASA,KAAnC,KAEP,aAAAn3B,OAAcs3B,EAAd,KAAAt3B,OAAmBu3B,EAAnB,KAAAv3B,OAAwBw3B,EAAxB,MA+BEC,EAAY,SAACC,GAEf,IAAMC,EAA4B,GAclC,OAZAA,EAAQ/U,KAAO8U,EAAK9U,MAAQ,EAC5B+U,EAAQC,MAAQF,EAAKE,OAAS,EAE9BD,EAAQE,KAAOH,EAAKG,MAAQppB,KAAKG,MAAOH,KAAKqpB,SAAWrpB,KAAK6B,IAAI,GAAI,KAChEzF,SAAS,IAtED,SAACgtB,GACd,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAS3vB,OAAQwwB,IACjCb,EAASa,GAAK,EAElB,IAAK,IAAIA,EAAI,EAAGA,EAAIF,EAAKtwB,OAAQwwB,IAC7Bb,EAASa,EAAI,IAAOb,EAASa,EAAI,IAAM,GAAKb,EAASa,EAAI,GAAMF,EAAKG,WAAWD,GAmEnFE,CAASN,EAAQE,MAEjBF,EAAQO,MAAQR,EAAKQ,OAASb,IAC9BM,EAAQQ,QAAUT,EAAKS,SAAWd,IAClCM,EAAQS,UAAYV,EAAKU,WAAaf,IAE/BM,GAILU,EAAa,SAACC,EAA0BC,GAC1C,IAAMb,EAAOD,EAAUa,GAAU,IAE3BE,EAnDc,SAAC5V,GAQrB,IAPA,IAAM0I,EAAQ1I,EACR2I,EAAS3I,EAET6V,EAAYhqB,KAAKgC,KAAK6a,EAAQ,GAC9BoN,EAAcpN,EAAQmN,EAEtB/4B,EAAO,GACJi5B,EAAI,EAAGA,EAAIpN,EAAQoN,IAAK,CAE7B,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIJ,EAAWI,IAG3BD,EAAIC,GAAKpqB,KAAKG,MAAe,IAATuoB,KAExB,IAAM2B,EAAIF,EAAIzyB,MAAM,EAAGuyB,GACvBI,EAAE9L,UACF4L,EAAMA,EAAI54B,OAAO84B,GATY,IAAAzW,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAA,IAW7B,QAAAqW,EAAAD,EAAsBmW,EAAtB/wB,OAAAwb,cAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,MAAAjB,GAAA,EAA2B,KAAhB0W,EAAgBrW,EAAAnf,MACvB7D,EAAKqpB,KAAKgQ,IAZe,MAAA/C,GAAA1T,GAAA,EAAAC,EAAAyT,EAAA,YAAA3T,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAAlB,EAAA,MAAAC,IAgBjC,OAAO7iB,EA2BWs5B,CAAgBtB,EAAK9U,MACjC0I,EAAQ7c,KAAKwqB,KAAKT,EAAUjxB,QAElCgxB,EAAOjN,MAAQiN,EAAOhN,OAASmM,EAAK9U,KAAO8U,EAAKE,MAEhD,IAAMsB,EAAKX,EAAOY,WAAW,MAC7B,IAAKD,EACD,OAAOX,EAEXW,EAAGE,UAAY1B,EAAKS,QACpBe,EAAGG,SAAS,EAAG,EAAGd,EAAOjN,MAAOiN,EAAOhN,QACvC2N,EAAGE,UAAY1B,EAAKQ,MAEpB,IAAK,IAAIH,EAAI,EAAGA,EAAIS,EAAUjxB,OAAQwwB,IAGlC,GAAIS,EAAUT,GAAI,CACd,IAAMa,EAAMnqB,KAAKG,MAAMmpB,EAAIzM,GACrBgO,EAAMvB,EAAIzM,EAGhB4N,EAAGE,UAA8B,IAAjBZ,EAAUT,GAAYL,EAAKQ,MAAQR,EAAKU,UAExDc,EAAGG,SAASC,EAAM5B,EAAKE,MAAOgB,EAAMlB,EAAKE,MAAOF,EAAKE,MAAOF,EAAKE,OAGzE,OAAOW,GAYX,MAAO,CACHhyB,OAVe,SAAC+xB,GAChB,IAAMZ,EAAOD,EAAUa,GAAU,IAC3BC,EAASgB,SAASC,cAAc,UAItC,OAFAnB,EAAWX,EAAMa,GAEVA,GAKPnS,OAAQiS,IAUHoB,GAAb,SAAA/1B,GAKI,SAAA+1B,EAAYx2B,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA83B,IACtB91B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAq6B,GAAA11B,KAAApC,KAAMsB,KAJFs1B,YAGkB,EAAA50B,EAFT+1B,OAASzC,KAEAtzB,EAQnBg2B,QAAU,SAACjyB,GAAD,MAAsB,CACnCmwB,KAAMnwB,EAAQuF,cACd2V,KAAM,EACNgV,MAAO,KAXej0B,EAcnB00B,WAAa,SAAC3wB,GACbA,GACA/D,EAAKS,SAAS,CAAEW,SAAS,IACzBpB,EAAK+1B,OAAOnzB,OAAO5C,EAAKg2B,QAAQjyB,IAC5B/D,EAAK40B,OACL50B,EAAK+1B,OAAOtT,OAAOziB,EAAKg2B,QAAQjyB,GAAU/D,EAAK40B,QAE/C54B,QAAQf,MAAM,2CAGlB+E,EAAKS,SAAS,CAAEW,SAAS,KAxBPpB,EAqDTi2B,UAAY,SAACrB,GAAD,OAA+B50B,EAAK40B,OAASA,GAnDtE50B,EAAKmB,MAAQ,CACTC,SAAS,GAEbpB,EAAK40B,OAAS,KALQ50B,EAL9B,OAAAvE,OAAAiG,EAAA,EAAAjG,CAAAq6B,EAAA/1B,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAAq6B,EAAA,EAAAl6B,IAAA,4BAAAgE,MAAA,SAiCqCN,GAC7BtB,KAAK02B,WAAWp1B,EAAMyE,WAlC9B,CAAAnI,IAAA,oBAAAgE,MAAA,WAsCQ5B,KAAK02B,WAAW12B,KAAKsB,MAAMyE,WAtCnC,CAAAnI,IAAA,SAAAgE,MAAA,WA6CqC,IACrBmE,EAAY/F,KAAKsB,MAAjByE,QACA3C,EAAYpD,KAAKmD,MAAjBC,QACR,OACIS,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,qBAAKq0B,WAAUnyB,GAAW,OACrB3C,EAAUS,EAAA,mBAAGrC,UAAU,0CAA6CqC,EAAA,wBACrEA,EAAA,wBAAQrC,UAAU,SAASsjB,IAAK9kB,KAAKi4B,kBApDzDH,EAAA,CAA4B3zB,aCnKtBg0B,eACF,SAAAA,EAAmB72B,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAm4B,IAC9Cn2B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA06B,GAAA/1B,KAAApC,KAAMsB,EAAO4oB,KA6DAkO,aAAe,WAC5Bp2B,EAAKS,SAAS,CAAE41B,iBAAiB,EAAMC,QAAQ,KA/DDt2B,EAkEjCu2B,aAAe,WAC5Bv2B,EAAKS,SAAS,CAAE41B,iBAAiB,EAAOC,QAAQ,KAnEFt2B,EAsEjCw2B,gBAAkB,SAAC31B,GAChC,IACMkD,EADKlD,EAAE0mB,cAAckP,WAAW,GACnBC,aAAa,aAChC,GAAI3yB,EAAS,CACT,IAAM4yB,EAAQf,SAASC,cAAc,SACrCD,SAASgB,KAAKC,YAAYF,GAC1BA,EAAMG,aAAa,QAAS/yB,GAC5B4yB,EAAMI,SACNnB,SAASoB,YAAY,QACrBpB,SAASgB,KAAKK,YAAYN,GAE9B32B,EAAKS,SAAS,CAAE61B,QAAQ,KAjFsBt2B,EAoFjCk3B,aApFiCz7B,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAoFlB,SAAAC,IAAA,IAAAwW,EAAArX,EAAA,OAAAsE,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBoW,EAAQ3T,EAAKV,MAAbqU,IADoBtW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGlByC,EAAKV,MAAM4hB,QAAQ6L,OAAOpZ,EAAK,CAAEuZ,QAAQ,IAHvB,OAAA7vB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAKlBf,EAAU,0CAEhB0D,EAAKV,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CACbE,UAAWhB,GAAUnW,MACrBtB,cAIRG,YAA6BY,EAAAM,GAAQ,CACjCf,YAAaN,EACbkF,YAAa,aAhBO,yBAAAnE,EAAAU,SAAAZ,EAAAa,KAAA,YAlF5BgC,EAAKmB,MAAQ,CACTm1B,QAAQ,EACRD,iBAAiB,GAJyBr2B,wEAYjB,IAAAc,EACC9C,KAAKsB,MAA3ByE,EADqBjD,EACrBiD,QAASozB,EADYr2B,EACZq2B,SADYv1B,EAEO5D,KAAKmD,MAAjCk1B,EAFqBz0B,EAErBy0B,gBAAiBC,EAFI10B,EAEJ00B,OAEnBrzB,GADQjF,KAAKsB,MAAM6tB,SAAWnvB,KAAKsB,MAAM6tB,SAASiK,SAAW,IAChDnT,MAAM,KAAK,GAExBoT,EAAuB,MAAXtzB,EAElB,OACIlC,EAAA,qBAAKrC,UAAU,UACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAIF,EAAW,YAAc,KAC/Bx1B,EAAA,qBAAKrC,UAAU,kBAElB23B,EACGt1B,EAAA,oBAAIrC,UAAU,gBACVqC,EAAA,oBAAIrC,UAAoB,aAATyD,EAAsB,SAAW,IAAIpB,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,aAAY11B,EAAA,wCACzEA,EAAA,oBAAIrC,UAAoB,WAATyD,EAAoB,SAAW,IAAIpB,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,WAAU11B,EAAA,sCACrEA,EAAA,oBAAIrC,UAAoB,aAATyD,EAAsB,SAAW,IAAIpB,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,aAAY11B,EAAA,wCACzEA,EAAA,oBAAIrC,UAAU,iBAAiBmjB,KAAK,SAASzM,QAASlY,KAAKk5B,cAAcr1B,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,IAAG11B,EAAA,sCACpFkC,GACGlC,EAAA,oBACIrC,UAAU,kBACV6nB,aAAcrpB,KAAKo4B,aACnBoB,aAAcx5B,KAAKu4B,cAEnB10B,EAAA,cAAC41B,GAAD,CAAQ1zB,QAASA,IAChBsyB,EACGx0B,EAAA,oBAAIrC,UAAU,oBACVqC,EAAA,oBAAI8gB,KAAK,SAASzM,QAASlY,KAAKw4B,iBAC5B30B,EAAA,sBAAM61B,YAAW3zB,GACZuyB,EACGz0B,EAAA,oCAEAA,EAAA,0BAAOkC,EAAQ4zB,UAAU,EAAG,GAA5B,MAAmC5zB,EAAQvB,OAAO,MAI9DX,EAAA,oBAAI8gB,KAAK,SAASzM,QAASlY,KAAKk5B,cAAhC,WACI,OAIhB,cAxDN/0B,aAgIby1B,GAASC,YAAW3V,YArBT,SAAC/gB,GAAD,MAA6B,CACjD4C,QAAS5C,EAAM6W,OAAOjU,QACtB4P,IAAKxS,EAAMwS,IAAIA,MAGQ,SAACpP,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxB4K,UACAnjB,YACDrF,KAY0B2d,CAA6CiU,KCjIxE2B,oLAME,OACIj2B,EAAA,qBAAKrC,UAAU,UACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,oBAAIrC,UAAU,iBACTxB,KAAK+5B,mDAOa,IAAA/3B,EAAAhC,KAC3B4W,EAAiB5W,KAAKsB,MAAtBsV,aACJhZ,EAAM,EACV,OAAO0R,EACF9D,IAAI,SAACwuB,GACFp8B,GAAO,EACP,IAAM20B,EAAOyH,EAAYvqB,KACnBwqB,EAAcrjB,EAAazE,IAAIogB,OAAM7nB,GAC3C,QAAoBA,IAAhBuvB,GAA6B1H,IAASllB,EAAK6C,SAC3C,OAAOrM,EAAA,qBAAKjG,IAAKA,IAErB,IAAMsU,EAAgB+nB,EAAW,GAAA57B,OAAM47B,EAAY/nB,cAAclE,QAAQ,GAAxC,KAAgD,GAC3EmB,EAAQ8qB,EAAcA,EAAY9qB,MAAQ,GAC1C+qB,EAAajpB,EAAakB,IAAI6nB,EAAYnqB,gBAAYnF,GACtDyvB,EAAalpB,EAAakB,IAAI6nB,EAAYhqB,eAAWtF,GAE3D,OAAKwvB,GAAeC,EAKhBt2B,EAAA,oBAAIjG,IAAKA,EAAKqa,MAAO9I,EAAMjG,YAEvBrF,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,YAAYrhB,QAASlW,EAAKo4B,aAAahO,KAAKpqB,EAAMuwB,IACvD1uB,EAAA,6BAAAxF,OAAU87B,EAAWhpB,OAArB,KAAA9S,OAA+B67B,EAAW/oB,QAA1C,MAEJtN,EAAA,sBAAMrC,UAAS,GAAAnD,OAAK47B,EAAY/nB,cAAgB,EAAI,WAAa,aAAeA,IAT7ErO,EAAA,qBAAKjG,IAAKA,MAYtByf,WAAWC,+CAGD9J,GACbA,IAAWxT,KAAKsB,MAAMkS,QACtBxT,KAAKsB,MAAM4hB,QAAQrD,UAAU,CAAErM,kBAnDXrP,aAyEnBk2B,GAAenW,YAjBJ,SAAC/gB,GAAD,MAA6B,CACjDqQ,OAAQrQ,EAAMoxB,OAAO/gB,OACrBoD,aAAczT,EAAMyT,aAAaA,eAGV,SAACrQ,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBtE,cACDtZ,KASqB2d,CAA6C4V,ICxEnEQ,oLAK+B,IAGvBlP,EAF2BprB,KAAKsB,MAA9B6T,uBAEuCC,yBAAuB4O,kBAEtE,OACIngB,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAM,8BACbmT,EACEvnB,EAAA,qBAAKrC,UAAU,8BACXqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBACIA,EAAA,iCACAA,EAAA,mCACAA,EAAA,yCAEAA,EAAA,yCAEJA,EAAA,cAACqoB,GAAD,oFAIJroB,EAAA,2BACK7D,KAAKgrB,kBAhBJnnB,EAAA,cAACogB,GAAD,+CA2B9B,IAAM8I,EAA0B,GADMjqB,EAEmD9C,KAAKsB,MAAtF4T,EAF8BpS,EAE9BoS,gBAAiBF,EAFalS,EAEbkS,eAAgBC,EAFHnS,EAEGmS,qBAAsBmB,EAFzBtT,EAEyBsT,sBA2C/D,OA1CAtD,EAAkBsD,GACbzY,QAAQ,SAACgV,GAAqB,IAAAqa,EACI/b,EAAakB,IAAIQ,EAAOzB,GAA/C9Q,EADmB4sB,EACnB5sB,KAAM+Q,EADa6b,EACb7b,OAAQC,EADK4b,EACL5b,KAEhBrL,EAAUmP,EAAgB/C,IAAIQ,OAAOjI,IAAc,IAEnD0R,EAAUpH,EAAe7C,IAAIQ,OAAOjI,GACpC6vB,OAA8B7vB,IAAZ0R,GAAqC,OAAZA,EAAzB,GAAA/d,OAA+C+d,EAAQpO,UAAvD,KAAA3P,OAAoE8S,GAAW,IAEjGqpB,EAASvlB,EAAqB9C,IAAIQ,OAAOjI,GACzC+vB,OAA4B/vB,IAAX8vB,GAAmC,OAAXA,EAAxB,GAAAn8B,OAA6Cm8B,EAAOxsB,UAApD,KAAA3P,OAAiE8S,GAAW,IAQ7Fmc,EAAQ5H,MAAQ,KAAArnB,OAAa+S,IAEnC2b,EAAK3F,KACDvjB,EAAA,oBAAIjG,IAAK+U,GACL9O,EAAA,wBACIA,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAK0H,IACrCzpB,EAAA,6BAAAxF,OAAU+B,EAAV,OAEJyD,EAAA,oBAAIrC,UAAU,aAAauE,GAC3BlC,EAAA,wBACK02B,EACY,OAAZne,GACGvY,EAAA,cAACqoB,GAAD,CAAW3uB,MAAOyY,GAAWgB,SAA7B,4BAAgE7F,EAAhE,cAGRtN,EAAA,wBACK42B,EACW,OAAXD,GACG32B,EAAA,cAACqoB,GAAD,CAAW3uB,MAAOyY,GAAWgB,SAA7B,6BAAiE7F,EAAjE,kBAMjB4b,SArFuB5oB,aAuGzBu2B,GAAqBxW,YAdV,SAAC/gB,GAAD,MAA6B,CACjD+R,gBAAiB/R,EAAM6W,OAAO9E,gBAC9BF,eAAgB7R,EAAM6W,OAAOhF,eAC7BC,qBAAsB9R,EAAM6W,OAAO/E,qBACnCE,qBAAsBhS,EAAM6W,OAAO7E,qBACnCiB,sBAAuBjT,EAAMwS,IAAIS,wBASH8N,CAAyBoW,IC1GrDK,oLAOE,OACI92B,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAM,yBACfpU,EAAA,cAAC6pB,GAAD,eAXYvpB,aA2BnBy2B,GAAe1W,YATJ,SAAC2W,GAAD,MAA8B,IAS1B3W,CAAyByW,ICzBxCG,GAAqC,kBAC9Cj3B,EAAA,qBAAKrC,UAAU,YACVsyB,GAAQjwB,EAAA,cAACw2B,GAAD,OACRvG,GAAQjwB,EAAA,cAAC+1B,GAAD,CAAQT,UAAU,KAC1BrF,GAAQjwB,EAAA,cAACywB,GAAD,OAETzwB,EAAA,qBAAKrC,UAAU,WACVsyB,GAAQjwB,EAAA,cAAC62B,GAAD,OACR5G,GAAQjwB,EAAA,cAAC+2B,GAAD,OACR9G,GAAQjwB,EAAA,cAACk3B,GAAD,UCPfC,eACF,SAAAA,EAAmB15B,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAg7B,IAC9Ch5B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAu9B,GAAA54B,KAAApC,KAAMsB,EAAO4oB,KACR/mB,MAAQ,GAFiCnB,wEAUjB,IACrBi5B,EAAWj7B,KAAKsB,MAAhB25B,OACA7mB,EAAiBpU,KAAKsB,MAAtB8S,aAEF6D,EAAK,QAAA5Z,OAAW48B,EAAS,UAAY,GAAhC,oBAEX,OACIp3B,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAOA,IAChBpU,EAAA,cAACwoB,GAAD,CAAsB1B,aAAcsQ,EAvB3B,OAuBoDvwB,IAC5DuwB,GAAU7mB,GAAgBA,EAAa6M,KAxB/B,EAwBsD,GAC3Dpd,EAAA,uBAAGA,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,WAAT,QAAyBnlB,EAAa6M,KAzBpC,EAyBF,mBAvBQ9c,aA+CtB+2B,GAAkBhX,YAhBP,SAAC/gB,GAAD,MAA6B,CACjDiR,aAAcjR,EAAMmpB,WAAWlY,eAGR,SAAC7N,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,GACzB5d,KAUwB2d,CAA6C8W,IChDtEG,eACF,SAAAA,EAAmB75B,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAm7B,IAC9Cn5B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA09B,GAAA/4B,KAAApC,KAAMsB,EAAO4oB,KACR/mB,MAAQ,CACTonB,aAAc,GAH4BvoB,wEAWjB,IAGvBo5B,EAFmBp7B,KAAKsB,MAAtB8S,aAGHiJ,WACAC,UACA5K,OAAO,SAAC0I,GACL,QAAKA,EAAYhB,eAOnB6gB,GAAyC,IAAtBj7B,KAAKsB,MAAM25B,OAEhC1Q,EAAyC,KACzC6Q,EAAex1B,OAAS,IACxB2kB,EAAevqB,KAAKgrB,aAAaoQ,IAGrC,IAAMnjB,EAAK,QAAA5Z,OAAW48B,EAAS,UAAY,GAAhC,mBAEX,OACIp3B,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAOA,IAChBpU,EAAA,qBAAKrC,UAAU,gCACXqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBAGIA,EAAA,oCACAA,EAAA,oCAEAA,EAAA,wCACAA,EAAA,4CAGRA,EAAA,2BACsB,OAAjB0mB,EACG0Q,EAAS1Q,EAAa/lB,MAAM,EDvDnC,GCuDuD+lB,EAEhD1mB,EAAA,wBACIA,EAAA,oBAAIonB,QAAS,GAAb,0BAMnBgQ,GAA2B,OAAjB1Q,GAAyBA,EAAa3kB,ODhExC,ECgEiE,EACtE/B,EAAA,uBAAGA,EAAA,cAACy1B,GAAA,EAAD,CAAMC,GAAG,WAAT,QAAyBhP,EAAa3kB,ODjEpC,ECiEF,UACH,4CAOCw1B,GACjB,OAAOA,EACF/P,UACA7f,IAAI,SAAC4U,EAA0BxiB,GAC5B,IAAMwc,EAAegG,EAAMhG,aAE3B,QAAqB1P,IAAjB0P,EACA,OAAOvW,EAAA,cAAAA,EAAA,eAGX,IAAMw3B,EAAuBpqB,EAAakB,IAAIiI,EAAajB,cAAejI,GACpEoqB,EAAoBrqB,EAAakB,IAAIiI,EAAahB,WAAYlI,GAE9DqqB,EAAwBnhB,EAAapB,eACrCwiB,EAAqBphB,EAAanB,YAAY0F,KAAKvE,EAAalB,KAGtE,OAAOrV,EAAA,oBAAIjG,IAAKA,GACZiG,EAAA,wBAAIA,EAAA,sBAAMrC,UAAU,aAAa4Y,EAAatB,UAC9CjV,EAAA,oBAAIrC,UAAU,SAAQqC,EAAA,sBAAMrC,UAAU,aAAa4Y,EAAarB,YAEhElV,EAAA,oBAAIrC,UAAU,iBAAgBqC,EAAA,6BAAAxF,OAAUm9B,EAAV,KAAAn9B,OAAgCi9B,EAAkBnqB,UAChFtN,EAAA,oBAAIrC,UAAU,iBAAgBqC,EAAA,6BAAAxF,OAAUk9B,EAAV,KAAAl9B,OAAmCg9B,EAAqBlqB,oBA9FxEhN,aAiHrBs3B,GAAiBvX,YAbN,SAAC/gB,GAAD,MAA6B,CACjDiR,aAAcjR,EAAMmpB,WAAWlY,aAC/BuB,IAAKxS,EAAMwS,IAAIA,MAWWuO,CAAyBiX,aCnHjDO,IAAwBC,GAAA,GAAAl+B,OAAAm+B,GAAA,EAAAn+B,CAAAk+B,GACzBzhB,cAAYC,cAAgB,KADH1c,OAAAm+B,GAAA,EAAAn+B,CAAAk+B,GAEzBzhB,cAAYmG,KAAO,QAFM5iB,OAAAm+B,GAAA,EAAAn+B,CAAAk+B,GAGzBzhB,cAAYoG,UAAY,WAHC7iB,OAAAm+B,GAAA,EAAAn+B,CAAAk+B,GAIzBzhB,cAAY6O,SAAW,YAJEtrB,OAAAm+B,GAAA,EAAAn+B,CAAAk+B,GAKzBzhB,cAAYoH,QAAU,WALGqa,IAWxBE,eACF,SAAAA,EAAmBv6B,EAAc4oB,GAAkB,OAAAzsB,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA67B,GAAAp+B,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAo+B,GAAAz5B,KAAApC,KACzCsB,EAAO4oB,0EAOgB,IACrBjW,EAAiBjU,KAAKsB,MAAtB2S,aACR,OACIpQ,EAAA,qBAAKrC,UAAU,qBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAM,mBAAmBrZ,YAAW,QAAAP,OA3BxC,GA2BwC,aAC5C4V,EACGpQ,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,2BACIA,EAAA,2BACIA,EAAA,wBACIA,EAAA,oCACAA,EAAA,oBAAIrC,UAAU,UAAd,YAGRqC,EAAA,2BACKoQ,EAAagN,KAAO,EACjBhN,EACKoX,UACA/N,UACA9R,IAAI,SAAC4U,GAAD,OACDvc,EAAA,oBAAIjG,IAAKwiB,EAAMrG,IAEXlW,EAAA,oBAAIrC,UAAU,YAAWqC,EAAA,sBAAMrC,UAAU,aAAa4e,EAAMrG,KAC5DlW,EAAA,oBAAIrC,UAAU,UAAUk6B,GAAyBtb,EAAMnG,YAGnEpW,EAAA,4BAMhBA,EAAA,cAACzC,GAAA,EAAD,eA1CW+C,aA0DtB23B,GAAkB5X,YARP,SAAC/gB,GAAD,MAA6B,CACjD8Q,aAAc9Q,EAAM44B,WAAW9nB,aAC/B0B,IAAKxS,EAAMwS,IAAIA,MAMYuO,CAAyB2X,sBC9B3CG,GAAqB,SAAClhB,EAAmBnI,GAClD,IAAM/Q,EAtBuB,SAACq6B,EAAoBtpB,GAClD,IAAMupB,OAA0BxxB,IAAfuxB,GAA2C,KAAfA,EAAoB,IAAMA,EAIjEte,EAAe1M,EAAakB,IAAIQ,EAAOzB,GAEvCrO,EAAI,IAAIkL,IAAU,IAAIY,IAAIgP,EAAa1P,QAE7C,OAAO,IAAI2K,KAAG,IAAI7K,IAAUmuB,GACvBjtB,MAAMpM,GACNs5B,aAAapuB,IAAUquB,aACvBpuB,WAUSquB,CAAkBvhB,EAAO9M,UAAW2E,GAClD,OAAO,IAAI5E,IA3CkB,SAACuuB,EAAe3pB,GAC7C,IAAMyJ,OAAwB1R,IAAd4xB,EAA0B,IAAI1jB,KAAG,GAAK0jB,EAIhD3e,EAAe1M,EAAakB,IAAIQ,EAAOzB,GAEzCqrB,EAAY,IAAIxuB,IAAUqO,EAAQlT,YAEhCrG,EAAI,IAAIkL,IAAU,IAAIY,IAAIgP,EAAa1P,QAG7C,OAFAsuB,EAAYA,EAAU1tB,IAAIhM,GAiCL25B,CAAkB56B,EAAO+Q,eC9CrC8pB,GAAb,SAAA16B,GAAA,SAAA06B,IAAA,OAAAh/B,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAy8B,GAAAh/B,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAg/B,GAAAx8B,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAg/B,EAAA16B,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAAg/B,EAAA,EAAA7+B,IAAA,SAAAgE,MAAA,WAKqC,IAAAkB,EAIzB9C,KAAKsB,MAJoBo7B,EAAA55B,EAEzB65B,KAAQvU,EAFiBsU,EAEjBtU,OAAQwU,EAFSF,EAETE,MAChB3kB,EAHyBnV,EAGzBmV,MAAO4kB,EAHkB/5B,EAGlB+5B,OAAQpZ,EAHU3gB,EAGV2gB,SAAUqZ,EAHAh6B,EAGAg6B,KAAMv6B,EAHNO,EAGMP,aAAcw6B,EAHpBj6B,EAGoBi6B,WAAYC,EAHhCl6B,EAGgCk6B,OAHhCC,EAKUj9B,KAAKsB,MAAM47B,MAArBA,GALAD,EAKrBE,OALqBF,EAKbj5B,SALavG,OAAA2/B,GAAA,EAAA3/B,CAAAw/B,EAAA,wBAO7B,OACII,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAU,wBACX67B,EAAAp+B,EAAA44B,cAAA,aACIwF,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAU,gBACX67B,EAAAp+B,EAAA44B,cAAA,YAAO5f,GACN6kB,GAAQO,EAAAp+B,EAAA44B,cAAC3L,GAAD,KAAY4Q,IAEzBO,EAAAp+B,EAAA44B,cAAA,QAAMr2B,UAAS,oBAAAnD,OAAsBolB,EAAW,YAAc,KAC1D4Z,EAAAp+B,EAAA44B,cAAA,QAAAp6B,OAAA6/B,OAAA,GACQJ,EADR,CAEIh5B,KAAK,SACL2J,KAAM7N,KAAKu9B,gBACX9Z,SAAUA,EACV3Y,YAAY,IACZigB,IAAK,EACL/mB,SAAUzB,EACV46B,OAAQJ,KAEZM,EAAAp+B,EAAA44B,cAAA,YAAOgF,OAGZzU,EAAO8U,EAAM98B,OAASw8B,GACrBS,EAAAp+B,EAAA44B,cAAA,KAAGr2B,UAAU,kBACR4mB,EAAO8U,EAAM98B,SAGnB48B,IAAW5U,EAAO8U,EAAM98B,OACvBi9B,EAAAp+B,EAAA44B,cAAA,KAAGr2B,UAAU,kBACRw7B,MAxCzB,CAAAp/B,IAAA,gBAAAgE,MAAA,WA+CoC,IAAAupB,EACInrB,KAAKsB,MAA7Bk8B,EADoBrS,EACpBqS,aAAcN,EADM/R,EACN+R,MACtB,OAAIM,EACOA,EAAa,IAAIzvB,IAAUmvB,EAAMt7B,OAAS,MAE9C,OApDf66B,EAAA,CAAwCt4B,IAAMs5B,WCexCC,eAEF,SAAAA,EAAYp8B,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA09B,IACtB17B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAigC,GAAAt7B,KAAApC,KAAMsB,KAqEHq8B,UAAY,SAACr8B,GAAiB,IACzBs8B,EAAyCt8B,EAAzCs8B,OAAQC,EAAiCv8B,EAAjCu8B,eAAgBrqB,EAAiBlS,EAAjBkS,OAAQE,EAASpS,EAAToS,KAElCoqB,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GACxC,GAAKozB,EAAL,CAEA,IAAMC,EAAuB9sB,EAAakB,IAAI2rB,EAAcjuB,gBAAYnF,GAClEszB,EAA0B/sB,EAAakB,IAAI2rB,EAAc9tB,eAAWtF,GAE1E,GAAKqzB,GAAyBC,EAA9B,CAEA,IAAIpkB,EACAojB,EACJ,GAAIa,IAAmBluB,kBAAgBC,YAAa,CAChDgK,EAAWlG,IAASC,YAAUC,IAAMmqB,EAAuBC,EAC3D,IAAMC,EAAa,IAAIlwB,IAAU2F,IAASC,YAAUC,IAAMgqB,EAAOM,eAAiBN,EAAOvuB,QACzF2tB,EAASiB,EAAW1hB,GAAG,IAAIxO,IAAU,IAA5B,kBAAA1P,OAAoD4/B,EAAWtf,KAAK3c,EAAK2X,aAAa3L,UAAtF,KAAA3P,OAAmGub,EAASzI,OAA5G,gBAAmI,OACzI,CACHyI,EAAWlG,IAASC,YAAUC,IAAMoqB,EAA0BD,EAC9D,IAAMI,EAAY,IAAIpwB,IAAU2F,IAASC,YAAUC,IAAMgqB,EAAOvuB,OAASuuB,EAAOM,gBAChFlB,EAASmB,EAAU5hB,GAAG,IAAIxO,IAAU,IAA3B,oBAAA1P,OAAqD8/B,EAAUxX,MAAM3kB,EAAK2X,aAAa3L,UAAvF,KAAA3P,OAAoGub,EAASzI,OAA7G,gBAAoI,GAGjJnP,EAAKS,SAAS,CACVs7B,uBACAC,0BACAhB,SACApjB,gBAjGkB5X,EAyJTo8B,iBAAmB,SAAClB,GAAsB,IAAAp6B,EAChBd,EAAKV,MAApCkS,EAD+C1Q,EAC/C0Q,OAAQ6qB,EADuCv7B,EACvCu7B,mBAEVP,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GACxC,IAAKozB,EAAiB,OAAOT,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,MAE7B,IAAMP,EAAuB9sB,EAAakB,IAAI2rB,EAAcjuB,gBAAYnF,GACxE,IAAKqzB,EAAwB,OAAOV,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,MAEpC,IAAMC,EAAiBR,EAAqB5sB,OAE5C,OAAOksB,EAAAp+B,EAAA44B,cAAC2G,GAAD/gC,OAAA6/B,OAAA,GACCJ,EADD,CAEHjlB,MAAOolB,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,eACIjB,EAAAp+B,EAAA44B,cAAA,QACHlT,KAAK,SACLnjB,UAAU,gBAEV0W,QAAS,WACLlW,EAAKy8B,mBAAmBvB,EAAMA,MAAM98B,KAAMi+B,KAL3C,UADJ,KAYP5a,cAAuC/Y,IAA7BozB,EAAc1tB,WACxBysB,OAAQ0B,EACRf,aAActuB,EACd3M,aAAcP,EAAKO,aACnBw6B,WAAY/6B,EAAK+6B,eAtLC/6B,EA0LT08B,aAAe,SAACxB,GAAsB,IAAA/R,EAClBnpB,EAAKV,MAA9BoS,EAD2CyX,EAC3CzX,KAAMmqB,EADqC1S,EACrC0S,eADqCj6B,EAEP5B,EAAKmB,MAAzC66B,EAF2Cp6B,EAE3Co6B,wBAAyBhB,EAFkBp5B,EAElBo5B,OAEjC,OAAKgB,EAIEX,EAAAp+B,EAAA44B,cAAC2G,GAAD/gC,OAAA6/B,OAAA,GACCJ,EADD,CAEHjlB,MAAOolB,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,KACF5qB,IAASC,YAAUC,IAAM,UAAY,QADnC,KAC6CypB,EAAAp+B,EAAA44B,cAAA,QAAMlT,KAAK,SAASnjB,UAAU,gBAAgB0W,QAASlW,EAAK28B,YAA5D,OAD7C,KAGP9B,OAAQmB,EAAwB7sB,OAChCqsB,aAAcpuB,EACd7M,aAAcP,EAAKO,aACnBw6B,WAAY/6B,EAAK+6B,WACjBC,OAAQa,IAAmBluB,kBAAgBC,YAAe8D,IAASC,YAAU8X,MAAQuR,EAAWtpB,IAASC,YAAUC,KAAOopB,KAZnHK,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,OA/LWt8B,EA+MT48B,gBAAkB,SAAC1B,GAAsB,IAC9C2B,EAAiB78B,EAAKV,MAAtBu9B,aACAb,EAA4Bh8B,EAAKmB,MAAjC66B,wBAER,OAAKA,EAIEX,EAAAp+B,EAAA44B,cAAC2G,GAAD/gC,OAAA6/B,OAAA,GACCJ,EADD,CAEHjlB,MAAM,sBACN4kB,OAAQmB,EAAwB7sB,OAChC2rB,KAAK,kJACLrZ,SAAUob,EACVrB,aAAcpuB,EACd7M,aAAcP,EAAKO,aACnBw6B,WAAY/6B,EAAK+6B,cAXVM,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,OApNWt8B,EAmOT88B,qBAAuB,SAAC5B,GAAsB,IAAA/K,EAC1BnwB,EAAKV,MAA9BoS,EADmDye,EACnDze,KAAMmqB,EAD6C1L,EAC7C0L,eAD6CkB,EAElB/8B,EAAKmB,MAAtC46B,EAFmDgB,EAEnDhB,qBAAsBf,EAF6B+B,EAE7B/B,OAE9B,OAAKe,EAIEV,EAAAp+B,EAAA44B,cAAC2G,GAAD/gC,OAAA6/B,OAAA,GACCJ,EADD,CAEHjlB,MAAOvE,IAASC,YAAUC,IAAM,QAAU,UAC1CipB,OAAQkB,EAAqB5sB,OAC7BsS,UAAU,EACV+Z,aAAcpuB,EACd4tB,OAAQa,IAAmBluB,kBAAgBC,YAAe8D,IAASC,YAAUC,KAAOopB,EAAWtpB,IAASC,YAAU8X,MAAQuR,KATnHK,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,OAxOWt8B,EA6UT2X,UAAY,WAAiB,IAAAiZ,EACW5wB,EAAKV,MAAlDs8B,EADkChL,EAClCgL,OAAQlqB,EAD0Bkf,EAC1Blf,KAAMqS,EADoB6M,EACpB7M,WAAY8X,EADQjL,EACRiL,eAC5BmB,EAAoB,IAAIjxB,IAAU6vB,EAAOvuB,QAAU,KACnD6uB,EAAiB,IAAInwB,IAAU6vB,EAAOM,gBAAkB,KAO9D,OALIL,IAAmBluB,kBAAgBC,YACvB8D,IAASC,YAAUC,IAAMsqB,EAAejvB,MAAM8W,GAAciZ,EAAkB/vB,MAAM8W,GAEpFrS,IAASC,YAAUC,IAAMorB,EAAkB/vB,MAAM8W,GAAcmY,EAAejvB,MAAM8W,IArV9E/jB,EA0VT28B,WAAa,WAAY,IAAAM,EACWj9B,EAAKV,MAA9CkS,EAD8ByrB,EAC9BzrB,OAAQoqB,EADsBqB,EACtBrB,OAAQlqB,EADcurB,EACdvrB,KAClB8B,EAFgCypB,EACRpB,iBACkBluB,kBAAgB+B,MAAQ1P,EAAKV,MAAMkU,qBAAuBxT,EAAKV,MAAM2T,qBAC7GpB,EAAe+pB,EAAf/pB,WACFiqB,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GACxC,GAAKozB,EAAL,CAIA,IAAMoB,EAAgBpB,EAAcjuB,WAC9BsvB,EAAmBrB,EAAc9tB,UAEnCgvB,EAAoB,IAAIjxB,IAAU,GACtC,GAAI2F,IAASC,YAAUC,IAAK,CACxB,IAAMzE,EAAQ,IAAIpB,IAAU8F,GAAc,KAC1C,IAAK1E,EAAMrB,SAEPkxB,GADuBxpB,EAAqBrD,IAAI+sB,IAAkB,IAAInxB,IAAU,IAC7Cc,IAAIM,QAG3C6vB,EAAoBxpB,EAAqBrD,IAAIgtB,IAAqB,IAAIpxB,IAAU,GAEpF/L,EAAKy8B,mBAAmB,SAAUO,EAAkBhxB,WAAW,KAhXzChM,EAmXTO,aAAe,SAACM,GAAiD,IAAAu8B,EACtDv8B,EAAE8G,OAAlBvJ,EADsEg/B,EACtEh/B,KAAMwB,EADgEw9B,EAChEx9B,MACdI,EAAKy8B,mBAAmBr+B,EAAMwB,IArXRI,EAwXT+6B,WAAa,SAACl6B,GAAiD,IAAAw8B,EACpDx8B,EAAE8G,OAAlBvJ,EADoEi/B,EACpEj/B,KAAMwB,EAD8Dy9B,EAC9Dz9B,MACdI,EAAKy8B,mBAAmBr+B,EAAMwB,GAAO,IAxXrCI,EAAKmB,MAAQ,CACT46B,0BAAsBrzB,EACtBszB,6BAAyBtzB,EACzBkP,cAAUlP,EACVsyB,YAAQtyB,GANU1I,mFAUO,IAAAs9B,EAECt/B,KAAKsB,MAA3Bs8B,EAFqB0B,EAErB1B,QAER2B,EAJ6BD,EAEbC,WACCv/B,KAAKw/B,kBAAkB5B,IAGxC59B,KAAK29B,UAAU39B,KAAKsB,sDAGY,IAAAm+B,EAEPz/B,KAAKsB,MAAtBs8B,EAFwB6B,EAExB7B,OAAQlqB,EAFgB+rB,EAEhB/rB,KAChB1T,KAAKsB,MAAM4hB,QAAQpD,SAAS,CACxBrM,YAAa,CACTC,OACAG,WAAY+pB,EAAO/pB,WACnBxE,OAAQuuB,EAAOvuB,OACfyE,UAAW8pB,EAAO9pB,uGAKS0W,sGAC8CxqB,KAAKsB,MAA9EkS,WAAQE,SAAMmrB,iBAAcR,uBAAoBqB,iBAAc9B,WAGhE+B,EAAgBnsB,IAAWgX,EAAUhX,OACrCosB,EAA4BvB,IAAuB7T,EAAU6T,mBAC7DlvB,EAAQ,IAAIpB,IAAU6vB,EAAO/pB,YAAc,OACzB+pB,EAAO9pB,YAAc0W,EAAUoT,OAAO9pB,WACxC6rB,GAAiBC,GAA6BzwB,EAAMmN,IAAI,IAAIvO,IAAU,OACxFyc,EAAUoT,OAAO/pB,WAAa2W,EAAU6T,mBAClCrE,EAAc1qB,EAAM6C,IAAIqY,EAAUhX,YAAQ9I,GAC1Cm1B,EAAsB,IAAI9xB,IAAUyc,EAAU6T,oBAChDrE,IAAgB6F,EAAoB/xB,WAC9BgyB,EAAoBtV,EAAUuV,gCAChC/F,EAAYnqB,WACZmqB,EAAYhqB,UACZ6vB,GAEJrV,EAAUoT,OAAO9pB,UAAY,IAAI/F,IAAU+xB,GAAmB9xB,aAKzC6wB,GAAgBrU,EAAUqU,eAEnDrU,EAAUoT,OAAO9pB,UAAY0W,EAAUoT,OAAOvuB,UAI9BqE,IAAS8W,EAAU9W,QACpBisB,GAAiBd,IAAiBrU,EAAUqU,+CACrDa,YAGV1/B,KAAK29B,UAAUnT,wIAuCc,IAAAwV,EACuBhgC,KAAKsB,MAAjDoS,EADqBssB,EACrBtsB,KAAMqS,EADeia,EACfja,WAAYka,EADGD,EACHC,aAAcC,EADXF,EACWE,QADXC,EAEiBngC,KAAKmD,MAA3CyW,EAFqBumB,EAErBvmB,SAAUokB,EAFWmC,EAEXnC,wBAElB,OAAKpkB,GAAaokB,EAKdX,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,KACI/C,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAU,iBACX67B,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,CACIhgC,KAAK,aACLqkB,OAAQzkB,KAAKo+B,mBAEjBf,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,CACIhgC,KAAK,SACLqkB,OAAQzkB,KAAK0+B,eAEjBrB,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,CACIhgC,KAAK,YACLqkB,OAAQzkB,KAAK4+B,kBAEjBvB,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,CACIhgC,KAAK,iBACLqkB,OAAQzkB,KAAK8+B,wBAGrBzB,EAAAp+B,EAAA44B,cAAA,WACIwF,EAAAp+B,EAAA44B,cAAA,WACIwF,EAAAp+B,EAAA44B,cAAA,oBAAY73B,KAAK2Z,YAAY3L,UAA7B,IAAyC4L,EAASzI,QAClDksB,EAAAp+B,EAAA44B,cAAC3L,GAAD,wBAA4BnG,EAAW9W,MAAM,KAAKjB,UAAlD,4BAGRqvB,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAU,iBACX67B,EAAAp+B,EAAA44B,cAAA,UAAQr2B,UAAS,iBAAAnD,OAAmB4hC,EAAe,aAAe,IAAM/7B,KAAK,SAASuf,UAAWyc,GAAWD,GACxG5C,EAAAp+B,EAAA44B,cAAA,YAEQoI,EAAe5C,EAAAp+B,EAAA44B,cAACz2B,GAAA,EAAD,MACXi8B,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,KAAG5qB,IAASC,YAAUC,IAAM,MAAQ,OAApC,IAA6CoqB,EAAwB7sB,YAlCtFksB,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,gDAuIW+B,EAAgCjgC,EAAekgC,GACrE,IAAIC,EAAQ9iC,OAAA+iC,GAAA,EAAA/iC,CAAA,GAAQ4iC,GAEpB,GAAIjgC,EAAM,CAEN,IAAIwB,OAAqB8I,IAAZ41B,EAAyBD,EAASjgC,GAAQkgC,GAGb,IAAtC1+B,EAAM0J,cAAcsH,QAAQ,OAC5BhR,EAAQ,IAAImM,IAAUnM,GAAOoM,WAGjCuyB,EAAQ9iC,OAAA+iC,GAAA,EAAA/iC,CAAA,GAAQ8iC,EAAR9iC,OAAAm+B,GAAA,EAAAn+B,CAAA,GAAmB2C,EAAOwB,IAZuE,IAAA6+B,EAc9EF,EAAvB1sB,EAdqG4sB,EAcrG5sB,WAAYxE,EAdyFoxB,EAczFpxB,OAGhBrP,KAAKsB,MAAMu9B,eACX0B,EAASzsB,UAAYysB,EAASlxB,QAIlC,IAAMF,EAAQ,IAAIpB,IAAU8F,GAAc,KAEpCqqB,EADoB,IAAInwB,IAAUsB,GAAU,KACTJ,MAAME,GAG/C,OAFAoxB,EAASrC,eAAiBA,EAAelwB,UAElCuyB,uCAGUp9B,EAA6B/C,GAAoC,IAAAsgC,EACC1gC,KAAKsB,MAAhFqU,EAD0E+qB,EAC1E/qB,IAAKnC,EADqEktB,EACrEltB,OAAQ6qB,EAD6DqC,EAC7DrC,mBAAoB0B,EADyCW,EACzCX,gCAAiCrsB,EADQgtB,EACRhtB,KADQitB,EAEtChrB,EAAIirB,MAAxCC,EAF0EF,EAE1EE,eAAgBC,EAF0DH,EAE1DG,gBAElB9G,EAAc1qB,EAAM6C,IAAIqB,OAAQ9I,GACtC,IAAKsvB,EACD,OAAO72B,EAGX,IAAM08B,EAAsB,IAAI9xB,IAAU8yB,EAAe,IAAI9yB,IAAU5K,EAAM0Q,YAAc,KAAMH,IAASC,YAAU8X,OAC9GsV,EAAkB,IAAIhzB,IAAU+yB,EAAgB9E,GAAmB,IAAIjuB,IAAU5K,EAAMkM,QAAU,KAAM2qB,EAAYhqB,aACnHgxB,EAAqB,IAAIjzB,IAAU+yB,EAAgB9E,GAAmB,IAAIjuB,IAAU5K,EAAM2Q,WAAa,KAAMkmB,EAAYhqB,aACzH8vB,EAAoBC,EAAgC/F,EAAYnqB,WAAYmqB,EAAYhqB,UAAW6vB,GAEnGU,EAAQ9iC,OAAA+iC,GAAA,EAAA/iC,CAAA,GAAQ0F,GACtB,OAAQ/C,GACJ,IAAK,aAEGy/B,EAAoBvjB,IAAI,IAAIvO,IAAU,IACtCwyB,EAAS1sB,WAAawqB,EAGtBkC,EAAS1sB,WAAagsB,EAAoB7xB,UAE9C,MACJ,IAAK,SAEDuyB,EAASlxB,OAAS0xB,EAAgB/yB,UAE9B+yB,EAAgBE,GAAGD,KACnBT,EAASzsB,UAAY/F,IAChBmzB,IAAIH,EAAiBjB,GACrB9xB,WAET,MACJ,IAAK,YAEDuyB,EAASzsB,UAAYktB,EAAmBhzB,UAGpCgzB,EAAmBC,GAAGnB,KACtBS,EAASzsB,UAAYgsB,EAAkB9xB,WAIvCgzB,EAAmBzkB,GAAGwkB,KACtBR,EAASlxB,OAASkxB,EAASzsB,WAEnC,QACI,IAAMlV,EAAW,yBAAAP,OAA4B+B,EAA5B,oBACjB3B,YACI,IAAImB,MAAMhB,GACV,CAAEA,cAAa4E,YAAa,OAGxC,OAAOxD,KAAKw/B,kBAAkBe,EAAUngC,8CAmDjBA,EAAcwB,EAAeu/B,GAAsB,IAAAC,EAC5CphC,KAAKsB,MAA3Bi+B,EADkE6B,EAClE7B,UAAW3B,EADuDwD,EACvDxD,OACf2C,EAAWvgC,KAAKw/B,kBAAkB5B,EAAQx9B,EAAMwB,GAEhDu/B,IACAZ,EAAWvgC,KAAKqhC,aAAad,EAAUngC,IAE3Cm/B,EAAUgB,UAtYmBp8B,IAAMs5B,WA2a9B6D,GAAoBpd,YAhCT,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACfoQ,WAAY5iB,EAAMwS,IAAIY,mBACtBf,qBAAsBrS,EAAM6W,OAAOxE,qBACnCP,qBAAsB9R,EAAM6W,OAAO/E,uBAGZ,SAAC1O,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBrE,aACDvZ,KAsB0B2d,CAA6CwZ,IClbxE6D,eAEF,SAAAA,EAAmBjgC,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAuhC,IAC7Bv/B,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA8jC,GAAAn/B,KAAApC,KAAMsB,KAmHOkgC,aApHgB,eAAA1iC,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAoHD,SAAAC,EAAOy+B,EAA8B6D,GAArC,IAAAC,EAAAC,EAAA7+B,EAAA0Q,EAAAmC,EAAA/R,EAAA8P,EAAAkuB,EAAAC,EAAAhuB,EAAAxE,EAAAyE,EAAA4T,EAAAC,EAAAC,EAAA,OAAAhlB,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBmiC,EAA6BD,EAA7BC,cAAeC,EAAcF,EAAdE,UADK7+B,EAEJd,EAAKV,MAArBkS,EAFoB1Q,EAEpB0Q,OAAQmC,EAFY7S,EAEZ6S,IAFY/R,EAGoB5B,EAAKmB,MAA7CuQ,EAHoB9P,EAGpB8P,KAAMkuB,EAHch+B,EAGdg+B,kBAAmBC,EAHLj+B,EAGKi+B,WACzBhuB,EAAkC+pB,EAAlC/pB,WAAYxE,EAAsBuuB,EAAtBvuB,OAAQyE,EAAc8pB,EAAd9pB,UAEtB4T,EAAYka,GAAqBC,EAAappB,YAAUqpB,UAAYrpB,YAAUC,MAG9EiP,EAAY,WACd+Z,GAAc,GACdC,EAAU,CACN9tB,aACAxE,OAAQ,IACRyE,UAAW,IACXoqB,eAAgB,OAIlBtW,EAAU,WACZ8Z,GAAc,IApBUriC,EAAAE,KAAA,EAuBtByC,EAAKV,MAAM4hB,QAAQsE,UACrB7R,EACAnC,EACAE,EAAMG,GAAc,IACpBxE,GAAU,IAAKyE,GAAa,IAC5B4T,EACAC,EACAC,GA9BwB,wBAAAvoB,EAAAU,SAAAZ,EAAAa,SApHC,gBAAAyD,EAAAqD,GAAA,OAAAhI,EAAAmB,MAAAD,KAAAE,YAAA,GAAA8B,EAsJhB+/B,SAAW,SAACnE,GAAqE,IAAAzS,EACnCnpB,EAAKV,MAAxD0gC,EADsF7W,EACtF6W,uBAAwBxuB,EAD8D2X,EAC9D3X,OAC1BgC,EAFwF2V,EACtD0S,iBACQluB,kBAAgB+B,MAAQ1P,EAAKV,MAAMkU,qBAAuBxT,EAAKV,MAAM2T,qBAFvB8pB,EAG/D/8B,EAAKmB,MAA5BuQ,EAHsFqrB,EAGtFrrB,KAAMmrB,EAHgFE,EAGhFF,aAERzW,EAA6C,GAC7C0V,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GACxC,IAAKozB,EAGD,OAFA1V,EAAO/Y,OAAP,uBAEO+Y,EAGX,IAAM6Z,EAAavuB,IAASC,YAAUC,IAAOkqB,EAAcjuB,WAAaiuB,EAAc9tB,UAChFkyB,EAAexuB,IAASC,YAAUC,IAAO,iBAAmB,SAC5DuuB,EAAc3sB,EAAqBrD,IAAI8vB,IAAc,IAAIl0B,IAAU,GACnEq0B,EAAa,IAAIr0B,IAAU6vB,EAAOsE,IAClCG,EAAmBpxB,EAAakB,IAAI8vB,EAAW/wB,GAE/C2uB,EAAsB,IAAI9xB,IAAU6vB,EAAO/pB,YAAc,KACzDktB,EAAkB,IAAIhzB,IAAU6vB,EAAOvuB,QAAU,KACjD2xB,EAAqB,IAAIjzB,IAAU6vB,EAAO9pB,WAAa,KACvDwuB,EAA0B,IAAIv0B,IAAU6vB,EAAOM,gBAAkB,KAavE,GAVIiE,EAAYlB,GAAGmB,KACfha,EAAO8Z,GAAP,gBAAA7jC,OAAsCgkC,EAAiBlxB,OAAvD,cAIA2sB,EAAcjuB,aAAeC,QAAMG,KAAOqyB,EAAwBrB,GAAGe,KACrE5Z,EAAO8V,eAAP,yBAAA7/B,OAAiD2jC,EAAuBh0B,UAAxE,WAIC6xB,EAAoB/xB,SAAU,CAC/B,IAAMgyB,EAAoB99B,EAAK+9B,gCAAgCjC,EAAcjuB,WAAYiuB,EAAc9tB,UAAW6vB,GAC5G0C,EAAqBtxB,EAAakB,IAAI2rB,EAAc9tB,UAAWkB,GACrE,GAAI8vB,EAAmBC,GAAGnB,GAAoB,CAC1C,IACM0C,EAAe3D,EAAe,SAAW,iBAC/CzW,EAFuByW,EAAe,SAAW,aAEjD,GAAAxgC,OAA4BmkC,EAA5B,sBAAAnkC,OAA6DyhC,EAAkB9xB,UAA/E,KAAA3P,OAA4FkkC,EAAmBpxB,OAA/G,MASR,OAJI4vB,EAAgBE,GAAGD,KACnB5Y,EAAO/Y,OAAP,8CAGG+Y,GAxMsBpmB,EA2MhBygC,kBAAoB,SAAC5/B,GAAiD,IAAAu8B,EACzDv8B,EAAE8G,OAApBvJ,EAD2Eg/B,EAC3Eh/B,KAAMsiC,EADqEtD,EACrEsD,QACd1gC,EAAKS,SAAS,SAAC49B,GAAD,OAAA5iC,OAAA+iC,GAAA,EAAA/iC,CAAA,GAAoB4iC,EAApB5iC,OAAAm+B,GAAA,EAAAn+B,CAAA,GAA+B2C,EAAOsiC,OA7MvB1gC,EAgNhB+9B,gCAAkC,SAAClwB,EAAoBG,EAAmBb,GAAgC,IAAAgjB,EAC/EnwB,EAAKV,MAArCqU,EAD+Gwc,EAC/Gxc,IAAKqsB,EAD0G7P,EAC1G6P,uBACb,OAAQhyB,GACJ,KAAKF,QAAMG,IACP,OAAO+xB,EACX,KAAKlyB,QAAMK,KACP,OAAO,IAAIpC,IAAU,MACzB,QACI,IAAI+F,EAAY,IAAI/F,IAAU4H,EAAIirB,MAAME,gBAAgBkB,EAAuBW,UAAUxzB,IAAQ,IAKjG,OAJIU,IAAeC,QAAMC,MAErB+D,EAAYA,EAAU8uB,aAAa,MAEhC9uB,IA3Nf9R,EAAKmB,MAAQ,CACT0/B,iBAAiB,EACjBhE,cAAc,EACd+C,mBAAmB,EACnBC,YAAY,EACZnuB,KAAMC,YAAUC,KAPS5R,mFAWA,IAErByR,EAAgBzT,KAAKsB,MAArBmS,YACJA,EAAYC,OAAS1T,KAAKmD,MAAMuQ,MAChC1T,KAAKyC,SAAS,CAAEiR,KAAMD,EAAYC,wCAQT,IAAAqE,EAAA/X,KAAAmgC,EAE4CngC,KAAKmD,MAAtE0+B,EAFqB1B,EAErB0B,WAAYhD,EAFSsB,EAETtB,aAAc+C,EAFLzB,EAEKyB,kBAAmBiB,EAFxB1C,EAEwB0C,gBAFxBjQ,EAGqC5yB,KAAKsB,MAA/DqU,EAHqBid,EAGrBjd,IAAKlC,EAHgBmf,EAGhBnf,YAAaD,EAHGof,EAGHpf,OAAQymB,EAHLrH,EAGKqH,YAAa4D,EAHlBjL,EAGkBiL,eACzC7D,EAAc1qB,EAAM6C,IAAIqB,OAAQ9I,GACtC,IAAKsvB,EACD,OAAOqD,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,MAGX,IAAMN,EAA0B/sB,EAAakB,IAAI6nB,EAAYhqB,UAAWkB,GAChEwC,EAAS1T,KAAKmD,MAAduQ,KACFovB,EAAqB7I,EAAc,IAAIlsB,IAAU4H,EAAIirB,MAAMC,eAAe5G,IAAcjsB,UAAY,IAC1G,OACIqvB,EAAAp+B,EAAA44B,cAAAwF,EAAAp+B,EAAAq/B,SAAA,KACIjB,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAU,yCACX67B,EAAAp+B,EAAA44B,cAAA,MAAIr2B,UAAU,eACV67B,EAAAp+B,EAAA44B,cAAA,MACIr2B,UAAWkS,IAASC,YAAUC,IAAM,SAAW,GAC/C+Q,KAAK,MAELzM,QAAS,WAAQH,EAAKtV,SAAS,CAAEiR,KAAMC,YAAUC,QAEjDypB,EAAAp+B,EAAA44B,cAAA,mBAAWmG,EAAwB7sB,SAEvCksB,EAAAp+B,EAAA44B,cAAA,MACIr2B,UAAWkS,IAASC,YAAU8X,KAAO,SAAW,GAChD9G,KAAK,MAELzM,QAAS,WAAQH,EAAKtV,SAAS,CAAEiR,KAAMC,YAAU8X,SAEjD4R,EAAAp+B,EAAA44B,cAAA,oBAAYmG,EAAwB7sB,UAG5CksB,EAAAp+B,EAAA44B,cAACuI,GAAA,EAAD,CACI2C,cAAe,CACX1zB,OAAQoE,EAAYpE,QAAU,GAC9ByE,UAAWL,EAAYK,WAAa,GACpCD,WAAYJ,EAAYI,YAAcivB,EACtC5E,eAAgB,IAEpB6D,SAAU/hC,KAAK+hC,SACfj+B,SAAU9D,KAAKwhC,aAEf/c,OAAQ,SAACnjB,GAAD,OACJ+7B,EAAAp+B,EAAA44B,cAACyJ,GAAD7jC,OAAA6/B,OAAA,GACQh8B,EADR,CAEIkS,OAAQA,EACRE,KAAMA,EACNmrB,aAAcA,GAAgBgD,EAC9BxD,mBAAoByE,EACpBjF,eAAgBA,EAChBkC,gCAAiChoB,EAAKgoB,uCAKtD1C,EAAAp+B,EAAA44B,cAAA,OAAKr2B,UAAS,kBAAAnD,OAAqBwkC,EAA6B,GAAX,WACjDxF,EAAAp+B,EAAA44B,cAAA,aACIwF,EAAAp+B,EAAA44B,cAAA,SACIz3B,KAAK,eACL8D,KAAK,WACLuf,SAAUoe,EACVa,QAAS7D,GAAgBgD,EACzB79B,SAAUhE,KAAKyiC,oBANvB,kBAQmBpF,EAAAp+B,EAAA44B,cAAC3L,GAAD,wDAEnBmR,EAAAp+B,EAAA44B,cAAA,aACIwF,EAAAp+B,EAAA44B,cAAA,SACIz3B,KAAK,oBACL8D,KAAK,WACLuf,SAAUoe,EACVa,QAASd,GAAqBC,EAC9B79B,SAAUhE,KAAKyiC,oBANvB,uBAQwBpF,EAAAp+B,EAAA44B,cAAC3L,GAAD,yFAExBmR,EAAAp+B,EAAA44B,cAAA,aACIwF,EAAAp+B,EAAA44B,cAAA,SACIz3B,KAAK,aACL8D,KAAK,WACLuf,SAAUob,GAAgB+C,EAC1Bc,QAASb,GAAehD,GAAgB+C,EACxC59B,SAAUhE,KAAKyiC,oBANvB,gBAQiBpF,EAAAp+B,EAAA44B,cAAC3L,GAAD,0GA9Gb/nB,IAAMs5B,WA4QjBuF,GAAiB9e,YArCN,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACflC,YAAatQ,EAAMoxB,OAAO9gB,YAC1BuuB,uBAAwB7+B,EAAMwS,IAAIW,kBAClCd,qBAAsBrS,EAAM6W,OAAOxE,qBACnCP,qBAAsB9R,EAAM6W,OAAO/E,uBAGZ,SAAC1O,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBqD,cACDjhB,KA0BuB2d,CAA6Cqd,uBC1Q9D0B,GAAgB,SAAuB3hC,GAA2B,IACnEuoB,EAAoFvoB,EAApFuoB,SAAUqZ,EAA0E5hC,EAA1E4hC,GAAIC,EAAsE7hC,EAAtE6hC,UAAW3hC,EAA2DF,EAA3DE,UAAW4hC,EAAgD9hC,EAAhD8hC,WAAYC,EAAoC/hC,EAApC+hC,UAAWC,EAAyBhiC,EAAzBgiC,SAAUC,EAAejiC,EAAfiiC,WAErEC,EAAgBliC,EAAhBkiC,WACR,OACI3/B,EAAA,oBAAApG,OAAA6/B,OAAA,CACIxY,IAAKwe,EACL9hC,UAAS,GAAAnD,OAAM6kC,EAAGO,aAAIN,EAAU,UAAW7hC,IAAS,CAChDoiC,SAAS,EACTC,uBAAwBP,EACxBQ,sBAAuBP,EACvBQ,wBAAyBL,GAC1BhiC,IAAc,GALR,oBAML+hC,GAEH1Z,IAKAia,GAAc,SAAuBxiC,GAA+B,IACrEE,EAA+DF,EAA/DE,UAAW0hC,EAAoD5hC,EAApD4hC,GAAIC,EAAgD7hC,EAAhD6hC,UAAWC,EAAqC9hC,EAArC8hC,WAAYG,EAAyBjiC,EAAzBiiC,WAAY1Z,EAAavoB,EAAbuoB,SAEpDka,EAASziC,EAAMvD,KAEfimC,EAAW/yB,EAAakB,IAAI4xB,EAAOniC,MAAOsP,GAAcE,KAGxDkc,EAAQ5H,MAAQ,KAAArnB,OAAa2lC,IAEnC,OACIngC,EAAA,oBAAApG,OAAA6/B,OAAA,CACI97B,UAAS,GAAAnD,OAAK6kC,EAEVO,aAAIN,EAAU,cAAe7hC,IAC7B,CACI2iC,gBAAgB,EAChBC,4BAA6Bd,GAEjC5hC,GAPK,kBASL+hC,GAEJ1/B,EAAA,qBAAKtC,IAAI,GAAGojB,KAAK,eAAeiB,IAAK0H,IACpCzD,IAKAsa,GAAe,SAAuB7iC,GAA0B,IACjEuoB,EAAgGvoB,EAAhGuoB,SAAUroB,EAAsFF,EAAtFE,UAAW0hC,EAA2E5hC,EAA3E4hC,GAAIC,EAAuE7hC,EAAvE6hC,UAAWC,EAA4D9hC,EAA5D8hC,WAAYC,EAAgD/hC,EAAhD+hC,UAAWe,EAAqC9iC,EAArC8iC,WAAYd,EAAyBhiC,EAAzBgiC,SAAUC,EAAejiC,EAAfiiC,WAEnFQ,EAASziC,EAAMvD,KAEfimC,EAAW/yB,EAAakB,IAAI4xB,EAAOniC,MAAOsP,GAAcE,KAGxDkc,EAAQ5H,MAAQ,KAAArnB,OAAa2lC,IACnC,OACIngC,EAAA,oBAAApG,OAAA6/B,OAAA,CACIxY,IAAKwe,EACL9hC,UAAS,GAAAnD,OAAK6kC,EACVO,aAAIN,EAAU,SAAU7hC,IACxB,CACIyiC,QAAQ,EACRM,sBAAuBjB,EACvBkB,qBAAsBjB,EACtBkB,sBAAuBH,GAE3B5iC,IACC,GATI,oBAUL+hC,GAEJ1/B,EAAA,qBAAK8gB,KAAK,eAAepjB,IAAI,GAAGqkB,IAAK0H,IACpCzD,IC9DP2a,eACF,SAAAA,EAAmBljC,EAAc4oB,GAAiB,IAAAloB,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAwkC,IAC9CxiC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA+mC,GAAApiC,KAAApC,KAAMsB,EAAO4oB,KAkHA3nB,aAAe,SAACM,GAC7Bb,EAAKS,SAAS,SAACmH,GAAD,OAAAnM,OAAA+iC,GAAA,EAAA/iC,CAAA,GAAmBmM,EAAnBnM,OAAAm+B,GAAA,EAAAn+B,CAAA,GAA6BoF,EAAEq6B,MAAQr6B,EAAEjB,SAAU,WAE7D+sB,GAAQvH,KAAK,aACbplB,EAAKV,MAAM4hB,QAAQrD,UAAU,CAAErM,OAAQ3Q,EAAE2Q,YAvHCxR,EA2HjCyiC,eAAiB,WAAoB,IAAA3hC,EACCd,EAAKV,MAAhD6U,EAD0CrT,EAC1CqT,gBAAiBC,EADyBtT,EACzBsT,sBACnB2W,EAAqB,GACrBpb,EAASwE,EACV9X,OAAO+X,GACPkH,UAgBL,OAfAonB,MAAMC,KAAK,IAAIC,IAAIjzB,IACdhU,QAAQ,SAACgV,GAEN,GAAI1B,EAAakB,IAAIQ,EAAOzB,GAAcG,MAAM4P,KAAO,EAAG,KAAA+L,EACtB/b,EAAakB,IAAIQ,EAAOzB,GAAhDC,EAD8C6b,EAC9C7b,OAAQ/Q,EADsC4sB,EACtC5sB,KAAMiR,EADgC2b,EAChC3b,MACtB0b,EAAK3F,KAAK,CACN8V,MAAO,UACPr7B,MAAK,GAAAxD,OAAK8S,EAAL,YAAA9S,OAAiB+B,GACtBA,OACA+Q,SACAvP,MAAO+Q,EACPa,OAAQnC,EAAMwzB,aAIvB9X,GAhJuC/qB,EAmJjC+3B,UAAY,SAAC+K,GAC1B,OAAO7zB,EAAakB,IAAI2yB,EAAS5zB,GAAcG,MAC1C7F,IAAI,SAAC+mB,EAAY5f,GACd,IAAMqnB,EAAc1qB,EAAM6C,IAAIogB,OAAM7nB,GACpC,GAAKsvB,EAAL,CAFmC,IAK3BtqB,EAA0BsqB,EAA1BtqB,gBAAiBD,EAASuqB,EAATvqB,KALUs1B,EAMV9zB,EAAakB,IAAIQ,EAAOzB,GAAzCC,EAN2B4zB,EAM3B5zB,OAAQ/Q,EANmB2kC,EAMnB3kC,KAChB,MAAO,CACH88B,MAAO,UACPr7B,MAAK,GAAAxD,OAAK8S,EAAL,YAAA9S,OAAiB+B,GAAjB/B,OAAwBqR,IAAoBC,kBAAgBC,YAApC,gBAC7BxP,OACA+Q,SACAvP,MAAO+Q,EACPjD,kBACA8D,OAAQ/D,MAGf4N,WACAC,UACA5K,OAAO,SAAAwkB,GAAC,YAAUxsB,IAANwsB,KAxK6B,IAO1C4N,EACAE,EAJIxxB,EAAWxR,EAAKV,MAAhBkS,OACFsqB,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GALM,OAS1CozB,IAEAkH,GADAF,EAAUhH,EAAczgC,UAAYygC,EAAcjuB,cAC5BiuB,EAAcjuB,WAAaiuB,EAAc9tB,UAAY8tB,EAAcjuB,YAE7F7N,EAAKmB,MAAQ,CACT2hC,UACAE,WAf0ChjC,yFAmBjBwoB,GAAwB,IAC7ChX,EAAWgX,EAAXhX,OACFsqB,EAAgBxuB,EAAM6C,IAAIqB,OAAQ9I,GAExC,GAAIozB,EAAe,KAAAl6B,EACY5D,KAAKmD,MAA1B2hC,EADSlhC,EACTkhC,QAASE,EADAphC,EACAohC,QACXxxB,IAAWxT,KAAKsB,MAAMkS,SAEtBwxB,GADAF,EAAUhH,EAAczgC,UAAYygC,EAAcjuB,cAC5BiuB,EAAcjuB,WAAaiuB,EAAc9tB,UAAY8tB,EAAcjuB,WACzF7P,KAAKyC,SAAS,CAAEqiC,UAASE,+CASJ,IAAAjG,EACA/+B,KAAKmD,MAA1B2hC,EADqB/F,EACrB+F,QAASE,EADYjG,EACZiG,QAEjB,QAAgBt6B,IAAZo6B,QAAqCp6B,IAAZs6B,EACzB,OAAOnhC,EAAA,cAAAA,EAAA,eAGX,IAAMohC,EAAiBjlC,KAAKykC,iBACtBS,EAAkBllC,KAAK+5B,UAAU+K,GAEvC,OACIjhC,EAAA,qBAAKrC,UAAU,qBACXqC,EAAA,cAACE,GAAA,EAAD,CACIvC,UAAU,mBACVpB,KAAK,UACLwB,MAAOqjC,EAAeE,KAAM,SAAApB,GAAM,OAAIA,EAAOniC,QAAUkjC,IACvD9gC,SAAUhE,KAAKuC,aACfZ,QAASsjC,EACTG,WAAY,CACRC,YAAavB,GACbwB,OAAQnB,GACRoB,QAAStC,IAEbuC,aAAa,EACbC,uBAAuB,EACvBrC,WAAY6B,EAAer/B,QAAU,IAEzC/B,EAAA,cAACE,GAAA,EAAD,CAEIvC,UAAU,mBACVpB,KAAK,UACLwB,MAAOsjC,EAAgBC,KAAM,SAAApB,GAAM,OAAIA,EAAOniC,QAAUojC,IACxDhhC,SAAUhE,KAAKuC,aACfZ,QAASujC,EACTE,WAAY,CACRC,YAAavB,GACbwB,OAAQnB,GACRoB,QAAStC,IAEbuC,aAAa,EACbC,uBAAuB,EACvBrC,WAAY8B,EAAgBt/B,QAAU,YA/E1BzB,aAiMnBuhC,GAAexhB,YApBJ,SAAC/gB,GAAD,MAA6B,CACjDqQ,OAAQrQ,EAAMoxB,OAAO/gB,OACrB2C,gBAAiBhT,EAAMwS,IAAIQ,gBAC3BC,sBAAuBjT,EAAMwS,IAAIS,wBAGV,SAAC7P,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBtE,cACDtZ,KAWqB2d,CAA6CsgB,IC9MnEmB,eAEF,SAAAA,EAAYrkC,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA2lC,IACtB3jC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAkoC,GAAAvjC,KAAApC,KAAMsB,KA0GOskC,WAAa,WAAQ5jC,EAAKS,SAAS,CAAErD,MAAM,KA3GlC4C,EA4GT6jC,YAAc,WAAQ7jC,EAAKS,SAAS,CAAErD,MAAM,KA5GnC4C,EA8GT8jC,aAAe,WAAe,IACnC7wB,EAAyBjT,EAAKV,MAA9B2T,qBADmCrR,EAEZ5B,EAAKmB,MAA5B/D,EAFmCwE,EAEnCxE,KAAM6gC,EAF6Br8B,EAE7Bq8B,aACRr+B,EAAQ,IAAImM,IAAU/L,EAAKmB,MAAM4iC,YACjCzsB,EAAala,EAAO,MAAQ,OAC5Bo7B,EAAoBvlB,EAAqB9C,IAAImH,IAAe,IAAIvL,IAAU,GAGhF,QAFcnM,EAAM2a,GAAG,IAAM3a,EAAM0a,IAAIke,KAEtByF,GAtHKj+B,EAyHTw/B,aAzHS,eAAA1iC,EAAArB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAyHM,SAAAC,EAAOsK,GAAP,IAAAs1B,EAAA3/B,EAAA2mC,EAAAC,EAAA,OAAApjC,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAw/B,EACC/8B,EAAKmB,MAA1B/D,EADoB2/B,EACpB3/B,KAAM2mC,EADchH,EACdgH,WACd/jC,EAAKS,SAAS,CAAEw9B,cAAc,EAAMhjC,MAAO,OAC3CwM,EAAMvG,iBAEA8iC,EAAQ5mC,EAAQ4C,EAAK5C,OAAS4C,EAAKikC,SALb5mC,EAAAK,OAAA,SAOrBsmC,EAEFz6B,KAAK,SAAC26B,GAEHlkC,EAAKV,MAAM4hB,QAAQnD,UAAU,CAAC5E,GAAoB+qB,KAClDlkC,EAAKS,SAAS,CAAEw9B,cAAc,MAEjCpoB,MAAM,SAAC5a,GACJwB,YAA8BxB,EAAO,CACjC2B,YAAa,oCACb4E,YAAa,gCACbpE,OACA2mC,eAEJ/jC,EAAKS,SAAS,CAAExF,MAAOA,EAAMqB,QAAS2hC,cAAc,OArBhC,wBAAA5gC,EAAAU,SAAAZ,EAAAa,SAzHN,gBAAAyD,GAAA,OAAA3E,EAAAmB,MAAAD,KAAAE,YAAA,GAAA8B,EAkJT5C,KAlJS3B,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAkJF,SAAAuB,IAAA,IAAAkV,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cACZoW,EAAQ3T,EAAKV,MAAbqU,IADYhV,EAAAjB,OAAA,SAGbiW,EAAIyJ,SAAShgB,KAAK4C,EAAKmB,MAAM4iC,WAAY,QAH5B,wBAAAplC,EAAAZ,SAAAU,EAAAT,SAlJEgC,EAwJTikC,OAxJSxoC,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAwJA,SAAA4G,IAAA,IAAA6P,EAAA,OAAA/S,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACdoW,EAAQ3T,EAAKV,MAAbqU,IADc1P,EAAAvG,OAAA,SAGfiW,EAAIyJ,SAAS6mB,OAAOjkC,EAAKmB,MAAM4iC,WAAY,SAH5B,wBAAA9/B,EAAAlG,SAAA+F,EAAA9F,SAxJAgC,EA8JTO,aA9JS,eAAAwb,EAAAtgB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KA8JM,SAAA8e,EAAOvU,GAAP,IAAAs8B,EAAA,OAAAnjC,EAAA3D,EAAAG,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,QAE5BwmC,EAAct8B,EAAME,OAA4B/H,OACjCgR,QAAQ,MAAQ,IAC3BmzB,EAAa,IAAIh4B,IAAUg4B,GAAY/3B,WAE3ChM,EAAKS,SAAS,CAAEsjC,eANY,wBAAA5nB,EAAApe,SAAAie,EAAAhe,SA9JN,gBAAA8G,GAAA,OAAAiX,EAAA9d,MAAAD,KAAAE,YAAA,GAEtB8B,EAAKmB,MAAQ,CACTlG,MAAO,KACPsmB,aAAa,EACbwiB,WAAY,IACZ3mC,MAAM,EACN6gC,cAAc,GAPIj+B,wEAgBO,IAAAc,EACwB9C,KAAKsB,MAAlDkV,EADqB1T,EACrB0T,mBAAoBvB,EADCnS,EACDmS,qBACtBkxB,EAAkBl1B,EAAakB,IAAI,MAAOjB,GAC1Ck1B,EAAmBn1B,EAAakB,IAAI,OAAQjB,GAHrBivB,EAISngC,KAAKmD,MAAnC88B,EAJqBE,EAIrBF,aAAc7gC,EAJO+gC,EAIP/gC,KAAMnC,EAJCkjC,EAIDljC,MACxB6d,EAAS,IAAI/M,IAAU/N,KAAKmD,MAAM4iC,aAClCjrB,EAAOurB,SAAYvrB,EAAOwrB,aAC1BxrB,EAAS,IAAI/M,IAAU,IAE3B,IAAMuL,EAAala,EAAO+mC,EAAkBC,EACtCG,EAAetxB,EAAqB9C,IAAImH,EAAWnI,SAAW,IAAIpD,IAAU,GAC5EwL,EAAena,EAAOgnC,EAAmBD,EACzCxsB,EAAYmB,EAAO7L,MAAMuH,GAE/B,OAAO3S,EAAA,qBAAKrC,UAAU,yCAClBqC,EAAA,oBAAIrC,UAAU,eACVqC,EAAA,oBACIrC,UAAWpC,EAAO,SAAW,GAC7BulB,KAAK,MACLzM,QAASlY,KAAK4lC,YAEd/hC,EAAA,uCAEJA,EAAA,oBACIrC,UAAYpC,EAAkB,GAAX,SACnBulB,KAAK,MACLzM,QAASlY,KAAK6lC,aAEdhiC,EAAA,2CAGRA,EAAA,sBAAMC,SAAU9D,KAAKwhC,cACjB39B,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,qBAAKrC,UAAU,wBACXqC,EAAA,2BACIA,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,oCAEJA,EAAA,sBAAMrC,UAAU,qBACZqC,EAAA,uBAAOknB,IAAI,IAAIld,KAAK,YAAY3J,KAAK,SAAStC,MAAO5B,KAAKmD,MAAM4iC,WAAY/hC,SAAUhE,KAAKuC,eAC3FsB,EAAA,0BAAOyV,EAAWnI,UAGzBo1B,EAAatF,GAAGnmB,GACbjX,EAAA,mBAAGrC,UAAU,kBAAb,gBAA4C8X,EAAWnI,OAAvD,aAEKwI,EAAUpL,UAAU,IACrB1K,EAAA,mBAAGrC,UAAU,kBAAb,kBAA8C,IAAIuM,IAAU/N,KAAKmD,MAAM4iC,YAAYpnB,KAAKhF,GAAW3L,UAAnG,IAA+G5O,EAAO,MAAQ,OAA9H,iBAKZyE,EAAA,qBAAKrC,UAAU,wBACXqC,EAAA,2BACIA,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,sCAEJA,EAAA,sBAAMrC,UAAU,qBACZqC,EAAA,uBAAOknB,IAAI,IAAIld,KAAK,YAAY3J,KAAK,SAAStC,MAAO5B,KAAKmD,MAAM4iC,WAAY/hC,SAAUhE,KAAKuC,aAAckhB,UAAQ,IACjH5f,EAAA,0BAAO0V,EAAapI,aAKlCwI,EAAUpL,UAAU,IAClB1K,EAAA,yBACIA,EAAA,kCAAY8V,EAAU3L,UAAtB,IAAkCsL,EAAWnI,QAC7CtN,EAAA,cAACqoB,GAAD,iBAAqB9sB,EAAO,eAAiB,kBAA7C,eAA4EoX,EAAmBvH,MAAM,KAAKjB,UAA1G,2BAGRnK,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,wBAAQrC,UAAS,iBAAAnD,OAAmB4hC,EAAe,aAAe,IAAM/7B,KAAK,SAASuf,SAAUzjB,KAAK8lC,gBACjGjiC,EAAA,0BACKo8B,EACGp8B,EAAA,cAACzC,GAAA,EAAD,MAEIhC,EAAO,WAAa,iBAMvCnC,GAAmB,2BAAVA,GACN4G,EAAA,yBACIA,EAAA,mBAAGrC,UAAU,kBAAkBvE,aAtGxBkH,aAmMlBqiC,GAActiB,YAzBH,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACfR,qBAAsBhS,EAAM6W,OAAO7E,qBACnCF,qBAAsB9R,EAAM6W,OAAO/E,qBACnCuB,mBAAoBrT,EAAMwS,IAAIa,qBAGP,SAACjQ,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxB5B,8BACAxC,cACDxZ,KAcoB2d,CAA6CyhB,ICnMlEc,oLAM+B,IAIzBC,EAJyB5jC,EACI9C,KAAKsB,MAA9BkS,EADqB1Q,EACrB0Q,OAAQoD,EADa9T,EACb8T,aACVojB,EAAc1qB,EAAM6C,IAAIqB,OAAQ9I,GAGtC,QAAoBA,IAAhBsvB,EACA0M,EAAW7iC,EAAA,qBAAKrC,UAAU,kBACtBqC,EAAA,+CAAyB2P,QAE1B,CACH,IAAMmzB,EAAa3M,EAAYtqB,gBACzBuqB,EAAcD,EAAY5pB,WAAa4pB,EAAY5pB,WAAW1B,WAAakI,EAAazE,IAAIqB,EAAQiD,IAAoBtH,MAK1Hu3B,EAH6B1mC,KAAKsB,MAA9B6T,uBAEqBC,yBAAuB4O,mBAAqB2iB,IAAeh3B,kBAAgBC,YACzF/L,EAAA,cAACogB,GAAD,MACJzQ,IAAWnG,EAAK6C,SACZrM,EAAA,cAAC2iC,GAAD,MAEA3iC,EAAA,cAACm/B,GAAD,CACPxvB,OAAQA,EACRymB,YAAaA,EACb4D,eAAgB8I,IAK5B,OACI9iC,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,cAACgxB,GAAD,CAAS5c,MAAM,oBACfpU,EAAA,cAAC6hC,GAAD,MACCgB,WAvCOviC,aA2DfyiC,GAAW1iB,YAbA,SAAC/gB,GAAD,MAA6B,CACjDqQ,OAAQrQ,EAAMoxB,OAAO/gB,OACrBoD,aAAczT,EAAMyT,aAAaA,aACjCjB,IAAKxS,EAAMwS,IAAIA,IACfR,qBAAsBhS,EAAM6W,OAAO7E,uBASU,KAAzB+O,CAA+BuiB,ICvDjDI,8MA6BKpiB,OAAS,kBACZ5gB,EAAA,qBAAKrC,UAAU,YACVsyB,GAAQjwB,EAAA,cAACw2B,GAAD,OACRvG,GAAQjwB,EAAA,cAAC+1B,GAAD,CAAQT,UAAU,KAC1BrF,GAAQjwB,EAAA,cAACywB,GAAD,OAETzwB,EAAA,qBAAKrC,UAAU,WACVsyB,GAAQjwB,EAAA,cAAC+iC,GAAD,OACR9S,GAAQjwB,EAAA,cAACq3B,GAAD,CAAiBD,QAAM,KAC/BnH,GAAQjwB,EAAA,cAAC43B,GAAD,CAAgBR,QAAM,KAC9BnH,GAAQjwB,EAAA,cAACi4B,GAAD,6FArCjB,IAEI,IAAMgL,EAAS5oC,OAAOixB,SAASzL,KAAKuC,MAAM,KACpC6e,EAAUgC,EAAO,GACjB9B,EAAU8B,EAAO,GACvB,GAAIhC,GAAWE,EAAS,KAAAtkB,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAA,IACpB,QAAAqW,EAAAD,EAAmBxR,EAAM+N,WAAWC,UAApCpX,OAAAwb,cAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,MAAAjB,GAAA,EAA+C,KAApC6R,EAAoCxR,EAAAnf,MAC3C,GAAIkjC,EAAQ1P,gBAAkB7C,EAAK1iB,YAC3Bm1B,EAAQ5P,gBAAkB7C,EAAKviB,UAAW,CAC1ChQ,KAAKsB,MAAM4hB,QAAQrD,UAAU,CAAErM,OAAQ+e,EAAK9iB,OAC5C,QALQ,MAAA4kB,GAAA1T,GAAA,EAAAC,EAAAyT,EAAA,YAAA3T,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAAlB,EAAA,MAAAC,KAU1B,MAAO3jB,GACLwB,YAA8BxB,EAAO,CACjC2B,YAAa,sCACb4E,YAAa,eApBDW,aAwDf4iC,GAAW7iB,YAAQ,KAZL,SAAC3d,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBtE,cACDtZ,KASiB2d,CAAkC2iB,mCC7DpDG,eACF,SAAAA,EAAY1lC,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAgnC,IACtBhlC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAupC,GAAA5kC,KAAApC,KAAMsB,KAmDOoE,YApDSjI,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAoDK,SAAAC,IAAA,IAAA8nC,EAAAxhC,EAAA,OAAA7C,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnB0nC,EAAajlC,EAAKV,MAAlB2lC,SACRjlC,EAAKS,SAAS,CAAExF,MAAO,OAFIoC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKNyC,EAAKV,MAAMoE,cALL,OAKvBD,EALuBpG,EAAAuB,KAAAvB,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQvB2C,EAAKS,SAAS,CAAExF,MAAOoC,EAAAM,GAAiBrB,SAAWe,EAAAM,GAAMuJ,aARlC7J,EAAAK,OAAA,qBAWH,IAApB+F,EAASG,OAXc,CAAAvG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAYjByC,EAAKklC,oBAAoBzhC,EAAS,GAAIwhC,GAZrB,eAAA5nC,EAAAK,OAAA,kBAe3BsC,EAAKS,SAAS,CAAEgD,aAfW,yBAAApG,EAAAU,SAAAZ,EAAAa,KAAA,YApDLgC,EAsETmlC,gBAtES,eAAA/gC,EAAA3I,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAsES,SAAAuB,EAAOgJ,GAAP,IAAAw9B,EAAAxhC,EAAA2hC,EAAArhC,EAAA,OAAAnD,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACvB0nC,EAAajlC,EAAKV,MAAlB2lC,SACAxhC,EAAazD,EAAKmB,MAAlBsC,WAGqB,QAFvB2hC,EAAuBx+B,SAASa,EAAM8f,cAAcmP,aAAa,cAAgB,IAAK,MAE1C,OAAbjzB,GAAqBA,EAASG,OAASwhC,GAL7C,CAAAzmC,EAAApB,KAAA,eAM3BvB,QAAQf,MAAM,uBANa0D,EAAAjB,OAAA,wBASzBqG,EAAUN,EAAS2hC,GATMzmC,EAAApB,KAAA,EAUzByC,EAAKklC,oBAAoBnhC,EAASkhC,GAVT,wBAAAtmC,EAAAZ,SAAAU,EAAAT,SAtET,gBAAAyD,GAAA,OAAA2C,EAAAnG,MAAAD,KAAAE,YAAA,GAAA8B,EAmFTklC,oBAnFS,eAAA5+B,EAAA7K,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAmFa,SAAA4G,EAAOC,EAAiBkhC,GAAxB,IAAAh1B,EAAAlU,EAAA,OAAA6E,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAC3B0S,EAAQjQ,EAAKV,MAAb2Q,IACFlU,EAAO,CAAEgI,UAASkhC,YAFWhhC,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAQR8nC,KAAMC,KAAN,GAAAjpC,OAAcH,OAAOC,QAAQopC,QAA7B,UAA8Cj9B,KAAKsK,UAAU7W,IARrD,WAAAkI,EAAArF,KASlB7C,KAAKypC,SATa,CAAAvhC,EAAA1G,KAAA,eAU3ByC,EAAKV,MAAM0B,QAAQ+C,EAASkM,GAVDhM,EAAAvG,OAAA,iBAAAuG,EAAA1G,KAAA,iBAAA0G,EAAA3G,KAAA,GAAA2G,EAAAtG,GAAAsG,EAAA,SAc/BxH,YAA6BwH,EAAAtG,GAAQ,CACjCf,YAAa,iDACb4E,YAAa,OAhBc,QAoBnCxB,EAAKV,MAAM+E,OAAON,EAASoB,MApBQ,yBAAAlB,EAAAlG,SAAA+F,EAAA9F,KAAA,aAnFb,gBAAA8G,EAAAF,GAAA,OAAA0B,EAAArI,MAAAD,KAAAE,YAAA,GAEtB8B,EAAKmB,MAAQ,CACTsC,SAAU,KACVxI,MAAO,MAJW+E,2MAShBhC,KAAK0F,iJAOkB,IAAAqS,EAAA/X,KAAA4D,EACD5D,KAAKmD,MAAzBsC,EADqB7B,EACrB6B,SAAUxI,EADW2G,EACX3G,MAElB,OAAIA,EAEI4G,EAAA,qBAAKrC,UAAU,gBACXqC,EAAA,uDACAA,EAAA,uBAAI5G,GACJ4G,EAAA,wBAAQqU,QAASlY,KAAK0F,aAAtB,UAMR7B,EAAA,qBAAKrC,UAAU,kBACG,OAAbiE,EACG5B,EAAA,cAAAA,EAAA,cACIA,EAAA,8CACC4B,EAAS+F,IAAI,SAACukB,EAASqG,GAAV,OACVvyB,EAAA,wBAAQjG,IAAKw4B,EAAGqR,YAAWrR,EAAG50B,UAAU,kBAAkB0W,QAASH,EAAKovB,iBACpEtjC,EAAA,qBAAKrC,UAAU,iBACXqC,EAAA,cAAC41B,GAAD,CAAQ1zB,QAASgqB,KAErBlsB,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,sBAAMrC,UAAU,aAAauuB,QAM7ClsB,EAAA,cAACzC,GAAA,EAAD,cA/CiB+C,aA8HxBujC,GAAoBxjB,YAlBT,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACf1D,IAAK9O,EAAM6W,OAAO/H,MAgBWiS,CAAyB8iB,ICjIpDW,8MAEMC,iBAqDDC,gBAAkB,WACrB7lC,EAAK4lC,QAAQE,2FApDgB,IAAA/vB,EAAA/X,KACrBgY,EAAehY,KAAKsB,MAApB0W,WAGRhY,KAAK4nC,QAAU,IAAK1pC,OAAe6pC,KAAKC,OAAO,CAC3CC,UAAW/pC,OAAOgqC,SAClBC,KAAM,CAAEjkC,KAAM,YACdkkC,UAAW,CACPlkC,KAAM,QAEVyjB,UAAW,WACP3P,IACAD,EAAKzW,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,uGAAwGyY,UAAWhB,GAAU8H,aAIjKwqB,OAAQ,SAACprC,GACQ,MAATA,IACAwB,YAA8BxB,EAAO,CACjC2B,YAAa,oCACb4E,YAAa,aAEjBwU,IACAD,EAAKzW,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,yEAA0EyY,UAAWhB,GAAUnW,+CAY3I,IAAM0oC,EAAW,GAAAjqC,OAAM8wB,SAASoZ,SAAf,MAAAlqC,OAA4B8wB,SAASqZ,MAArCnqC,OAA4C8wB,SAASiK,UACtE,OAAOv1B,EAAA,qBAAKrC,UAAU,qBAClBqC,EAAA,+CACAA,EAAA,6HACAA,EAAA,qBAAKrC,UAAU,kBACXqC,EAAA,mBAAG6f,KAAI,mDAAArlB,OAAqDH,OAAOuqC,UAA5D,kBAAApqC,OAAsFiqC,EAAtF,8BAAAjqC,OAA8H2B,KAAKsB,MAAMyE,QAAzI,KAAA1H,OAAoJ2B,KAAKsB,MAAM6G,SAClKtE,EAAA,wBAAQrC,UAAU,iBAAgBqC,EAAA,gDAEtCA,EAAA,wBAAQrC,UAAU,eAAe0W,QAASlY,KAAK6nC,iBAAiBhkC,EAAA,gDAEpEA,EAAA,mFAnDyBM,aA2ExBukC,GAAoBxkB,YAAQ,KAfd,SAAC3d,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBvY,YACDrF,KAY0B2d,CAAkCyjB,IChE7DgB,eACF,SAAAA,EAAmBrnC,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA2oC,IAC9C3mC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAkrC,GAAAvmC,KAAApC,KAAMsB,EAAO4oB,KAmDA0e,mBApDiCnrC,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAoDZ,SAAA4G,IAAA,IAAAhD,EAAA6S,EAAAxN,EAAA2M,EAAAmyB,EAAA4B,EAAAtoC,EAAAG,EAAAooC,EAAA1iC,EAAAkC,EAAAtC,EAAAhD,EAAA+lC,EAAA1iC,EAAAX,EAAAc,EAAA,OAAA5D,EAAA3D,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UAAAuD,EACQd,EAAKV,MAAvCqU,EAD0B7S,EAC1B6S,IAAKxN,EADqBrF,EACrBqF,OAAQ2M,EADahS,EACbgS,iBACbmyB,EAAajlC,EAAKmB,MAAlB8jC,SAEF4B,EAAgBnhC,KAAcyK,IAAIhK,OAAQuC,GAJd,CAAAzE,EAAA1G,KAAA,eAAA0G,EAAAvG,OAAA,wBASlCvC,iBAAsB,SAACC,GACnBA,EAAMS,SAAS,SAAUgrC,EAAcxoC,QAGnCE,EAAoBsoC,EAApBtoC,gBAERyB,EAAKS,SAAS,CAAEumC,UAAU,IAC1BhnC,EAAKV,MAAM4hB,QAAQnB,YAAY,CAAE5Z,WAhBClC,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,GAsBOgB,IAtBP,QAAA6F,EAAAH,EAAArF,KAAA0H,EAAA7K,OAAAuR,EAAA,EAAAvR,CAAA2I,EAAA,GAsB7B1F,EAtB6B4H,EAAA,GAsBnBwgC,EAtBmBxgC,EAAA,GAAArC,EAAA1G,KAAA,wBAAA0G,EAAA3G,KAAA,GAAA2G,EAAAtG,GAAAsG,EAAA,SAwB1BA,EAAAtG,GAAMrB,UAAYqI,OAElBlI,YAA6BwH,EAAAtG,GAAQ,CACjCf,YAAa,yCACb4E,YAAa,aAEjBxB,EAAKV,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS2H,EAAAtG,GAAMrB,aAG1C0D,EAAKV,MAAM4hB,QAAQnB,YAAY,CAAE5Z,OAAQ,OAlCXlC,EAAAvG,OAAA,kBAuC5BsG,EAAOE,SACPlD,EAxC4B,eAAA+a,EAAAtgB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAwClB,SAAAC,EAAO4G,EAAiBkM,GAAxB,IAAA+P,EAAA,OAAApf,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNyiB,EAAgBlN,EAAiB3C,IAAIpM,GAAS,GADxC1G,EAAAE,KAAA,EAGNyC,EAAKV,MAAM4hB,QAAQmM,MAAM1Z,EAAKjV,EAAUqF,EAASic,EAAe,CAAE4N,UAAU,EAAM3d,QAH5E,OAIZjQ,EAAKV,MAAM4hB,QAAQjiB,WAAW,CAAE+E,SAChChE,EAAKV,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CACbvY,QAAS,uCACTyY,UAAWhB,GAAU8H,YARjB,wBAAAxe,EAAAU,SAAAZ,EAAAa,SAxCkB,gBAAAyD,EAAAqD,GAAA,OAAAiX,EAAA9d,MAAAD,KAAAE,YAAA,GAqD5B6oC,EAAS,WACX/mC,EAAKV,MAAM4hB,QAAQjiB,WAAW,CAAE+E,SAIhChE,EAAKS,SAAS,CAAEumC,UAAU,KAGxB3iC,EAAS,SAACN,EAAiB0B,GAC7B,GAAIA,IAAWN,KAAyB,CACpC,GAAInF,EAAKmB,MAAM6lC,SACX,OAEJhnC,EAAKV,MAAM4hB,QAAQliB,SAAS,CAAEgF,OAAMQ,MAAO3C,EAAA,cAAC6kC,GAAD,CAAmB3iC,QAASA,EAASoC,OAAQA,EAAQ6P,WAAY+wB,IAAYriC,SAAUqiC,SAElIA,KAIFrjC,EAxE4B,eAAAuZ,EAAAxhB,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAwEd,SAAAuB,IAAA,IAAAZ,EAAA4F,EAAA,OAAA7C,EAAA3D,EAAAG,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACVM,EAAO,IAAI8F,IAAKjF,GADNC,EAAArB,KAAA,GAKDwpC,EALC,CAAAnoC,EAAApB,KAAA,QAAAoB,EAAAhB,GAKkBmpC,EALlBnoC,EAAApB,KAAA,sBAAAoB,EAAApB,KAAA,EAK2CM,EAAKmL,IAAItF,cALpD,OAAA/E,EAAAhB,GAAAgB,EAAAC,KAAA,OAKZ6E,EALY9E,EAAAhB,GAAAgB,EAAApB,KAAA,oBAAAoB,EAAArB,KAAA,GAAAqB,EAAA0C,GAAA1C,EAAA,SAORwH,IAAWjB,KAAOrB,SAAUlF,EAAA0C,GAAM/E,QAAQiF,MAAM,8BAPxC,CAAA5C,EAAApB,KAAA,eAQF,IAAIK,MAAM,gCARR,cAURnB,YAA6BkC,EAAA0C,GAAQ,CACjCzE,YAAa,kCACb4E,YAAa,sCAZT7C,EAAA0C,GAAA,WAkBQ,IAApBoC,EAASG,OAlBG,CAAAjF,EAAApB,KAAA,YAmBR4I,IAAWjB,KAAO/G,SAnBV,CAAAQ,EAAApB,KAAA,eAoBF,IAAIK,MAAM,gCApBR,cAsBF,IAAIA,MAAM,iDAtBR,WA4BZuI,IAAWjB,KAAOrB,QAAUsC,IAAWjB,KAAOI,SA5BlC,CAAA3G,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GA8BWM,EAAKmL,IAAIE,IAAYC,iBA9BhC,WAAAxK,EAAAC,OAgCIkE,IAAYyqB,WAhChB,CAAA5uB,EAAApB,KAAA,eAiCF,IAAIK,MAAJ,gCAAAvB,OAA0CyG,IAAYmkC,gBAAtD,aAjCE,eAAAtoC,EAAAjB,OAAA,SAqCT+F,GArCS,yBAAA9E,EAAAZ,SAAAU,EAAAT,KAAA,aAxEc,yBAAAif,EAAAhf,MAAAD,KAAAE,YAAA,GAgH5BsG,EAAQ,CACVR,OACAQ,MAAO3C,EAAA,cAAC6jC,GAAD,CAAmBT,SAAUA,EAAUvhC,YAAaA,EAAa1C,QAASA,EAASqD,OAAQA,EAAQ/H,QAAS,mBACnHoI,SAAUqiC,GAGd/mC,EAAKV,MAAM4hB,QAAQliB,SAASwF,GAtHM,yBAAAP,EAAAlG,SAAA+F,EAAA9F,KAAA,aAlDlCgC,EAAKmB,MAAQ,CACT8jC,SAAU,GACV+B,UAAU,GAJgChnC,mFAS9C,IAA+C,IAA3C9D,OAAOixB,SAASzL,KAAK9Q,QAAQ,SAAiB,CAC9C,IAAMq0B,EAAWiC,GAAmB,OACpB,MAAZjC,GAAiC,KAAbA,GAA2C,KAAxBjnC,KAAKmD,MAAM8jC,UAClDjnC,KAAKyC,SAAS,CAAEwkC,+CASK,IACrB9+B,EAAWnI,KAAKsB,MAAhB6G,OACF0gC,EAAgBnhC,KAAcyK,IAAIhK,OAAQuC,GAEhD,QAAsBA,IAAlBm+B,EACA,OAAOhlC,EAAA,cAAAA,EAAA,eALkB,IAQrBxD,EAAqCwoC,EAArCxoC,KAAMC,EAA+BuoC,EAA/BvoC,QAAS1B,EAAsBiqC,EAAtBjqC,YAAawB,EAASyoC,EAATzoC,KAEpC,OACIyD,EAAA,qBAAKrC,UAAS,sBAAAnD,OAAwBgC,EAAxB,KAAAhC,OAAgCiC,EAAU,GAAK,aACzDuD,EAAA,qBACIrC,UAAU,gBACVmjB,KAAK,SACLzM,QAASlY,KAAK4oC,oBAEd/kC,EAAA,sBAAMrC,UAAU,kBAAkBpB,GAClCyD,EAAA,mBAAGrC,UAAU,wBACPlB,EACkB,KAAhB,cAEHA,GAA2B,KAAhB1B,EACRA,EAAc,eA7CZuF,aAwMjBglC,GAAajlB,YAzBF,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACf1D,IAAK9O,EAAM6W,OAAO/H,IAClB6C,iBAAkB3R,EAAM6W,OAAOlF,mBAGR,SAACvO,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBvY,WACAmW,eACA/gB,aACAC,eACAouB,UACD9oB,KAYmB2d,CAA6CykB,ICpNjES,eACF,SAAAA,EAAmB9nC,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAopC,IAC9CpnC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA2rC,GAAAhnC,KAAApC,KAAMsB,EAAO4oB,KAuBAmf,YAAc,WAC3B,OAAOjiC,KAAWoE,IAAI,SAACrD,EAAgBiuB,GACnC,OACIvyB,EAAA,cAACslC,GAAD,CAAYvrC,IAAKw4B,EAAGjuB,OAAQA,OA3BUnG,wEAS9C,OACI6B,EAAA,qBAAKrC,UAAU,mBACXqC,EAAA,qBAAKrC,UAAU,aACXqC,EAAA,qBAAKrC,UAAU,oBACVxB,KAAKqpC,eAEVxlC,EAAA,mBAAGrC,UAAU,uBAAb,iFAhBO2C,aA0CdmlC,GAAUplB,YAAQ,KARJ,SAAC3d,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,GACzB5d,KAMgB2d,CAAkCklB,IC9B5CF,GAAqB,SAAC9oC,GAC/B,IAAMmpC,EAAYnpC,EAAKgvB,QAAQ,UAAW,QAEpCoa,EADQ,IAAI9nC,OAAJ,OAAArD,OAAkBkrC,EAAlB,sBACQE,KAAKvrC,OAAOixB,SAASzL,MAC3C,OAAK8lB,EAGAA,EAAQ,GAGNE,mBAAmBF,EAAQ,GAAGpa,QAAQ,MAAO,MAFzC,GAHA,MAYTua,eACF,SAAAA,EAAmBroC,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA2pC,IAC9C3nC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAksC,GAAAvnC,KAAApC,KAAMsB,EAAO4oB,KACR/mB,MAAQ,CACTymC,sBAAsB,GAHoB5nC,8MAQ9ChC,KAAKsB,MAAM4hB,QAAQnB,YAAY,CAAE5Z,OAAQ,QAEO,IAA5CjK,OAAOixB,SAASzL,KAAK9Q,QAAQ,kCAE7B5S,KAAKyC,SAAS,CAAEmnC,sBAAsB,sBAKsB5pC,KAAK6pC,oCAA1DrC,aAAUzhC,YAAS+jC,aAAU3hC,WAAQiP,4DAExC3Y,YAA6BY,EAAAM,GAAQ,CACjCf,YAAa,oDACb4E,YAAa,mBAIjBgkC,QAAwB98B,IAAZ3E,QAAsC2E,IAAbo/B,QAAqCp/B,IAAXvC,8CAErDnI,KAAK+pC,mBAAmBhkC,EAASoC,8DAEvC1J,YAA6BY,EAAAgE,GAAQ,CACjCzE,YAAa,qDACb4E,YAAa,wCAGbgkC,GAAYpwB,GACpBpX,KAAKsB,MAAM4hB,QAAQtX,SAAS,CAAEwL,kBAElCpX,KAAKyC,SAAS,CAAEmnC,sBAAsB,yJAQb,IACrBA,EAAyB5pC,KAAKmD,MAA9BymC,qBAGR,OAFoB5pC,KAAKsB,MAAjByE,QAGGlC,EAAA,cAACmmC,GAAA,EAAD,CAAUzQ,GAAG,cAIpB11B,EAAA,qBAAKrC,UAAU,QACVooC,GACG/lC,EAAA,cAAAA,EAAA,cACIA,EAAA,qBAAKrC,UAAU,SACXqC,EAAA,cAACzC,GAAA,EAAD,OAEJyC,EAAA,qBAAKrC,UAAU,aAGtBsyB,GAAQjwB,EAAA,cAACw2B,GAAD,OACRvG,GAAQjwB,EAAA,cAAC+1B,GAAD,CAAQT,UAAU,KAC1BrF,GAAQjwB,EAAA,cAACylC,GAAD,OACTzlC,EAAA,qBAAKrC,UAAU,WACVsyB,GAAQjwB,EAAA,cAACi4B,GAAD,wLAOfmO,EAAWf,GAAmB,UAC9B/lC,EAAQ+lC,GAAmB,kCAEvBnjC,EAAU5C,EAAM8iB,MAAM,KAAK,GAC3B9d,EAAiBS,SAASzF,EAAM8iB,MAAM,KAAK,QAAIvb,GAC/Cw/B,YAAiB/a,SAASoZ,sBAAapZ,SAASqZ,aAAOrZ,SAASiK,UAChEr7B,EAAO,CACTgI,UACAokC,QAAS,CACLC,WAAY,qBACZ36B,KAAMw6B,EACNI,aAAcH,EACdI,UAAWpsC,OAAOuqC,+BAICpB,KAAMC,KAAN,GAAAjpC,OAAcH,OAAOC,QAAQopC,QAA7B,UAA8Cj9B,KAAKsK,UAAU7W,eAA9ED,SACAgsC,EAAWhsC,EAASC,KAAKwsC,IACzBC,EAAqB1sC,EAASC,KAAK0sC,eAAej/B,IAAI,SAAC5J,GAAD,OAAmBA,EAAM0J,gBAChFvF,yBACK,IAAInG,MAAM,6DAEa,aAA7B9B,EAASC,KAAK2sC,kCACR,IAAI9qC,MAAJ,qCAAAvB,OAA+CP,EAASC,KAAK2sC,yBAEZ,IAAvDF,EAAmB53B,QAAQ7M,EAAQuF,sCAC7B,IAAI1L,MAAJ,WAAAvB,OAAqB0H,EAArB,gEAEH,CAAEyhC,UAAU,EAAMzhC,UAAS+jC,WAAU3hC,oDAGxCxH,EAAAhB,GAAM7B,UAAsC,MAA1B6C,EAAAhB,GAAM7B,SAASmc,OACjC7C,EAAQ,IAAIP,GAAM,CACdvY,QAAO,yDAAAD,OAA2D0H,EAA3D,2CAGXtH,YAA6BkC,EAAAhB,GAAQ,CAAEf,YAAa,6BAA8B4E,YAAa,aAE/F4T,EAAQ,IAAIP,GAAM,CACdvY,QAAO,+FAIR,CAAEkpC,UAAU,EAAOpwB,iDAG9B3Y,YAA8B,IAAImB,MAAM,wCAAyC,CAC7EhB,YAAa,yCACb4E,YAAa,yBAGV,CAAEgkC,UAAU,mMAIMzhC,EAAiBoC,gGACEnI,KAAKsB,MAA7C4hB,YAASvN,QAAK1D,QAAK6C,qBACrB+zB,EAAgBnhC,KAAcyK,IAAIhK,OAAQuC,yBAGtC,IAAI9K,MAAM,0DAIMipC,EAActoC,gBAAgBwF,6CAAjDrF,iBAEG0K,aAAgB,IAAIzF,IAAKjF,GAAWqF,8CACpCic,EAAgBlN,EAAiB3C,IAAIpM,GAAS,aAC9Cmd,EAAQmM,MAAM1Z,EAAKjV,EAAUqF,EAASic,EAAe,CAAE4N,UAAU,EAAM3d,uBAC7EiR,EAAQtX,SAAS,CACbwL,MAAO,IAAIP,GAAM,CACbvY,QAAS,gDACTyY,UAAWhB,GAAU8H,6CAM3B,IAAIje,MAAM,qJAzJAuE,aAmLXwmC,GAAOzmB,YAtBI,SAAC/gB,GAAD,MAA6B,CACjDwS,IAAKxS,EAAMwS,IAAIA,IACf5P,QAAS5C,EAAM6W,OAAOjU,QACtBkM,IAAK9O,EAAM6W,OAAO/H,IAClB6C,iBAAkB3R,EAAM6W,OAAOlF,mBAGR,SAACvO,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBkL,SACAtN,eACAnW,YACDrF,KAUa2d,CAA6CylB,ICpNpDiB,GAAuC,kBAChD/mC,EAAA,qBAAKrC,UAAU,eACXqC,EAAA,cAACzC,GAAA,EAAD,QCGKypC,GAAS,kBAClBhnC,EAAA,qBAAKrC,UAAU,UACVsyB,GAAQjwB,EAAA,cAACw2B,GAAD,OACRvG,GAAQjwB,EAAA,cAAC+1B,GAAD,CAAQT,UAAU,KAE1BrF,GAAQjwB,EAAA,cAACywB,GAAD,OAETzwB,EAAA,qBAAKrC,UAAU,WACVsyB,GAAQjwB,EAAA,cAACq3B,GAAD,OACRpH,GAAQjwB,EAAA,cAAC43B,GAAD,UCXfqP,eACF,SAAAA,EAAYxpC,GAAc,IAAAU,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAA8qC,IACtB9oC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAqtC,GAAA1oC,KAAApC,KAAMsB,KAyBHsjB,eAAiB,WAAM,IAAAmmB,EACQ/oC,EAAKV,MAAM0pC,OAAOC,OAA5C3yB,EADkByyB,EAClBzyB,YAAa5R,EADKqkC,EACLrkC,SACjB4R,GACA5R,KA7BkB1E,wEAQO,IAAA+V,EAAA/X,KAE7B,OAA+B,IAA3BA,KAAKsB,MAAM0pC,OAAO/pB,KACXpd,EAAA,cAAAA,EAAA,eAGJ7D,KAAKsB,MAAM0pC,OAAO3tB,WAAW7R,IAAI,SAAC0/B,EAA4BxrB,GAAkB,IAC3ElZ,EAAoB0kC,EAApB1kC,MAAOE,EAAawkC,EAAbxkC,SAEf,OACI7C,EAAA,qBAAKjG,IAAK8hB,EAAOle,UAAU,gBACvBqC,EAAA,qBAAK8gB,KAAK,OAAOnjB,UAAU,UAAU0W,QAASH,EAAK6M,iBAClDkP,GAAQttB,EAAO,CAAEA,OAAO,EAAME,uBArB1BvC,aA0CZgnC,GAAQjnB,YAPG,SAAC/gB,GAAD,MAA6B,CACjD6nC,OAAQ7nC,EAAMqD,MAAM+Q,QAMH2M,CAAyB4mB,ICnDjCM,GAAejqC,+BAAqB,iBAArBA,GCStBkqC,eACF,SAAAA,EAAmB/pC,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAqrC,IAC9CrpC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA4tC,GAAAjpC,KAAApC,KAAMsB,EAAO4oB,KAgTAohB,aAAe,SAACzoC,GACdA,EAAE0mB,cAAcgiB,aAAe1oC,EAAE0mB,cAAciiB,WAAa3oC,EAAE0mB,cAAckiB,aAAe,IAEtGzpC,EAAKS,SAAS,CAAEipC,cAAc,KApTY1pC,EAwTjC2pC,gBAAkB,WAC/B3pC,EAAKV,MAAM4hB,QAAQkoB,aAAa,CAAEv2B,eAAe,IACjD7S,EAAKV,MAAMqrB,UAxTX3qB,EAAKmB,MAAQ,CACTuoC,cAAc,GAH4B1pC,wEAWjB,IACrB0pC,EAAiB1rC,KAAKmD,MAAtBuoC,aACR,OACI7nC,EAAA,qBAAKrC,UAAU,eACXqC,EAAA,sDACAA,EAAA,qBAAKrC,UAAU,iBAAiBoqC,SAAU5rC,KAAKsrC,cAC3CznC,EAAA,0ZACAA,EAAA,uBAAGA,EAAA,qCACHA,EAAA,wBACIA,EAAA,sCAEIA,EAAA,wBACIA,EAAA,2FACoEA,EAAA,yBADpE,qQAEwQA,EAAA,yBAFxQ,2JAG8JA,EAAA,yBAH9J,iKAIyKA,EAAA,yBAJzK,yIAK4IA,EAAA,yBAL5I,sHAMoHA,EAAA,mBAAG6f,KAAK,gCAAgC/Z,OAAO,SAAS8jB,IAAI,uBAA5D,iCANpH,IAMwO5pB,EAAA,yBANxO,6dAOgeA,EAAA,yBAPhe,mlBAQwlBA,EAAA,yBARxlB,4YASmZA,EAAA,yBATnZ,yHAU4HA,EAAA,yBAV5H,oHAWuHA,EAAA,yBAXvH,gJAY8IA,EAAA,mBAAG6f,KAAK,gCAAgC/Z,OAAO,SAAS8jB,IAAI,uBAA5D,iCAZ9I,IAYkQ5pB,EAAA,yBAZlQ,kNAauNA,EAAA,yBAbvN,kTAcqTA,EAAA,yBAdrT,gJAemJA,EAAA,yBAfnJ,+IAgBkJA,EAAA,yBAhBlJ,oQAkBIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,qHACAA,EAAA,uJACAA,EAAA,mHACAA,EAAA,yMAtBR,4GAwB+GA,EAAA,yBAxB/G,4QAyB+QA,EAAA,yBAzB/Q,gQA0BmQA,EAAA,yBA1BnQ,mIA2BsIA,EAAA,yBA3BtI,oFA4BuFA,EAAA,yBA5BvF,qEA6BwEA,EAAA,yBA7BxE,iHA8BoHA,EAAA,yBA9BpH,kFAmCRA,EAAA,iCAEIA,EAAA,wBACIA,EAAA,sFAA+DA,EAAA,mBAAG6f,KAAK,uBAAuB/Z,OAAO,SAAS8jB,IAAI,uBAAnD,wBAA/D,QAGR5pB,EAAA,+BAEIA,EAAA,wBACIA,EAAA,oFACAA,EAAA,sKAGRA,EAAA,kCAEIA,EAAA,wBACIA,EAAA,sLAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,qDACAA,EAAA,mFAJR,yFAQAA,EAAA,iIACAA,EAAA,+NAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,wIACAA,EAAA,oFACAA,EAAA,qKAGRA,EAAA,oWAGRA,EAAA,sCAEIA,EAAA,wBACIA,EAAA,sLAGRA,EAAA,+CAEIA,EAAA,wBACIA,EAAA,4TAGRA,EAAA,2CAEIA,EAAA,wBACIA,EAAA,oTAGRA,EAAA,wEAEIA,EAAA,wBACIA,EAAA,wLAGRA,EAAA,+BAEIA,EAAA,wBACIA,EAAA,gKAAyIA,EAAA,mBAAG6f,KAAK,gCAAgC/Z,OAAO,SAAS8jB,IAAI,uBAA5D,kCACzI5pB,EAAA,kJAA2HA,EAAA,mBAAG6f,KAAK,gCAAgC/Z,OAAO,SAAS8jB,IAAI,uBAA5D,oCAGnI5pB,EAAA,mCAEIA,EAAA,wBACIA,EAAA,wLAAiKA,EAAA,mBAAG6f,KAAK,gCAAgC/Z,OAAO,SAAS8jB,IAAI,uBAA5D,oCAGzK5pB,EAAA,qCAEIA,EAAA,wBACIA,EAAA,+KACAA,EAAA,+KACAA,EAAA,+VAGRA,EAAA,oEAEIA,EAAA,wBACIA,EAAA,mSACAA,EAAA,2QACAA,EAAA,4RACAA,EAAA,0bAGRA,EAAA,sCAEIA,EAAA,wBACIA,EAAA,6YACAA,EAAA,6CAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,gHACAA,EAAA,uJACAA,EAAA,wLACAA,EAAA,qQANR,kEAUAA,EAAA,0KAGRA,EAAA,kEAEIA,EAAA,wBACIA,EAAA,qDAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,kHACAA,EAAA,qGACAA,EAAA,2GACAA,EAAA,mGANR,qJAUAA,EAAA,4HAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,2DACAA,EAAA,wSAGRA,EAAA,sIACAA,EAAA,iIACAA,EAAA,oHACAA,EAAA,uIACAA,EAAA,+IACAA,EAAA,4IACAA,EAAA,yKAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,4GAGRA,EAAA,+HAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,8GAKhBA,EAAA,sCAEIA,EAAA,wBACIA,EAAA,oJACAA,EAAA,uLACAA,EAAA,0IAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,uHACAA,EAAA,gSACAA,EAAA,gKAGRA,EAAA,0IAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,2CAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,yCACAA,EAAA,yFACAA,EAAA,mFACAA,EAAA,gFACAA,EAAA,gIAGRA,EAAA,gLACAA,EAAA,gTACAA,EAAA,gEAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,kDACAA,EAAA,2IACAA,EAAA,oGAOxBA,EAAA,iDAEIA,EAAA,wBACIA,EAAA,wUACAA,EAAA,+KACAA,EAAA,gGAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,uOACAA,EAAA,kUAJR,yDAQAA,EAAA,6PACAA,EAAA,yGAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,iKACAA,EAAA,qIAKhBA,EAAA,kCAEIA,EAAA,wBACIA,EAAA,uJACAA,EAAA,+iBACAA,EAAA,mIACAA,EAAA,maACAA,EAAA,6VACAA,EAAA,2SACAA,EAAA,iIACAA,EAAA,+KAGRA,EAAA,wBACIA,EAAA,wBACIA,EAAA,iHAEIA,EAAA,oBAAIK,KAAK,KACLL,EAAA,kIACAA,EAAA,yGAGRA,EAAA,8FACAA,EAAA,gKACAA,EAAA,sNAKhBA,EAAA,4FAAqEA,EAAA,mBAAG6f,KAAK,4BAA4B/Z,OAAO,SAAS8jB,IAAI,uBAAxD,sBAArE,QAAkL5pB,EAAA,mBAAG6f,KAAK,sBAAsB/Z,OAAO,SAAS8jB,IAAI,uBAAlD,kBAAlL,KACA5pB,EAAA,wBAAQ4f,UAAWioB,EAAcxzB,QAASlY,KAAK2rC,iBAC3C9nC,EAAA,qDA5SUM,aA8UxB0nC,GAAa3nB,YAAQ,KAfA,SAAC3d,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBinB,gBACAnqC,gBACDsF,KAWY2d,CAAkCmnB,IAExCS,GAAgB,SAAC9lC,EAAcoS,EAA4BsW,GAA3C,MAA0F,CACnH1oB,OACAQ,MAAO3C,EAAA,cAACgoC,GAAD,CAAYlf,OAAQ+B,IAC3BpW,aAAa,EACb5R,SAAU0R,ICpUR2zB,GAAclS,YAAU,SAAA93B,GAAA,SAAAiqC,IAAA,OAAAvuC,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAgsC,GAAAvuC,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAAuuC,GAAA/rC,MAAAD,KAAAE,YAAA,OAAAzC,OAAAiG,EAAA,EAAAjG,CAAAuuC,EAAAjqC,GAAAtE,OAAAkG,EAAA,EAAAlG,CAAAuuC,EAAA,EAAApuC,IAAA,qBAAAgE,MAAA,SAIIqqC,GAClBjsC,KAAKsB,MAAM6tB,WAAa8c,EAAU9c,UAClCjxB,OAAOguC,SAAS,EAAG,KANL,CAAAtuC,IAAA,SAAAgE,MAAA,WAelB,OAAOiC,EAAA,cAAAA,EAAA,mBAfWmoC,EAAA,CAEa7nC,cAsBrCgoC,eAEF,SAAAA,EAAmB7qC,EAAc4oB,GAAiB,IAAAloB,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAuC,KAAAmsC,IAC9CnqC,EAAAvE,OAAAyE,EAAA,EAAAzE,CAAAuC,KAAAvC,OAAA0E,EAAA,EAAA1E,CAAA0uC,GAAA/pC,KAAApC,KAAMsB,EAAO4oB,KA6BVkiB,YAAc,SAA4DC,GAAkE,IACvItmC,EAAY/D,EAAKV,MAAjByE,QAKR,GAJ4B/D,EAAKmB,MAAzBmpC,gBAKJ,OAAO,kBAAMzoC,EAAA,cAAC0oC,GAAD,OAGjB,IAAKxmC,EAAS,CACV,IAAMqzB,EAAWl7B,OAAOixB,SAASiK,SAQjC,MAPiB,MAAbA,GAAiC,aAAbA,IACpBp3B,EAAKV,MAAM4hB,QAAQtX,SAAS,CACxBwL,MAAO,IAAIP,GAAM,CAAEvY,QAAS,+DAAgEyY,UAAWhB,GAAUiB,YAErHhV,EAAKV,MAAM4hB,QAAQ4L,SAASsK,IAGzB,kBAAMv1B,EAAA,cAAC2oC,EAAA,EAAD,CAAUjT,GAAG,OAG9B,OAAO8S,GApDuCrqC,EAkFjCyqC,cAlFiChvC,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAA3D,EAAAC,KAkFjB,SAAAC,IAAA,IAAA2D,EAAAiD,EAAAmd,EAAAvN,EAAA1D,EAAA6C,EAAApU,EAAAshB,EAAA,OAAApf,EAAA3D,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuD,EAC4Bd,EAAKV,MAAtDyE,EADqBjD,EACrBiD,QAASmd,EADYpgB,EACZogB,QAASvN,EADG7S,EACH6S,IAAK1D,EADFnP,EACEmP,IAAK6C,EADPhS,EACOgS,kBAChC/O,EAFyB,CAAA1G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKJV,eALI,OAKrB6B,EALqBrB,EAAAuB,KAAAvB,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAK,OAAA,UAQd,GARc,eAAAL,EAAAE,KAAA,GAWF6L,aAAgB,IAAIzF,IAAKjF,GAAWqF,GAXlC,YAAA1G,EAAAuB,KAAA,CAAAvB,EAAAE,KAAA,gBAerBoW,EAAIqZ,eAAetuB,GACnBiV,EAAIsZ,WAAWlpB,GAETic,EAAgBlN,EAAiB3C,IAAIpM,GAAS,GAlB/B1G,EAAAE,KAAA,GAoBf2jB,EAAQmM,MAAM1Z,EAAKjV,EAAUqF,EAASic,EAAe,CAAE4N,UAAU,EAAO3d,QApBzD,eAAA5S,EAAAK,OAAA,UAsBd,GAtBc,eAAAL,EAAAK,OAAA,UA0BtB,GA1BsB,yBAAAL,EAAAU,SAAAZ,EAAAa,KAAA,YAhF7BgC,EAAKmB,MAAQ,CACTmpC,iBAAiB,GAHyBtqC,yNAQfhC,KAAKsB,MAA5BuT,kBAAec,QAEvB3V,KAAKyC,SAAS,CAAE6pC,iBAAiB,aAGVtsC,KAAKysC,iEAElBzsC,KAAKsB,MAAM4hB,QAAQ6L,OAAOpZ,EAAK,CAAEuZ,QAAQ,WAEnDlvB,KAAKyC,SAAS,CAAE6pC,iBAAiB,IAE5Bz3B,IACK7O,EAAOE,SACPsW,EAAQ,kBAAMzE,EAAKzW,MAAM4hB,QAAQjiB,WAAW,CAAE+E,UACpDhG,KAAKsB,MAAM4hB,QAAQliB,SAAS8qC,GAAc9lC,EAAMwW,EAAOA,yIAsC3D,OACI3Y,EAAA,cAAC6oC,EAAA,EAAD,CAAQ/d,QAASA,IACb9qB,EAAA,qBAAKrC,UAAU,OACVsyB,GAAQjwB,EAAA,cAAC2vB,GAAD,OACT3vB,EAAA,cAACkoC,GAAD,MACAloC,EAAA,cAAC8oC,EAAA,EAAD,CAAO1nC,KAAK,IAAI2nC,OAAK,EAACP,UAAW1B,KACjC9mC,EAAA,cAAC8oC,EAAA,EAAD,CAAO1nC,KAAK,YAAYonC,UAAWrsC,KAAKosC,YAAYrF,MACpDljC,EAAA,cAAC8oC,EAAA,EAAD,CAAO1nC,KAAK,UAAUonC,UAAWrsC,KAAKosC,YAAYvB,MAClDhnC,EAAA,cAAC8oC,EAAA,EAAD,CAAO1nC,KAAK,YAAYonC,UAAWrsC,KAAKosC,YAAYtR,MACpDj3B,EAAA,cAAC8oC,EAAA,EAAD,CAAO1nC,KAAK,WAAWonC,UAAWzB,KACjC9W,GAAQjwB,EAAA,cAACysB,GAAD,OACRwD,GAAQjwB,EAAA,cAACsnC,GAAD,gBAzENhnC,aAiJV0oC,GAAM3oB,YA/BK,SAAC/gB,GAAD,MAA6B,CACjD4C,QAAS5C,EAAM6W,OAAOjU,QACtB8O,cAAe1R,EAAM6W,OAAOnF,cAC5BC,iBAAkB3R,EAAM6W,OAAOlF,iBAC/Ba,IAAKxS,EAAMwS,IAAIA,IACf1D,IAAK9O,EAAM6W,OAAO/H,MAGK,SAAC1L,GAAD,MAAyB,CAChD2c,QAASiB,YAAmB,CACxBljB,eACAouB,SACAN,UACAnjB,WACA5K,aACA8tB,aACDvoB,KAeY2d,CAA6CioB,cCtLnDW,GAAcC,YAAiC,CACxD31B,MCLwB,WAAkF,IAAjFjU,EAAiFjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAA9D,IAAI+W,GAAa0D,EAA6Cza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EAC1G,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQC,GACT,OAAO9pC,EAAMyE,IAAI,QAAS+S,EAAOuyB,QAAQ91B,OAC7C,KAAK41B,kBAAQC,GACT,OAAO9pC,EAAMyE,IAAI,QAAS,IAAIiP,GAAM,CAAEvY,QAAS,MACnD,KAAK0uC,kBAAQG,IAAb,IAAAC,EAC2BzyB,EAAOuyB,QAAtBnzB,EADZqzB,EACYrzB,GAAI+D,EADhBsvB,EACgBtvB,OACZ,OAAO3a,EAAMyE,IAAI,gBAAiBzE,EAAMgU,cAAcvP,IAAImS,EAAI+D,IAClE,KAAKkvB,kBAAQG,IAAb,IACYtuB,EAAQlE,EAAOuyB,QAAfruB,IACJ1H,EAAgBhU,EAAMgU,cAF9BuJ,GAAA,EAAAC,GAAA,EAAAC,OAAAlW,EAAA,IAGI,QAAAqW,EAAAD,EAAsBjC,EAAtB3Y,OAAAwb,cAAAhB,GAAAK,EAAAD,EAAAvhB,QAAAoiB,MAAAjB,GAAA,EAA2B,KAAhB2sB,EAAgBtsB,EAAAnf,MACvBuV,EAAgBA,EAAcm2B,OAAOD,IAJ7C,MAAAhZ,GAAA1T,GAAA,EAAAC,EAAAyT,EAAA,YAAA3T,GAAA,MAAAI,EAAAe,QAAAf,EAAAe,SAAA,WAAAlB,EAAA,MAAAC,GAOI,OAAOzd,EAAMyE,IAAI,gBAAiBuP,GAEtC,QACI,OAAOhU,IDbfsR,eER2B,WAA0E,IAAzEtR,EAAyEjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAAjD,IAAIoU,GAAkBqG,EAA2Bza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACrG,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQO,IACT,IAAI94B,EAAiBtR,EAAMsR,eAQ3B,OANAkG,EAAOuyB,QAAQ1hC,IAAI,SAACoR,GAChBnI,EAAiBA,EAAe7M,IAAIgV,EAAc1B,OAAQ0B,KAKvDzZ,EACFyE,IAAI,iBAAkB6M,GACtB7M,IAAI,cAAezE,EAAMqR,YAAc,GAChD,QACI,OAAOrR,IFNf44B,WGT6B,WAA4E,IAA3E54B,EAA2EjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAAnD,IAAI6T,GAAkB4G,EAA6Bza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACzG,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQQ,IACT,OAAOrqC,EAAMyE,IAAI,eAAgB+S,EAAOuyB,QAAQj5B,cACpD,QACI,OAAO9Q,IHKfoxB,OIVyB,WAAgE,IAA/DpxB,EAA+DjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAA3C,IAAIoT,GAAcqH,EAAyBza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACzF,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQS,IACT,OAAOtqC,EAAMyE,IAAI,SAAU+S,EAAOuyB,QAAQ15B,QAC9C,KAAKw5B,kBAAQS,IACT,OAAOtqC,EAAMyE,IAAI,cAAe+S,EAAOuyB,QAAQz5B,aACnD,QACI,OAAOtQ,IJIfyT,aKXyB,WAA0E,IAAzEzT,EAAyEjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAAhD,IAAIwW,GAAmBiE,EAAyBza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACnG,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQU,IAAb,IAAAN,EACqCzyB,EAAOuyB,QAClCjT,EAA2B,CAAE9qB,MAFvCi+B,EACYj+B,MACkC+C,cAF9Ck7B,EACmBl7B,eAEf,OAAO/O,EAAMyE,IAAI,eAAgBzE,EAAMyT,aAAahP,IAAI+S,EAAOuyB,QAAQ3a,KAAM0H,IACjF,QACI,OAAO92B,ILKfqD,MMZwB,WAA6D,IAA5DrD,EAA4DjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAAzC,IAAImX,GAAasD,EAAwBza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACrF,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQW,KACT/V,SAASgW,gBAAgBC,UAAUC,IAAI,YAEvC,IAAMC,EAA0B,CAC5BvnC,MAAOmU,EAAOuyB,QAAQ1mC,MACtB8R,aAA4C,IAA/BqC,EAAOuyB,QAAQ50B,YAC5B5R,SAAUiU,EAAOuyB,QAAQxmC,UAG7B,OAAOvD,EAAMyE,IAAI,QAASzE,EAAMoU,MAAM3P,IAAI+S,EAAOuyB,QAAQlnC,KAAM+nC,IACnE,KAAKf,kBAAQW,KACT,IAAMK,EAAW7qC,EAAMoU,MAAM02B,OAAOtzB,EAAOuyB,QAAQlnC,MAInD,OAHsB,IAAlBgoC,EAAS/sB,MACT2W,SAASgW,gBAAgBC,UAAUI,OAAO,YAEvC9qC,EAAMyE,IAAI,QAASomC,GAC9B,QACI,OAAO7qC,INNfmpB,WOZ6B,WAA4E,IAA3EnpB,EAA2EjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAAnD,IAAIgU,GAAkByG,EAA6Bza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACzG,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQkB,IACT,IAAMC,EAAQxzB,EAAOuyB,QACjB94B,EAAejR,EAAMiR,aAIzB,OAHA+5B,EAAM3iC,IAAI,SAAC4P,GACPhH,EAAeA,EAAaxM,IAAIwT,EAAYrB,GAAIqB,KAE7CjY,EAAMyE,IAAI,eAAgBwM,GACrC,KAAK44B,kBAAQkB,IACT,IAAI9tB,EAAQjd,EAAMiR,aAAajC,IAAIwI,EAAOuyB,QAAQp0B,aAASpO,GAC3D,OAAK0V,GAMDA,EAAMtG,WACNsG,EAAQA,EAAMxY,IAAI,SAAU+S,EAAOuyB,QAAQ/rB,aAIxChe,EAAMyE,IAAI,eAAgBzE,EAAMiR,aAAaxM,IAAIwY,EAAMrG,GAAIqG,KAVvDjd,EAWf,KAAK6pC,kBAAQkB,IACT,OAAO/qC,EAAMyE,IAAI,aAAczE,EAAMkR,WAAWzM,IAAI+S,EAAOuyB,QAAQp0B,QAAS6B,EAAOuyB,QAAQzkB,kBAC/F,QACI,OAAOtlB,IPbf6W,OQJyB,WAAgJ,IAA/I7W,EAA+IjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAA3H,IAAIwU,GAAciG,EAAyGza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EACzK,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQoB,IACT,OAAOjrC,EAAMyE,IAAI,UAAW+S,EAAOuyB,SACvC,KAAKF,kBAAQoB,IACT,OAAOjrC,EAAMyE,IAAI,MAAO+S,EAAOuyB,SAGnC,KAAKF,kBAAQoB,IACT,OAAkC,OAA3BjrC,EAAMsS,iBAA4BtS,EAAMyE,IAAI,mBAAoB+S,EAAOuyB,SAAW/pC,EAC7F,KAAK6pC,kBAAQoB,IACT,OAAgC,OAAzBjrC,EAAMuS,eAA0BvS,EAAMyE,IAAI,iBAAkB+S,EAAOuyB,SAAW/pC,EAGzF,KAAK6pC,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,iBAAkBzE,EAAMmS,eAAe1N,IAAI+S,EAAOuyB,QAAQv6B,MAAOgI,EAAOuyB,QAAQ9wB,UACrG,KAAK4wB,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,iBAAkB+S,EAAOuyB,QAAQnxB,UAGtD,KAAKixB,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,uBAAwBzE,EAAMqS,qBAAqB5N,IAAI+S,EAAOuyB,QAAQv6B,MAAOgI,EAAOuyB,QAAQjgB,gBACjH,KAAK+f,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,uBAAwB+S,EAAOuyB,QAAQlxB,gBAG5D,KAAKgxB,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,wBAAyBzE,EAAMoS,sBAAsB3N,IAAI+S,EAAOuyB,QAAQv6B,MAAOgI,EAAOuyB,QAAQmB,iBACnH,KAAKrB,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,wBAAyB+S,EAAOuyB,QAAQjvB,iBAG7D,KAAK+uB,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,uBAAwB+S,EAAOuyB,QAAQj4B,sBAG5D,KAAK+3B,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,iBAAkB+S,EAAOuyB,QAAQl4B,gBACtD,KAAKg4B,kBAAQrd,IACT,OAAOxsB,EAAMyE,IAAI,kBAAmB+S,EAAOuyB,QAAQh4B,iBACvD,KAAK83B,kBAAQsB,IACT,OAAOnrC,EAAMyE,IAAI,uBAAwB+S,EAAOuyB,QAAQ/3B,sBAG5D,KAAK63B,kBAAQuB,IACT,OAAOprC,EAAMyE,IAAI,gBAAiB+S,EAAOuyB,QAAQr4B,eAGrD,KAAKm4B,kBAAQwB,IACT,OAAOrrC,EAAMyE,IAAI,mBAAoBzE,EAAM2R,iBAAiBlN,IAAI+S,EAAOuyB,QAAQnnC,QAAS4U,EAAOuyB,QAAQlrB,gBAG3G,KAAKgrB,kBAAQyB,IACT,OAAOtrC,EAAMyE,IAAI,SAAU+S,EAAOuyB,QAAQ/kC,QAE9C,QACI,OAAOhF,IRnDfwS,ISfsB,WAAuD,IAAtDxS,EAAsDjD,UAAA0F,OAAA,QAAA8E,IAAAxK,UAAA,GAAAA,UAAA,GAArC,IAAI+V,GAAW0E,EAAsBza,UAAA0F,OAAA,EAAA1F,UAAA,QAAAwK,EAC7E,OAAQiQ,EAAOzW,MACX,KAAK8oC,kBAAQ0B,IAGT,OAFA1wC,QAAQ2wC,YAA8BjkC,IAAvBiQ,EAAOuyB,QAAQv3B,KAC9BzX,OAAOyX,IAAMgF,EAAOuyB,QAAQv3B,IACrBxS,EAAMyE,IAAI,MAAO+S,EAAOuyB,QAAQv3B,KAC3C,KAAKq3B,kBAAQ0B,IACT,OAAOvrC,EACFyE,IAAI,kBAAmB+S,EAAOuyB,QAAQ/2B,iBACtCvO,IAAI,wBAAyB+S,EAAOuyB,QAAQ92B,uBAC5CxO,IAAI,qBAAsB+S,EAAOuyB,QAAQ32B,oBACzC3O,IAAI,qBAAsB+S,EAAOuyB,QAAQ12B,oBACzC5O,IAAI,oBAAqB+S,EAAOuyB,QAAQ52B,mBACxC1O,IAAI,mBAAoB+S,EAAOuyB,QAAQ72B,kBAChD,QACI,OAAOlT,2BCdbyrC,GAAkBC,YACpB,SAACC,EAA0BlxC,GACvB,IACI,OAAOkxC,EAAaC,YACtB,MAAO9xC,GAGL,MAFAe,QAAQf,MAAR,qBAAAoB,OAAmCT,EAAnC,MAAAS,OAA2CiM,KAAKsK,UAAUk6B,GAA1D,OAAAzwC,OAA6EpB,IAC7EsB,YAA6BtB,EAAO,CAAE2B,YAAa,oCAC7C3B,IAGd,SAAC+xC,EAAuBpxC,GACpB,IACI,OAAO,IAAI8W,IAAau6B,YAAYD,GACtC,MAAO/xC,GAGL,MAFAe,QAAQf,MAAR,uBAAAoB,OAAqCT,EAArC,MAAAS,OAA6CiM,KAAKsK,UAAUo6B,GAA5D,OAAA3wC,OAAgFpB,IAChFsB,YAA6BtB,EAAO,CAAE2B,YAAa,sCAC7C3B,IAGd,CAAEiyC,UAAW,CAAC,YAGLC,GAA+B,CACxCC,aACAxxC,IAAK,OACLsxC,UAAW,CAAC,UACZG,WAAY,CAACT,KC3BXU,GAA4B,CAC9BC,MASJ,IAAkDC,GAAuBC,GAOnEC,IAP4CF,GAOLL,GAP4BM,GAOb3C,GANjD6C,YACHH,GACAC,YCrBR5uC,EAAAC,EAAAC,EAAA,0BAAAuF,KAgBO,IAAMA,GDWuBspC,YAChCF,GACAG,IAAe5vC,WAAf,EAAmBqvC,KCWvBnyC,OAAY,CACR2yC,IAAK5xC,OAAO6xC,WACZC,QAAS9xC,OAAO+xC,cAChBhyC,YAAkEC,OAAOC,QAAQC,UAGrFjB,iBAAsB,SAACC,GACnBA,EAAMS,SAAS,YAAY,GAG3BT,EAAMS,SAAS,UAAU,KAG7BqyC,SACIpc,GAAQjwB,EAAA,cAACssC,EAAA,EAAD,CAAU7pC,MAAOA,IACrBzC,EAAA,cAACusC,EAAA,EAAD,CAAahtC,QAAS,KAAMitC,UAAWC,YAAahqC,KAChDzC,EAAA,cAACgpC,GAAD,SAGRjV,SAAS2Y,eAAe,iDC3D5B,IAAA/kC,EAAA,CACAglC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,KAIA,SAAAC,EAAAC,GACA,IAAAn3B,EAAAo3B,EAAAD,GACA,OAAArwC,EAAAkZ,GAEA,SAAAo3B,EAAAD,GACA,IAAAn3B,EAAAvO,EAAA0lC,GACA,KAAAn3B,EAAA,IACA,IAAAlX,EAAA,IAAAjD,MAAA,uBAAAsxC,EAAA,KAEA,MADAruC,EAAA4M,KAAA,mBACA5M,EAEA,OAAAkX,EAEAk3B,EAAAvzC,KAAA,WACA,OAAAD,OAAAC,KAAA8N,IAEAylC,EAAAjuC,QAAAmuC,EACAC,EAAAC,QAAAJ,EACAA,EAAAl3B,GAAA,wBC/BAq3B,EAAAC,QAAiBxwC,EAAAywC,EAAuB,qDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,qDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,qDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,qDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,qDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,sDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,sDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB,sDCAxCF,EAAAC,QAAiBxwC,EAAAywC,EAAuB","file":"static/js/main.91fd2487.chunk.js","sourcesContent":["// tslint:disable: no-any\n\nimport * as Sentry from \"@sentry/browser\";\n\ninterface Details {\n    description?: string;\n    category?: string;\n    level?: Sentry.Severity;\n}\n\ninterface Described {\n    description: string;\n}\n\ninterface ShownToUser {\n    shownToUser: string;\n}\n\nconst _captureException_ = <X extends Details>(error: any, details: X) => {\n    Sentry.withScope(scope => {\n        // Category\n        if (details.category) {\n            scope.setTag(\"category\", details.category);\n        }\n\n        // Level\n        if (details.level) {\n            scope.setLevel(details.level);\n        }\n\n        // Extra information\n        Object.keys(details)\n            .forEach(key => {\n                scope.setExtra(key, details[key]);\n            });\n\n        // If there's a server response, log it\n        if (error && error.response && error.response.data) {\n            scope.setExtra(\"serverResponse\", error.response.data);\n        }\n\n        scope.setExtra(\"caught\", true);\n\n        console.error(error);\n\n        const environment = (process.env.NODE_ENV === \"development\") ? \"local\" : window.NETWORK.network;\n        if (environment !== \"mainnet\") {\n            if (typeof error === \"string\") {\n                // tslint:disable-next-line: no-parameter-reassignment\n                error = `[${environment}] ${error}`;\n            } else {\n                error.message = `[${environment}] ${error.message || error}`;\n            }\n        }\n\n        Sentry.captureException(error);\n    });\n};\n\n// Background exceptions are thrown in background loops and actions\nexport const _captureBackgroundException_ = <X extends Details & Described>(error: any, details?: X) => {\n    _captureException_(error, { ...details, category: \"background_exception\" });\n};\n\n// Interaction exceptions are thrown as a direct result of a user interaction\nexport const _captureInteractionException_ = <X extends Details & Described & ShownToUser>(error: any, details?: X) => {\n    _captureException_(error, { ...details, category: \"interaction_exception\" });\n};\n\n// Component exceptions are thrown from an ErrorBoundary\nexport const _captureComponentException_ = (error: any, errorInfo: React.ErrorInfo) => {\n    _captureException_(error, { ...errorInfo, description: \"Error caught in Error Boundary. See Component stack trace.\", category: \"component_exception\" });\n};\n","import { Provider } from \"web3/providers\";\n\nimport { WalletDetail } from \"../../lib/wallets/wallet\";\n\nconst ErrorNoMetaMask = \"Please ensure you have MetaMask installed\";\nconst ErrorMetaMaskAccessRejected = \"Please allow RenEx to access your MetaMask wallet\";\n\nexport const getInjectedWeb3Provider = async (): Promise<Provider> => {\n    if (window.ethereum) {\n        try {\n            await window.ethereum.enable();\n            return window.ethereum;\n        } catch (error) {\n            throw new Error(ErrorMetaMaskAccessRejected);\n        }\n    } else if (window.web3) {\n        return window.web3.currentProvider;\n    }\n    throw new Error(ErrorNoMetaMask);\n};\n\nexport const MetaMask: WalletDetail = {\n    name: \"MetaMask\",\n    slug: \"metamask\",\n    description: \"Sign in using the MetaMask extension or a Web3 browser\",\n    enabled: true,\n    getWeb3Provider: async (): Promise<[Provider, string[] | null]> => {\n        const provider = await getInjectedWeb3Provider();\n        return [provider, null];\n    },\n};\n","import { createStandardAction } from \"typesafe-actions\";\n\nexport interface SetPopupPayload { uuid: Symbol; popup: React.ReactNode; dismissible?: boolean; onCancel(): void; }\nexport const setPopup = createStandardAction(\"SET_POPUP\")<SetPopupPayload>();\n\nexport const clearPopup = createStandardAction(\"CLEAR_POPUP\")<{ uuid: Symbol }>();\n","import * as React from \"react\";\n\n/**\n * Loading is a visual component that renders a spinning animation\n */\nexport const Loading: React.StatelessComponent<Props> = (props: Props) => {\n    const { alt } = props;\n    return (\n        <div className={`loading lds-dual-ring ${alt ? \"alt\" : \"\"}`} />\n    );\n};\n\ninterface Props {\n    // tslint:disable-next-line:react-unused-props-and-state\n    alt?: boolean;\n}\n","import * as React from \"react\";\n\nimport { Creatable } from \"react-select\";\nimport { Provider } from \"web3/providers\";\n\nimport { Loading } from \"../../components/Loading\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\n\ninterface OptionType {\n    label: string;\n    value: string;\n}\n\ninterface Props {\n    address?: string;\n    checkConnection(args: { derivation: string }): Promise<[Provider, string[]]>;\n    resolve(args: [Provider, string[] | null]): void;\n    reject(reason: Error): void;\n}\n\ninterface State {\n    loading: boolean;\n    error: string | null;\n    // tslint:disable-next-line:no-any\n    derivation: OptionType;\n}\n\n// \"44'/1'\", \"44'/60'\", \"44'/61'\"\nconst derivationRegex = new RegExp(/^m\\/(44'\\/(?:0?1|60|61)')(\\/\\d\\d?'?)*$/);\n\nconst options: OptionType[] = [\n    { value: \"m/44'/60'/0'/0\", label: \"Default Derivation - m/44'/60'/0'/0\" },\n    // { value: \"m/44'/60'/0'/0/0\", label: \"Ledger Live App - m/44'/60'/0'/0/0\" },\n    { value: \"m/44'/1'/0'/0\", label: \"Testnet - m/44'/1'/0'/0\" },\n];\n\n/**\n * LedgerPopup is a popup component that prompts a user to login using their\n * Ledger hardware wallet\n */\nexport class LedgerPopup extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: false,\n            error: null,\n            derivation: options[0],\n        };\n    }\n\n    public componentDidMount() {\n        //\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { error, loading } = this.state;\n        // const { address } = this.props;\n\n        return (\n            <div className=\"popup ledger\">\n                <div>\n                    <h2>Connect to Ledger Wallet</h2>\n\n                    <div className=\"ledger--instructions\">\n                        <p>Before connecting to your Ledger, make sure you have:</p>\n                        <ol>\n                            <li>Connected and unlocked your Ledger</li>\n                            <li>Opened the Ethereum app on the device</li>\n                            <li>Enabled browser and data support</li>\n                        </ol>\n                    </div>\n\n                    {error !== null ? <p className=\"red\">{error}</p> : null}\n                    <form onSubmit={this.handleUnlock}>\n\n                        <Creatable\n                            value={this.state.derivation}\n                            onChange={this.handleChange}\n                            options={options}\n                            isValidNewOption={this.validatePath}\n                        />\n\n                        <button type=\"submit\">{loading === true ? <Loading /> : \"Connect\"}</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    private readonly validatePath = (value: string): boolean => {\n        return derivationRegex.test(value);\n    }\n\n    // tslint:disable-next-line:no-any\n    private readonly handleChange = (derivation: any) => {\n        this.setState({ derivation });\n    }\n\n    private readonly handleUnlock = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        const { checkConnection, resolve } = this.props;\n        const { derivation } = this.state;\n\n        this.setState({ loading: true });\n\n        try {\n            const value = derivation.value;\n            if (!value) {\n                throw new Error(\"Invalid derivation\");\n            }\n            resolve(await checkConnection({ derivation: value }));\n        } catch (error) {\n            if (error.message.match(/invalid transport instance/)) {\n                error = new Error(\"Unable to connect to Ledger.\");\n            } else {\n                _captureInteractionException_(error, {\n                    description: \"Error in LedgerPopup.checkConnection\",\n                    shownToUser: \"In LedgerPopup as message box\",\n                });\n                error = new Error(error ? error.message || error : \"Unable to connect to Ledger.\");\n            }\n            this.setState({ loading: false, error: error.message });\n            return;\n        }\n    }\n}\n","import * as React from \"react\";\n\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport createLedgerSubprovider from \"@ledgerhq/web3-subprovider\";\nimport Web3 from \"web3\";\nimport ProviderEngine from \"web3-provider-engine\";\nimport FetchSubprovider from \"web3-provider-engine/subproviders/fetch\";\nimport NonceSubprovider from \"web3-provider-engine/subproviders/nonce-tracker\";\n\nimport { HttpProvider, Provider } from \"web3/providers\";\n\nimport { setPopup } from \"../../actions/popup/popupActions\";\nimport { LedgerPopup } from \"../../components/popups/LedgerPopup\";\nimport { store } from \"../../index\";\nimport { INFURA_URL, networkData } from \"../../lib/network\";\nimport { ErrorCanceledByUser, PopupPromise, WalletDetail } from \"../../lib/wallets/wallet\";\nimport { getAccounts } from \"../../lib/web3\";\n\ninterface ProviderEngine extends HttpProvider {\n    /**\n     * Starts the engine's block tracking\n     */\n    start(): void;\n\n    /**\n     * Stops the engine's block tracking\n     */\n    stop(): void;\n\n    /**\n     * Adds a provider to the engine\n     */\n    addProvider(provider: Provider): void;\n}\n\nconst createProvider = (derivation: string): ProviderEngine => {\n    const engine: ProviderEngine = new ProviderEngine();\n    const getTransport = () => TransportU2F.create();\n\n    let newDerivation = derivation;\n\n    // Remove m/ from start\n    if (newDerivation.slice(0, 2) === \"m/\") {\n        newDerivation = newDerivation.slice(2);\n    }\n\n    const ledger = createLedgerSubprovider(getTransport, {\n        networkId: networkData.ethNetworkId,\n        accountsLength: 5,\n        path: newDerivation,\n    });\n    engine.addProvider(ledger);\n    engine.addProvider(new NonceSubprovider());\n    engine.addProvider(new FetchSubprovider({ rpcUrl: INFURA_URL }));\n    engine.start();\n\n    return engine;\n};\n\nconst checkConnection = async (args: {\n    /**\n     * The BIP32 derivation string\n     */\n    derivation: string;\n}): Promise<[ProviderEngine, string[]]> => {\n    const engine = createProvider(args.derivation);\n    const accounts = await getAccounts(new Web3(engine));\n    if (!accounts || accounts.length === 0) {\n        throw new Error(\"Unable to read accounts.\");\n    }\n\n    return [engine, accounts];\n};\n\nexport const Ledger: WalletDetail = {\n    name: \"Ledger\",\n    slug: \"ledger\",\n    description: \"Sign in using your Ledger hardware wallet\",\n    enabled: true,\n    // create a web3 with the ledger device\n    getWeb3Provider: async (address?: string) => {\n        const uuid = Symbol();\n        return PopupPromise<[Provider, string[] | null]>(uuid, async (resolve, reject) => {\n            store.dispatch(setPopup(\n                {\n                    uuid,\n                    popup: <LedgerPopup resolve={resolve} reject={reject} address={address} checkConnection={checkConnection} />,\n                    onCancel: () => { reject(new Error(ErrorCanceledByUser)); }\n                }\n            ));\n        });\n    }\n};\n","import { getReadOnlyProvider, WalletDetail } from \"../../lib/wallets/wallet\";\n\nexport const PrivateKey: WalletDetail = {\n    name: \"Private Key\",\n    slug: \"key\",\n    description: \"\",\n    enabled: false,\n    getWeb3Provider: () => [getReadOnlyProvider(), null],\n};\n","import { getReadOnlyProvider, WalletDetail } from \"../../lib/wallets/wallet\";\n\n// Unimplemented\nexport const Trezor: WalletDetail = {\n    name: \"Trezor\",\n    slug: \"trezor\",\n    description: \"Sign using your hardware wallet\",\n    enabled: false,\n    getWeb3Provider: () => [getReadOnlyProvider(), null],\n};\n","import ProviderEngine from \"web3-provider-engine\";\nimport FetchSubprovider from \"web3-provider-engine/subproviders/fetch\";\n\nimport { List, Map } from \"immutable\";\nimport { Provider } from \"web3/providers\";\n\nimport { clearPopup } from \"../../actions/popup/popupActions\";\nimport { store } from \"../../index\";\nimport { INFURA_URL } from \"../../lib/network\";\nimport { Keystore } from \"../../lib/wallets/keystore\";\nimport { Ledger } from \"../../lib/wallets/ledger\";\nimport { PrivateKey } from \"../../lib/wallets/privateKey\";\nimport { Trezor } from \"../../lib/wallets/trezor\";\nimport { MetaMask } from \"../../lib/wallets/web3browser\";\n\nexport const ErrorCanceledByUser = \"Transaction canceled\";\nexport const ErrorVerificationFailed = \"Trader verification failed\";\n\nexport enum Wallet {\n    MetaMask,\n    Ledger,\n    Trezor,\n    Keystore,\n    PrivateKey,\n}\n\n// This defines the order in which the wallets are rendered\nexport const WalletList = List([Wallet.MetaMask, Wallet.Ledger, Wallet.Keystore, Wallet.Trezor, Wallet.PrivateKey]);\n\nexport interface WalletDetail {\n    name: string;\n    slug: string; // Slug is used as class name for specifying icons in _wallets.scss\n    description: string;\n    enabled: boolean;\n    getWeb3Provider(address?: string): Promise<[Provider, string[] | null]> | [Provider, string[] | null];\n}\n\nexport const getReadOnlyProvider = (): Provider => {\n    const engine = new ProviderEngine();\n    engine.addProvider(new FetchSubprovider({ rpcUrl: INFURA_URL }));\n    engine.start();\n\n    return engine;\n};\n\nexport const PopupPromise = async <T>(uuid: Symbol, fn: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: Error) => void) => void): Promise<T> => {\n    return new Promise((resolve, reject) => {\n\n        const innerReject: (reason?: Error) => void = (reason) => {\n            store.dispatch(clearPopup({uuid}));\n            reject(reason);\n        };\n        const innerResolve: (value?: T | PromiseLike<T>) => void = (reason) => {\n            store.dispatch(clearPopup({uuid}));\n            resolve(reason);\n        };\n        fn(innerResolve, innerReject);\n    });\n};\n\nexport const WalletDetails: Map<Wallet, WalletDetail> = Map<Wallet, WalletDetail>()\n    .set(Wallet.MetaMask, MetaMask)\n    .set(Wallet.Ledger, Ledger)\n    .set(Wallet.Keystore, Keystore)\n    .set(Wallet.Trezor, Trezor)\n    .set(Wallet.PrivateKey, PrivateKey);\n","import { NetworkData } from \"@renex/renex\";\n\nexport const networkData: NetworkData = window.NETWORK;\n\nconst infix = networkData.infura[networkData.infura.length - 1] === \"/\" ? \"\" : \"/\";\nexport const INFURA_URL = `${networkData.infura}${infix}${window.INFURA_KEY}`;\n","import * as ethereumjsWallet from \"ethereumjs-wallet\";\nimport * as React from \"react\";\n\nimport WalletSubprovider from \"ethereumjs-wallet/provider-engine\";\nimport ProviderEngine from \"web3-provider-engine\";\nimport FetchSubprovider from \"web3-provider-engine/subproviders/fetch\";\nimport NonceSubprovider from \"web3-provider-engine/subproviders/nonce-tracker\";\n\nimport { Provider } from \"web3/providers\";\n\nimport { setPopup } from \"../../actions/popup/popupActions\";\nimport { KeystorePopup } from \"../../components/popups/KeystorePopup\";\nimport { store } from \"../../index\";\nimport { INFURA_URL } from \"../../lib/network\";\nimport { ErrorCanceledByUser, PopupPromise, WalletDetail } from \"../../lib/wallets/wallet\";\n\nconst KeystoreUnlockError = \"Unable to retrieve account from keystore\";\nconst UnsupportedKeystoreError = \"Unsupported keystore format\";\nconst KeystorePasswordError = \"Unable to unlock keystore - the password may be wrong\";\n\nexport const Keystore: WalletDetail = {\n    name: \"Keystore File\",\n    slug: \"keystore\",\n    description: \"Sign in using a Keystore JSON file\",\n    enabled: true,\n    // create a web3 with the ledger device\n    getWeb3Provider: async (address?: string) => {\n        const uuid = Symbol();\n\n        return PopupPromise<[Provider, string[] | null]>(uuid, async (resolve, reject) => {\n\n            // tslint:disable-next-line:no-any promise-must-complete\n            const { keystore, password } = await new Promise(async (innerResolve: (value: { keystore: any; password: string }) => void) => {\n                store.dispatch(setPopup(\n                    {\n                        uuid,\n                        popup: <KeystorePopup resolve={innerResolve} reject={reject} address={address} />,\n                        onCancel: () => { reject(new Error(ErrorCanceledByUser)); }\n                    }\n                ));\n            });\n\n            if (keystore.Crypto && !keystore.crypto) {\n                keystore.crypto = keystore.Crypto;\n            }\n\n            const version = parseInt(keystore.version, 10);\n\n            // tslint:disable-next-line:no-any\n            let wallet: any;\n            try {\n                if (version === 1) {\n                    wallet = ethereumjsWallet.fromV1(keystore, password);\n                } else if (version === 3) {\n                    wallet = ethereumjsWallet.fromV3(keystore, password);\n                } else if (keystore.privateKey) {\n                    let privateKey = keystore.privateKey;\n                    if (privateKey.slice(0, 2) === \"0x\") {\n                        privateKey = privateKey.slice(2);\n                    }\n                    wallet = ethereumjsWallet.fromPrivateKey(new Buffer(privateKey, \"hex\"));\n                } else {\n                    throw new Error(UnsupportedKeystoreError);\n                }\n\n                if (!wallet) {\n                    throw new Error(KeystoreUnlockError);\n                }\n            } catch (error) {\n                console.warn(error);\n                if (error.message === \"Not a V3 wallet\" ||\n                    error.message === \"Not a V1 wallet\") {\n                    reject(new Error(UnsupportedKeystoreError));\n                } else if (error.message === UnsupportedKeystoreError) {\n                    reject(error);\n                } else if (error.message === KeystoreUnlockError) {\n                    reject(error);\n                } else {\n                    reject(new Error(KeystorePasswordError));\n                }\n\n                return;\n            }\n\n            wallet.getAddressesString = (() => `0x${\n                wallet\n                    .getAddress()\n                    .toString(\"hex\")\n                }`\n            );\n\n            const walletProvider = new WalletSubprovider(wallet, {});\n\n            const engine = new ProviderEngine();\n            engine.addProvider(walletProvider);\n            engine.addProvider(new NonceSubprovider());\n            engine.addProvider(new FetchSubprovider({ rpcUrl: INFURA_URL }));\n            engine.start();\n            resolve([engine, null]);\n        });\n    }\n};\n","import * as React from \"react\";\n\nimport { Loading } from \"../../components/Loading\";\n\n/**\n * KeystorePopup is a popup component that prompts a user for a JSON file and a\n * password\n */\nexport class KeystorePopup extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            keystore: null,\n            loading: false,\n            password: \"\",\n        };\n    }\n\n    public componentDidMount() {\n        //\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { error, password, loading } = this.state;\n        const { address } = this.props;\n\n        return (\n            <div className=\"popup keystore\">\n                <div>\n                    <h2>\n                        {address ?\n                            `Log in to ${address}` :\n                            \"Select an account:\"\n                        }\n                    </h2>\n                    <form onSubmit={this.handleUnlock}>\n                        <input type=\"file\" name=\"files[]\" placeholder=\"Upload\" onChange={this.handleUpload} />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password (optional)\"\n                            value={password}\n                            onChange={this.handleInput}\n                        />\n                        <button type=\"submit\">{loading === true ? <Loading /> : \"Unlock\"}</button>\n                    </form>\n                    {error !== null ? <p className=\"red\">{error}</p> : null}\n                </div>\n            </div>\n        );\n    }\n\n    private readonly handleInput = (event: React.FormEvent<HTMLInputElement>): void => {\n        const element = (event.target as HTMLInputElement);\n        this.setState((current) => ({ ...current, [element.name]: element.value }));\n    }\n\n    private readonly handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files === null || event.target.files.length === 0) {\n            return;\n        }\n        const f = event.target.files[0];\n\n        const reader = new FileReader();\n\n        // Closure to capture the file information.\n        reader.onload = ((_file) => {\n            // tslint:disable-next-line:no-any\n            return (eInner: any) => {\n                // tslint:disable-next-line:no-any\n                let key: any | null;\n                try {\n                    key = JSON.parse(eInner.target.result);\n                } catch (error) {\n                    this.setState({ error: \"Please select a valid Keystore file\" });\n                    return;\n                }\n                this.setState({ error: null, keystore: key });\n            };\n        })(f);\n\n        // Read in the image file as a data URL.\n        reader.readAsText(f);\n    }\n\n    private readonly handleUnlock = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (!this.state.keystore) {\n            console.error(\"Invalid keystore\");\n\n            return;\n        }\n        this.setState({ loading: true });\n\n        const keystore = this.state.keystore;\n        const password: string = (this.state.password === undefined) ?\n            \"\" :\n            this.state.password;\n\n        this.props.resolve({\n            keystore,\n            password,\n        });\n    }\n}\n\ninterface Props {\n    address?: string;\n    resolve(value: { keystore: object; password: string }): void;\n    reject(reason: Error): void;\n}\n\ninterface State {\n    error: string | null;\n    keystore: object | null;\n    loading: boolean;\n    password: string | undefined;\n}\n","import Web3 from \"web3\";\n\nexport const getAccounts = async (web3: Web3): Promise<string[]> => {\n    return web3.eth.getAccounts();\n};\n\nexport const getNetwork = async (web3: Web3): Promise<string> => {\n    // tslint:disable-next-line:no-any\n    return (web3.eth.net as any).getNetworkType();\n};\n\nexport const includesAddress = async (web3: Web3, addressIn: string): Promise<boolean> => {\n    const address = addressIn.toLowerCase();\n    return getAccounts(web3)\n        .then((accounts: string[]) => {\n            return accounts.map(acc => acc.toLowerCase())\n                .includes(address);\n        });\n};\n","import moment from \"moment\";\n\nimport BigNumber from \"bignumber.js\";\n\n/**\n * Converts a timestamp to the number of hours, minutes or seconds from now,\n * showing \"Expired\" if the timestamp has already passed.\n *\n * TODO: Make countdown schedule rerender (based on time unit)\n *\n * @param expiry the time to countdown to as a unix timestamp in seconds\n * @returns a JSX span element with the time remaining and a unit\n */\nexport const naturalTime = (expiry: number, options: { message: string; suffix?: string; countDown: boolean; showingSeconds?: boolean }): string => {\n    let diff;\n    if (!options.countDown) {\n        diff = moment.duration(moment().diff(moment.unix(expiry)));\n    } else {\n        diff = moment.duration(moment.unix(expiry).diff(moment()));\n    }\n    let days = diff.asDays();\n    let hours = diff.asHours();\n    let minutes = diff.asMinutes();\n    let seconds = diff.asSeconds();\n\n    const suffix = options.suffix ? ` ${options.suffix}` : \"\";\n\n    if (days > 2) {\n        days = Math.round(days);\n        return `${days} ${days === 1 ? \"day\" : \"days\"}${suffix}`;\n    }\n    if (hours >= 1) {\n        // Round to the closest hour\n        hours = Math.round(hours);\n        return `${hours} ${hours === 1 ? \"hour\" : \"hours\"}${suffix}`;\n    } else if (minutes >= 1) {\n        minutes = Math.round(minutes);\n        return `${minutes} ${minutes === 1 ? \"minute\" : \"minutes\"}${suffix}`;\n    } else if (options.showingSeconds && seconds >= 1) {\n        seconds = Math.floor(seconds);\n        return `${seconds} ${seconds === 1 ? \"second\" : \"seconds\"}${suffix}`;\n    } else {\n        return `${options.message}`;\n    }\n};\n\n// Sleep for specified number of milliseconds\n// tslint:disable-next-line: no-string-based-set-timeout\nexport const sleep = async (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\nexport const second = 1000;\n\nexport enum TimeMagnitude {\n    Second = 1 * second,\n    Minute = 60 * second,\n    Hour = 3600 * second,\n    Day = 86400 * second,\n}\n\n// Returns the the time units in which a time will be represented in by naturalTime\nexport const getTimeMagnitude = (expiry: number, showingSeconds = false): TimeMagnitude => {\n    let diff;\n    if (moment.unix(expiry).isBefore(moment())) {\n        diff = moment.duration(moment().diff(moment.unix(expiry)));\n    } else {\n        diff = moment.duration(moment.unix(expiry).diff(moment()));\n    }\n    const days = diff.asDays();\n    const hours = diff.asHours();\n    const minutes = diff.asMinutes();\n\n    if (days > 2) {\n        return TimeMagnitude.Day;\n    }\n    if (hours >= 1) {\n        return TimeMagnitude.Hour;\n    } else if (minutes >= 1 || !showingSeconds) {\n        return TimeMagnitude.Minute;\n    } else {\n        return TimeMagnitude.Second;\n    }\n};\n\nconst significantDigits = (n: BigNumber, digits: number, simplify: boolean = false, roundDown: boolean = true) => {\n    if (n.isEqualTo(0)) {\n        return [0, 0];\n    }\n    let exp = Math.floor(Math.log10(n.toNumber())) - (digits - 1);\n    const pow = new BigNumber(10).exponentiatedBy(new BigNumber(exp).toNumber());\n\n    let c;\n    if (roundDown) {\n        c = Math.floor(n.div(pow.toNumber())\n            .toNumber());\n    } else {\n        c = Math.ceil(n.div(pow.toNumber())\n            .toNumber());\n    }\n\n    if (simplify) {\n        while (c % 10 === 0 && c !== 0) {\n            c = c / 10;\n            exp += 1;\n        }\n    }\n    return [c, exp];\n};\n\n/**\n * getStep adjusts the specified step to the correct order of magnitude, so\n * when the user is dealing with small or large values, the step scales\n * accordingly\n */\nexport const getStep = (value: BigNumber, step: number): string => {\n    if (value.isZero()) {\n        return new BigNumber(step).toFixed();\n    }\n\n    const digits = -Math.floor(Math.log10(step)) + 1;\n\n    const [, exp] = significantDigits(value, digits, false);\n    const e = new BigNumber(10).pow(exp + (digits - 1));\n    return new BigNumber(step)\n        .times(e)\n        .toFixed();\n};\n\nexport const getPriceStep = (price: BigNumber): string => {\n    return getStep(price, 0.005);\n};\n\nexport const getVolumeStep = (volume: BigNumber): string => {\n    return getStep(volume, 0.2);\n};\n","import { createStandardAction } from \"typesafe-actions\";\n\nimport { Alert } from \"../../reducers/types\";\n\n/**\n * Adds a new alert to the alert stack.\n */\nexport const setAlert = createStandardAction(\"SET_ALERT\")<{\n    /**\n     * The alert to be added to the alert stack.\n     */\n    alert: Alert;\n}>();\n\n/**\n * Remove the top alert from the alert stack.\n */\nexport const clearAlert = createStandardAction(\"CLEAR_ALERT\")();\n","import BigNumber from \"bignumber.js\";\n\nimport { List, Map, OrderedMap } from \"immutable\";\n\nimport { OrderSettlement, Token, TokenCode } from \"@renex/renex\";\n\nimport { networkData } from \"./network\";\n\nexport interface PairDetails {\n    code: Pair;\n    orderSettlement: OrderSettlement;\n    quoteToken: TokenCode;\n    baseToken: TokenCode;\n    category?: TokenCode; // Force the pair to be shown under a specific token\n    fixedPrice?: BigNumber;\n}\n\nexport enum Pair {\n    WBTC_BTC = 0x0000000000000002,\n    ETH_BTC = 0x0000000000000001,\n    REN_BTC = 0x0000000000010000,\n    TUSD_BTC = 0x0000000000000101,\n\n    DGX_ETH = 0x0000000100000100,\n    TUSD_ETH = 0x0000000100000101,\n    REN_ETH = 0x0000000100010000,\n    ZRX_ETH = 0x0000000100010001,\n    OMG_ETH = 0x0000000100010002,\n}\n\nexport const Pairs: OrderedMap<Pair, PairDetails> = OrderedMap<Pair, PairDetails>()\n    // RenExAtomic:\n    .set(Pair.ETH_BTC, {\n        code: Pair.ETH_BTC,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.BTC,\n        baseToken: Token.ETH,\n        category: Token.BTC,\n    })\n    .set(Pair.WBTC_BTC, {\n        code: Pair.WBTC_BTC,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.BTC,\n        baseToken: Token.WBTC,\n        category: Token.BTC,\n        fixedPrice: new BigNumber(1),\n    })\n    .set(Pair.REN_BTC, {\n        code: Pair.REN_BTC,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.BTC,\n        baseToken: Token.REN,\n        category: Token.BTC,\n    })\n    .set(Pair.TUSD_BTC, {\n        code: Pair.TUSD_BTC,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.BTC,\n        baseToken: Token.TUSD,\n        category: Token.BTC,\n    })\n\n    .set(Pair.REN_ETH, {\n        code: Pair.REN_ETH,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.ETH,\n        baseToken: Token.REN,\n    })\n    .set(Pair.DGX_ETH, {\n        code: Pair.DGX_ETH,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.ETH,\n        baseToken: Token.DGX,\n    })\n    .set(Pair.TUSD_ETH, {\n        code: Pair.TUSD_ETH,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.ETH,\n        baseToken: Token.TUSD,\n    })\n    .set(Pair.ZRX_ETH, {\n        code: Pair.ZRX_ETH,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.ETH,\n        baseToken: Token.ZRX,\n    })\n    .set(Pair.OMG_ETH, {\n        code: Pair.OMG_ETH,\n        orderSettlement: OrderSettlement.RenExAtomic,\n        quoteToken: Token.ETH,\n        baseToken: Token.OMG,\n    });\n\nexport interface TokenDetail {\n    name: string;\n    // tslint:disable-next-line:no-reserved-keywords\n    symbol: string;\n    icon: string;\n    address: string;\n    pairs: OrderedMap<TokenCode, Pair>;\n    digits: number;\n    cmcID: number; // CoinMarketCap ID\n    coingeckoID: string; // CoinCap ID\n    settlements: OrderSettlement[];\n    offChain?: boolean; // Off-chain implies that fees must be paid in the other token\n}\n\nexport let TokenDetails: Map<TokenCode, TokenDetail> = Map();\n\nexport const UnknownToken: TokenDetail = {\n    name: \"Unknown\",\n    symbol: \"???\",\n    icon: \"\",\n    address: \"0x0000000000000000000000000000000000000000\",\n    pairs: OrderedMap(),\n    digits: 0,\n    cmcID: 0,\n    coingeckoID: \"\",\n    settlements: [],\n    offChain: false,\n};\n\nTokenDetails = TokenDetails.set(Token.BTC, {\n    name: \"Bitcoin\",\n    symbol: \"BTC\",\n    icon: \"btc.svg\",\n    address: \"\",\n    pairs: OrderedMap<Token, Pair>()\n        .set(Token.ETH, Pair.ETH_BTC)\n        .set(Token.WBTC, Pair.WBTC_BTC)\n        .set(Token.REN, Pair.REN_BTC)\n        .set(Token.TUSD, Pair.TUSD_BTC),\n    digits: 8,\n    cmcID: 1,\n    coingeckoID: \"bitcoin\",\n    settlements: [OrderSettlement.RenExAtomic],\n    offChain: true,\n});\n\nTokenDetails = TokenDetails.set(Token.ETH, {\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    icon: \"eth.svg\",\n    address: \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\",\n    pairs: OrderedMap<TokenCode, Pair>()\n        .set(Token.DGX, Pair.DGX_ETH)\n        .set(Token.TUSD, Pair.TUSD_ETH)\n        .set(Token.REN, Pair.REN_ETH)\n        .set(Token.OMG, Pair.OMG_ETH)\n        .set(Token.ZRX, Pair.ZRX_ETH)\n    ,\n    digits: 18,\n    cmcID: 1027,\n    coingeckoID: \"ethereum\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\nTokenDetails = TokenDetails.set(Token.WBTC, {\n    name: \"Wrapped Bitcoin\",\n    symbol: \"WBTC\",\n    icon: \"wbtc.svg\",\n    address: \"\",\n    pairs: OrderedMap<Token, Pair>(),\n    digits: 8,\n    cmcID: 1, // for now, we use bitcoin price because WBTC isn't tracked yet\n    coingeckoID: \"bitcoin\",\n    settlements: [OrderSettlement.RenExAtomic],\n    offChain: true,\n});\n\nTokenDetails = TokenDetails.set(Token.DGX, {\n    name: \"Digix Gold Token\",\n    symbol: \"DGX\",\n    icon: \"dgx.svg\",\n    address: networkData.tokens.DGX,\n    pairs: OrderedMap<TokenCode, Pair>(),\n    digits: 9,\n    cmcID: 2739,\n    coingeckoID: \"digix-gold\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\nTokenDetails = TokenDetails.set(Token.REN, {\n    name: \"Republic Protocol\",\n    symbol: \"REN\",\n    icon: \"ren.svg\",\n    address: networkData.tokens.REN,\n    pairs: OrderedMap<TokenCode, Pair>(),\n    digits: 18,\n    cmcID: 2539,\n    coingeckoID: \"republic-protocol\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\nTokenDetails = TokenDetails.set(Token.TUSD, {\n    name: \"TrueUSD\",\n    symbol: \"TUSD\",\n    icon: \"tusd.svg\",\n    address: networkData.tokens.TUSD,\n    pairs: OrderedMap<TokenCode, Pair>(),\n    digits: 18,\n    cmcID: 2563,\n    coingeckoID: \"true-usd\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\nTokenDetails = TokenDetails.set(Token.OMG, {\n    name: \"OmiseGo\",\n    symbol: \"OMG\",\n    icon: \"omg.svg\",\n    address: networkData.tokens.OMG,\n    pairs: OrderedMap<Token, Pair>(),\n    digits: 18,\n    cmcID: 1808,\n    coingeckoID: \"omisego\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\nTokenDetails = TokenDetails.set(Token.ZRX, {\n    name: \"0x\",\n    symbol: \"ZRX\",\n    icon: \"zrx.svg\",\n    address: networkData.tokens.ZRX,\n    pairs: OrderedMap<TokenCode, Pair>(),\n    digits: 18,\n    cmcID: 1896,\n    coingeckoID: \"0x\",\n    settlements: [OrderSettlement.RenEx, OrderSettlement.RenExAtomic],\n});\n\n/**\n * Retrieves the current pricepoint for two currencies.\n * @param fstCode The first currency.\n * @param sndCode The second currency.\n * @returns An array containing the price with respect to the currencies, and the 24 hour percent change.\n */\nexport const getPrice = async (quoteCode: TokenCode, baseCode: TokenCode): Promise<[number, number]> => {\n    const quoteDetails = TokenDetails.get(quoteCode, undefined);\n    const baseDetails = TokenDetails.get(baseCode, undefined);\n\n    if (quoteDetails === undefined || baseDetails === undefined) {\n        return [0, 0];\n    }\n\n    const url = `https://api.coingecko.com/api/v3/coins/${baseDetails.coingeckoID}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    let price: number | null = data.market_data.current_price[quoteDetails.symbol.toLowerCase()];\n    let percentChange: number | null = data.market_data.price_change_percentage_24h_in_currency[quoteDetails.symbol.toLowerCase()];\n    if (percentChange === null) {\n        percentChange = 0;\n    }\n    if (price === null) {\n        price = 0;\n    }\n    return [price, percentChange];\n};\n\nexport const RenExTokens = (tokens: List<TokenCode>) => tokens\n    .filter((token: TokenCode | undefined) => {\n        // If token is not found, use UnknownToken which has no settlements\n        return token !== undefined &&\n            TokenDetails.get(token, UnknownToken).settlements\n                .indexOf(OrderSettlement.RenEx) !== -1;\n    })\n    .toList();\n\nexport const RenExAtomicTokens = (tokens: List<TokenCode>) => tokens\n    .filter((token: TokenCode | undefined) => {\n        // If token is not found, use UnknownToken which has no settlements\n        return token !== undefined &&\n            TokenDetails.get(token, UnknownToken).settlements\n                .indexOf(OrderSettlement.RenExAtomic) !== -1;\n    })\n    .toList();\n","// tslint:disable\nimport * as Immutable from \"immutable\";\n\n/**\n * Create a new class that can be instantiated. All instances of the class\n * will be immutable, and will be guaranteed to have all properties of the\n * interface T. Default values for these properties can be specified. Using\n * the getter and setter methods are type safe.\n *\n * @param data An object defining the default value for instances of the\n *             class that will be returned.\n *\n * @return A class that can be used to instantiate immutable objects.\n */\nexport const Record = <T>(data: Pick<T, keyof T>) => {\n    // The returned class inherits from the Immutable.Record class, using the\n    // data argument to specify the default property values.\n    return class extends Immutable.Record(data as any) {\n        public constructor(inner?: Partial<T>) {\n            super(Immutable.fromJS(inner || {}));\n        }\n        /**\n         * A type safe getter.\n         *\n         * @param key The name of the property to get. It must be a property that\n         *            exists in T.\n         *\n         * @return The value associated with the property.\n         */\n        public get<K extends string & keyof T, V extends T[K]>(key: K): V {\n            return super.get(key);\n        }\n        /**\n         * A type safe setter.\n         *\n         * @param key The name of the property to set. It must be a property that\n         *            exists in T.\n         *\n         * @return A new instance that has all of the property values of the\n         *         original instance, except for the property value that was set.\n         */\n        public set<K extends (string & keyof T) & never /* FIXME */, V extends T[K]>(key: K, value: V): this {\n            return super.set(key, value) as this;\n        }\n        /**\n         * A type safe merge.\n         *\n         * @param inner An object of properties, and associated values, that will\n         *              be set.\n         *\n         * @return A new instance that has all of the property values of the\n         *         original instance, except for the property values that were\n         *         merged.\n         */\n        public merge<K extends keyof T, V extends T[K]>(inner: Partial<T> | {\n            [key in K]: V;\n        }): this {\n            return super.merge(inner as any) as this;\n        }\n    } as any as RecordInterface<T>;\n};\n\n// An interface to which the return class will be cast.\ntype RecordInterface<T> = new (inner?: Partial<T>) => Props<T> & Methods<T>;\n\n// An interface of the properties that the class will have.\ntype Props<T> = {\n    readonly [P in keyof T]: T[P];\n};\n// An interface of the methods that the class will have.\ninterface Methods<T> {\n    get<K extends keyof T, V extends T[K]>(key: K): V;\n    set<K extends keyof T, V extends T[K]>(key: K, value: V): this;\n    merge<K extends keyof T, V extends T[K]>(inner: Partial<T> | {\n        [key in K]: V;\n    }): this;\n    toJS(): any;\n}\n","// tslint:disable: no-object-literal-type-assertion\n\nimport RenExSDK, { AtomicConnectionStatus, MarketDetails, Order, OrderSide, TokenCode } from \"@renex/renex\";\nimport BigNumber from \"bignumber.js\";\nimport Web3 from \"web3\";\n\nimport { List, Map, OrderedMap } from \"immutable\";\n\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../lib/errors\";\nimport { Pair } from \"../lib/market\";\nimport { INFURA_URL, networkData } from \"../lib/network\";\nimport { Record } from \"../lib/record\";\nimport { Wallet } from \"../lib/wallets/wallet\";\nimport { BalanceActionRecord, TraderOrderRecord } from \"../reducers/typesSdk\";\n\ninterface Serializable<T> {\n    serialize(): string;\n    deserialize(str: string): T;\n}\n\nexport interface ApplicationData {\n    hiddenBook: HiddenBookData;\n    traderBook: TraderBookData;\n    balanceHistory: BalanceHistory;\n    trader: TraderData;\n    sdk: SDKData;\n    marketPrices: MarketPriceData;\n    inputs: InputsData;\n    alert: AlertData;\n    popup: PopupData;\n}\n\n// There are some issues with storing prices and volumes as BigNumbers/numbers\n// regarding rerendering, e.g. 0.0 being converted to 0 before the user has the\n// chance to finish typing a decimal number. Hence they are stored as strings.\nexport interface OrderInputs {\n    side: OrderSide;\n    pricepoint: string;\n    volume: string;\n    minVolume: string;\n}\n\nexport class InputsData extends Record({\n    market: Pair.REN_ETH,\n    orderInputs: {\n        side: OrderSide.BUY,\n        pricepoint: \"\",\n        volume: \"\",\n        minVolume: \"\",\n    } as OrderInputs,\n}) { }\n\nexport class HiddenBookData extends Record({\n    hiddenOrders: null as List<Order> | null,\n}) { }\n\nexport class TraderBookData extends Record({\n    traderOrders: OrderedMap<string, TraderOrderRecord>(),\n    cancelling: Map<string, boolean>(),\n}) { }\n\nexport class BalanceHistory extends Record({\n    updateIndex: 0,\n    balanceHistory: OrderedMap<string, BalanceActionRecord>(),\n}) { }\n\nexport class TraderData extends Record({\n    address: null as string | null,\n    url: null as string | null,\n    agreedToTerms: false,\n    seenMigrationMap: Map<string, boolean>(),\n\n    wallet: null as Wallet | null,\n\n    // Atomic\n    atomicBalances: OrderedMap<TokenCode, BigNumber | null>(),\n    usableAtomicBalances: OrderedMap<TokenCode, BigNumber | null>(),\n    atomicAddresses: OrderedMap<TokenCode, string>(),\n    atomConnectionStatus: AtomicConnectionStatus.NotConnected,\n\n    // Legacy\n    legacyBalances: OrderedMap<TokenCode, BigNumber | null>(),\n    accountLegacyBalances: OrderedMap<TokenCode, BigNumber | null>(),\n    usableLegacyBalances: OrderedMap<TokenCode, BigNumber | null>(),\n\n    /**\n     * noLegacyBalances indicates whether or not the user has legacy balances\n     * that haven't been withdrawn. null indicates that this hasn't been\n     * calculated yet.\n     */\n    noLegacyBalances: null as true | false | null,\n    noLegacyOrders: null as true | false | null,\n\n}) implements Serializable<TraderData> {\n    public serialize(): string {\n        return JSON.stringify({\n            address: this.address,\n            agreedToTerms: this.agreedToTerms,\n            seenMigrationMap: this.seenMigrationMap,\n        });\n    }\n\n    public deserialize(str: string): TraderData {\n        // tslint:disable-next-line:no-this-assignment\n        let next = this;\n        try {\n            const data = JSON.parse(str);\n            next = next.set(\"address\", data.address);\n            next = next.set(\"agreedToTerms\", data.agreedToTerms);\n            next = next.set(\"seenMigrationMap\", Map<string, boolean>(data.seenMigrationMap));\n        } catch (error) {\n            _captureBackgroundException_(error, {\n                description: \"cannot deserialize local storage\",\n            });\n        }\n        return next;\n    }\n}\n\nwindow.sdk = new RenExSDK(new Web3.providers.HttpProvider(INFURA_URL), networkData);\n\nexport class SDKData extends Record({\n    sdk: window.sdk,\n    supportedTokens: List<TokenCode>(),\n    supportedAtomicTokens: List<TokenCode>(),\n    supportedMarkets: List<MarketDetails>(),\n    minEthTradeVolume: new BigNumber(0),\n    darknodeFeePercent: new BigNumber(0),\n    wrappingFeePercent: new BigNumber(0),\n}) { }\n\nexport interface MarketPrice {\n    price: number;\n    percentChange: number;\n}\n\nexport const UnknownMarketPrice: MarketPrice = {\n    price: 0,\n    percentChange: 0,\n};\n\nexport class MarketPriceData extends Record({\n    marketPrices: OrderedMap<Pair, MarketPrice>(),\n}) { }\n\nexport enum AlertType {\n    Error = \"error\",\n    Warning = \"warning\",\n    Success = \"success\"\n}\n\nexport enum LabelLevel {\n    Info = \"info\",\n    Warning = \"warning\"\n}\n\nexport class Alert extends Record({\n    alertType: AlertType.Warning,\n    message: \"\", // TODO: Allow for links\n}) { }\n\nexport class AlertData extends Record({\n    pendingAlerts: Map<string, () => Promise<void>>(),\n    alert: { message: \"\" } as Alert\n}) { }\n\nexport interface PopupDetails {\n    popup: React.ReactNode | null;\n    dismissible: boolean;\n    onCancel(): void;\n}\n\nexport class PopupData extends Record({\n    stack: OrderedMap<Symbol, PopupDetails>(),\n}) { }\n","import { createStandardAction } from \"typesafe-actions\";\n\nexport const addPendingAlert = createStandardAction(\"ADD_PENDING_ALERT\")<{\n    id: string;\n    method(): Promise<void>;\n}>();\n\nexport const removePendingAlerts = createStandardAction(\"REMOVE_PENDING_ALERTS\")<{ ids: string[] }>();\n","import * as React from \"react\";\n\nimport { SimpleConsole } from \"@renex/renex\";\n\nimport { SetPopupPayload } from \"../../actions/popup/popupActions\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { ErrorCanceledByUser } from \"../../lib/wallets/wallet\";\n\n/**\n * ApprovalPopup is a popup component that prompts the user to approve a\n * series of Ethereum transactions\n */\nclass ApprovalPopup extends React.Component<Props, State> {\n\n    /**\n     * _isMounted is used to prevent setting state after the component has been\n     * unmounted.\n     */\n    private _isMounted: boolean = false;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            logCount: 0,\n        };\n    }\n\n    public componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    public async componentDidMount() {\n        this._isMounted = true;\n\n        const { call } = this.props;\n\n        await call()\n            .catch((error) => {\n\n                let errorMessage;\n                if (error.message.match(\"User denied transaction signature\")) {\n                    errorMessage = ErrorCanceledByUser;\n                } else {\n                    _captureInteractionException_(error, {\n                        description: \"Error in ApprovalPopup.call()\",\n                        shownToUser: this._isMounted ? \"In ApprovalPopup message box\" : \"No, unmounted\",\n                    });\n                    errorMessage = error.message || error;\n                }\n\n                if (this._isMounted) {\n                    this.setState({ error: errorMessage });\n                }\n            });\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { error } = this.state;\n        const { closePopup } = this.props;\n\n        let title = <h2>Creating transaction...</h2>;\n        let message = <p>Please wait. Do not close this window.</p>;\n        if (error) {\n            switch (error) {\n                case ErrorCanceledByUser:\n                    title = <h2>Transaction canceled</h2>;\n                    message = <p />;\n                    break;\n                default:\n                    title = <h2 className=\"red\">Unable to complete transaction</h2>;\n                    message = <p>{error}</p>;\n            }\n        }\n        return <div className=\"popup approve\">\n            {title}\n            {message}\n            {error &&\n                <div className=\"popup--buttons\">\n                    <button onClick={closePopup}>Close</button>\n                </div>\n            }\n        </div>;\n    }\n}\n\ninterface Props {\n    /**\n     * The function to call after the user has approved the transaction.\n     */\n    call(): Promise<void>;\n\n    /**\n     * A callback to call if the user cancels the transaction.\n     */\n    closePopup(): void;\n}\n\ninterface State {\n    error: string | null;\n    logCount: number;\n}\n\nexport const newApprovalPopup = (uuid: Symbol, call: (simpleConsole?: SimpleConsole) => Promise<void>, onCancelAction: () => void): SetPopupPayload => ({\n    uuid,\n    popup: <ApprovalPopup closePopup={onCancelAction} call={call} />,\n    dismissible: false,\n    onCancel: onCancelAction,\n});\n","import BigNumber from \"bignumber.js\";\n\nimport { BalanceAction, BalanceActionType, ComputedOrderDetails, MatchDetails, NumberInput, OrderInputs, OrderInputsAll, OrderSettlement, OrderSide, OrderStatus, OrderType, SwapOrder, TraderOrder, TransactionStatus, WBTCOrder } from \"@renex/renex\";\nimport BN from \"bn.js\";\n\nimport { Record } from \"../lib/record\";\n\nclass OrderInputsRecord extends Record({\n    symbol: \"\",\n    side: OrderSide.BUY,\n    price: new BigNumber(0) as NumberInput,\n    volume: new BigNumber(0) as NumberInput,\n}) implements OrderInputs { }\n\nclass OrderInputsAllRecord extends Record({\n    symbol: \"\",\n    baseToken: \"\",\n    quoteToken: \"\",\n    side: OrderSide.BUY,\n    price: new BigNumber(0),\n    volume: new BigNumber(0),\n    minVolume: new BigNumber(0),\n    type: OrderType.LIMIT,\n    orderSettlement: OrderSettlement.RenEx,\n    nonce: new BN(0),\n    expiry: 0,\n}) implements OrderInputsAll { }\n\nexport class MatchDetailsRecord extends Record({\n    orderID: \"\",\n    matchedID: \"\",\n\n    receivedVolume: new BigNumber(0),\n    spentVolume: new BigNumber(0),\n    fee: new BigNumber(0),\n    receivedToken: \"\",\n    spentToken: \"\",\n}) implements MatchDetails { }\n\nclass ComputedOrderDetailsRecord extends Record({\n    spendToken: \"\",\n    receiveToken: \"\",\n    receiveVolume: new BigNumber(0),\n    spendVolume: new BigNumber(0),\n    date: 0,\n    feeAmount: new BigNumber(0),\n    feeToken: \"\",\n    orderSettlement: OrderSettlement.RenEx,\n    nonce: new BN(0),\n}) implements ComputedOrderDetails { }\n\nconst SwapOrderRecordDefault: SwapOrder = {\n    swapServer: undefined,\n\n    id: \"\",\n    trader: \"\",\n    status: OrderStatus.NOT_SUBMITTED,\n    matchDetails: undefined as MatchDetailsRecord | undefined,\n\n    computedOrderDetails: new ComputedOrderDetailsRecord(),\n    orderInputs: new OrderInputsAllRecord(),\n    transactionHash: \"\",\n};\nexport class SwapOrderRecord extends Record(SwapOrderRecordDefault) implements SwapOrder { }\n// TODO: Does Typescript have a way of getting this without explicitly defining it?\ntype SwapOrderRecordInner = typeof SwapOrderRecordDefault;\n\nconst WBTCOrderRecordDefault: WBTCOrder = {\n    swapServer: true,\n\n    id: \"\",\n    trader: \"\",\n    status: OrderStatus.NOT_SUBMITTED,\n    matchDetails: undefined as MatchDetailsRecord | undefined,\n\n    computedOrderDetails: new ComputedOrderDetailsRecord(),\n    orderInputs: new OrderInputsRecord(),\n};\nexport class WBTCOrderRecord extends Record(WBTCOrderRecordDefault) implements WBTCOrder { }\n// TODO: Does Typescript have a way of getting this without explicitly defining it?\ntype WBTCOrderRecordInner = typeof WBTCOrderRecordDefault;\n\nexport class BalanceActionRecord extends Record({\n    action: BalanceActionType.Withdraw,\n    amount: new BigNumber(0),\n    time: 0,\n    status: TransactionStatus.Pending,\n    token: \"\",\n    trader: \"\",\n    txHash: \"\",\n    nonce: undefined as number | undefined,\n}) implements BalanceAction { }\n\nexport type TraderOrderRecord = WBTCOrderRecord | SwapOrderRecord;\n\nexport const traderOrderToRecord = (traderOrder: TraderOrder): TraderOrderRecord => {\n    if (traderOrder.swapServer) {\n        const inner: WBTCOrderRecordInner = {\n            swapServer: traderOrder.swapServer,\n            id: traderOrder.id,\n            trader: traderOrder.trader,\n            status: traderOrder.status,\n            matchDetails: traderOrder.matchDetails ? new MatchDetailsRecord(traderOrder.matchDetails) : undefined,\n\n            computedOrderDetails: new ComputedOrderDetailsRecord(traderOrder.computedOrderDetails),\n            orderInputs: new OrderInputsRecord(traderOrder.orderInputs),\n        };\n        return new WBTCOrderRecord(inner);\n    } else {\n        const inner: SwapOrderRecordInner = {\n            swapServer: traderOrder.swapServer,\n            id: traderOrder.id,\n            trader: traderOrder.trader,\n            status: traderOrder.status,\n            matchDetails: traderOrder.matchDetails ? new MatchDetailsRecord(traderOrder.matchDetails) : undefined,\n\n            computedOrderDetails: new ComputedOrderDetailsRecord(traderOrder.computedOrderDetails),\n            orderInputs: new OrderInputsAllRecord(traderOrder.orderInputs),\n            transactionHash: traderOrder.transactionHash,\n        };\n        return new SwapOrderRecord(inner);\n    }\n};\n","import BigNumber from \"bignumber.js\";\n\nimport RenExSDK, { TokenCode } from \"@renex/renex\";\n\nimport { OrderedMap } from \"immutable\";\nimport { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { setAlert } from \"../../actions/alert/alertActions\";\nimport { getLegacyBalances, storeBalanceActions } from \"../../actions/balances/balancesActions\";\nimport { clearPopup, setPopup } from \"../../actions/popup/popupActions\";\nimport { newApprovalPopup } from \"../../components/popups/ApprovalPopup\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { Alert } from \"../../reducers/types\";\nimport { BalanceActionRecord } from \"../../reducers/typesSdk\";\n\nexport const ETH_REQUIRED = \"0.1\";\n\nconst FAILED_WITHDRAWAL_ERROR = \"Unable to withdraw funds\";\n\n// Legacy balances\nexport const updateLegacyBalance = createStandardAction(\"UPDATE_LEGACY_BALANCE\")<{ token: TokenCode; balance: BigNumber | null }>();\nexport const updateLegacyBalances = createStandardAction(\"UPDATE_LEGACY_BALANCES\")<{ balances: OrderedMap<TokenCode, BigNumber | null> }>();\nexport const updateUsableLegacyBalances = createStandardAction(\"UPDATE_USABLE_LEGACY_BALANCES\")<{ usableBalances: OrderedMap<TokenCode, BigNumber | null> }>();\nexport const updateUsableLegacyBalance = createStandardAction(\"UPDATE_USABLE_LEGACY_BALANCE\")<{ token: TokenCode; usableBalance: BigNumber | null }>();\nexport const updateAccountLegacyBalance = createStandardAction(\"UPDATE_ACCOUNT_LEGACY_BALANCE\")<{ token: TokenCode; accountBalance: BigNumber | null }>();\nexport const updateAccountLegacyBalances = createStandardAction(\"UPDATE_ACCOUNT_LEGACY_BALANCES\")<{ accountBalances: OrderedMap<TokenCode, BigNumber | null> }>();\n\n// Atomic Balance\nexport const updateAtomicBalances = createStandardAction(\"UPDATE_ATOMIC_BALANCES\")<{ atomicBalances: OrderedMap<TokenCode, BigNumber | null> }>();\nexport const updateAtomicAddresses = createStandardAction(\"UPDATE_ATOMIC_ADDRESSES\")<{ atomicAddresses: OrderedMap<TokenCode, string> }>();\nexport const updateUsableAtomicBalances = createStandardAction(\"UPDATE_USABLE_ATOMIC_BALANCES\")<{ usableAtomicBalances: OrderedMap<TokenCode, BigNumber | null> }>();\n\nexport const WITHDRAW_DELAY = 5;\n\nexport const withdraw = (\n    sdk: RenExSDK,\n    balances: OrderedMap<TokenCode, BigNumber | null>,\n    usableBalances: OrderedMap<TokenCode, BigNumber | null>,\n    amount: string,\n    currencyCode: TokenCode,\n    callback: () => void,\n) => async (dispatch: Dispatch) => {\n    if (amount === null || balances === null || currencyCode === null || parseFloat(amount) <= 0 || sdk === null) {\n        throw new Error(FAILED_WITHDRAWAL_ERROR);\n    }\n\n    const amountBigNumber = new BigNumber(amount);\n    if (amountBigNumber.lte(new BigNumber(0))) {\n        dispatch(setAlert({\n            alert: new Alert({ message: \"Please enter valid input\" })\n        }));\n        return;\n    }\n\n    // Check if user has sufficient balance to withdraw.\n    const balance = usableBalances.get(currencyCode, undefined);\n    if (balance === undefined || balance === null) {\n        throw new Error(\"Unable to read balance of token while withdrawing\");\n    }\n    if (amountBigNumber.gt(balance)) {\n        throw new Error(\"Insufficient balance while withdrawing\");\n    }\n\n    return new Promise((resolve: () => void) => {\n\n        const uuid = Symbol();\n        const close = () => {\n            dispatch(clearPopup({ uuid }));\n            resolve();\n        };\n\n        const transactionCall = async () => {\n            return sdk.withdraw(amountBigNumber, currencyCode, { awaitConfirmation: false })\n                .then(async withdrawResult => {\n                    const { balanceAction, promiEvent } = withdrawResult;\n                    if (promiEvent) {\n                        promiEvent\n                            .on(\"error\", callback)\n                            .once(\"confirmation\", callback);\n                    } else {\n                        callback();\n                    }\n\n                    const balanceActionRecord = new BalanceActionRecord(balanceAction);\n                    dispatch(storeBalanceActions([balanceActionRecord]));\n                    // Reload balances before closing popup\n                    await getLegacyBalances(sdk)(dispatch);\n                    close();\n                })\n                .catch((error) => { callback(); throw error; });\n        };\n\n        dispatch(setPopup(newApprovalPopup(uuid, transactionCall, close)));\n    });\n};\n","import BigNumber from \"bignumber.js\";\n\nimport RenExSDK, { BalanceActionType, TokenCode, TransactionStatus } from \"@renex/renex\";\n\nimport { OrderedMap } from \"immutable\";\nimport { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport { second, sleep } from \"../../lib/conversion\";\nimport { _captureBackgroundException_ } from \"../../lib/errors\";\nimport { TokenDetails, UnknownToken } from \"../../lib/market\";\nimport { Alert, AlertData, AlertType } from \"../../reducers/types\";\nimport { BalanceActionRecord } from \"../../reducers/typesSdk\";\nimport { setAlert } from \"../alert/alertActions\";\nimport { addPendingAlert, removePendingAlerts } from \"../alert/pendingAlertActions\";\nimport { setNoLegacyBalances } from \"../trader/accountActions\";\nimport {\n    updateAccountLegacyBalances,\n    updateAtomicAddresses,\n    updateAtomicBalances,\n    updateLegacyBalances,\n    updateUsableAtomicBalances,\n    updateUsableLegacyBalances\n} from \"../trader/balanceActions\";\n\n/**\n * Updates a withdrawal or deposit in the store (stored based on its tx hash)\n * @param payload - The payload should contain\n * the withdrawal or deposit object\n */\nexport const storeBalanceActions = createStandardAction(\"PUSH_BALANCE\")<BalanceActionRecord[]>();\n\n/**\n * Checks if any pending deposits or withdrawals have been confirmed\n * @param web3 - Web3 instance to use\n * @param balanceHistory - The Balance History state\n */\nexport const updateBalancesHistory = (\n    sdk: RenExSDK,\n    balanceHistory: OrderedMap<string, BalanceActionRecord>,\n    checkAll = false\n) => async (dispatch: Dispatch) => {\n    // If `checkAll` is true, check all balance history items\n    let filter = (balanceAction: BalanceActionRecord | undefined) => balanceAction !== undefined && balanceAction.status === TransactionStatus.Pending;\n    if (checkAll) {\n        filter = () => true;\n    }\n\n    balanceHistory\n        .filter(filter)\n        .valueSeq()\n        .toArray()\n        .map(async (balanceAction: BalanceActionRecord) => {\n            try {\n                let balanceActionStatus = await sdk.fetchBalanceActionStatus(balanceAction.txHash);\n\n                // If the transaction has been replaced, check again after a\n                // delay. This should not be a common occurrence.\n                if (balanceActionStatus === TransactionStatus.Replaced) {\n                    await sleep(5 * second);\n                    balanceActionStatus = await sdk.fetchBalanceActionStatus(balanceAction.txHash);\n                }\n\n                if (balanceActionStatus !== balanceAction.status) {\n                    if (balanceActionStatus === TransactionStatus.Done) {\n                        const alert = async () => {\n                            const tokenDetails = TokenDetails.get(balanceAction.token, UnknownToken);\n                            dispatch(setAlert({\n                                alert: new Alert({\n                                    message: `${balanceAction.amount} ${tokenDetails.symbol} has been successfully ${balanceAction.action === BalanceActionType.Deposit ? \"deposited\" : \"withdrawn\"}`,\n                                    alertType: AlertType.Success,\n                                }),\n                            }));\n                        };\n                        dispatch(addPendingAlert({ id: balanceAction.txHash, method: alert }));\n                    }\n                    dispatch(storeBalanceActions([balanceAction.set(\"status\", balanceActionStatus)]));\n                }\n            } catch (error) {\n                _captureBackgroundException_(\n                    error,\n                    { description: \"Error in updateBalancesHistory action\" },\n                );\n            }\n        });\n};\n\nexport const getLegacyBalances = (sdk: RenExSDK, pendingAlerts?: AlertData[\"pendingAlerts\"]) => async (dispatch: Dispatch) => {\n    // getBalances should not throw any errors\n\n    // Token balances\n    try {\n        let noLegacyBalances = true;\n\n        let usableBalances = OrderedMap<TokenCode, BigNumber | null>();\n        let balances = OrderedMap<TokenCode, BigNumber | null>();\n        let accountBalances = OrderedMap<TokenCode, BigNumber | null>();\n\n        const supportedTokens = await sdk.fetchSupportedTokens();\n        const allTokenBalances = await sdk.fetchBalances(supportedTokens);\n        supportedTokens.forEach((token: TokenCode) => {\n            let free = null;\n            let total = null;\n            let nondeposited = null;\n            const tokenBalance = allTokenBalances.get(token);\n            if (tokenBalance) {\n                free = tokenBalance.free;\n                if (tokenBalance.free !== null && tokenBalance.used !== null) {\n                    total = tokenBalance.free.plus(tokenBalance.used);\n                    noLegacyBalances = noLegacyBalances && total.isZero();\n                }\n                nondeposited = tokenBalance.nondeposited;\n            }\n            usableBalances = usableBalances.set(token, free);\n            balances = balances.set(token, total);\n            accountBalances = accountBalances.set(token, nondeposited);\n        });\n        dispatch(updateUsableLegacyBalances({ usableBalances }));\n        dispatch(updateAccountLegacyBalances({ accountBalances }));\n        dispatch(updateLegacyBalances({ balances }));\n\n        dispatch(setNoLegacyBalances(noLegacyBalances));\n    } catch (error) {\n        _captureBackgroundException_(error, { description: \"Error in getBalances action\" });\n    }\n\n    // If there are pending alerts (e.g. Orders settled, withdrawals confirmed)\n    // call them now and clear them\n    if (pendingAlerts) {\n        dispatch(removePendingAlerts({\n            ids: pendingAlerts\n                .keySeq()\n                .toArray()\n        }));\n        pendingAlerts.map((pendingAlert: () => Promise<void>, key) => {\n            pendingAlert()\n                .catch((error) => {\n                    _captureBackgroundException_(\n                        error,\n                        { description: `Error in getBalances action for pending alert ${key}` }\n                    );\n                });\n        });\n    }\n};\n\nexport const getAtomicBalances = (sdk: RenExSDK) => async (dispatch: Dispatch) => {\n    if (!sdk.swapperd.isConnected()) {\n        _captureBackgroundException_(null, { description: `Cannot get atomic balances. Swapperd is not connected.` });\n\n        return;\n    }\n    try {\n        const supportedTokens = await sdk.fetchSupportedAtomicTokens();\n        await Promise.all([\n            // Update the addresses\n            sdk.swapperd.fetchAddresses(supportedTokens)\n                .then(atomicTokenAddresses => {\n                    let atomicAddresses = OrderedMap<TokenCode, string>();\n                    supportedTokens.map((token, index) => {\n                        atomicAddresses = atomicAddresses.set(token, atomicTokenAddresses[index]);\n                    });\n                    dispatch(updateAtomicAddresses({ atomicAddresses }));\n                })\n                .catch((error) => {\n                    _captureBackgroundException_(\n                        error,\n                        { description: \"balancesActions.getAtomicBalances.fetchAddresses\" });\n                }),\n            // Update the atomic balances\n            sdk.swapperd.fetchBalances(supportedTokens)\n                .then(tokenBalancesMap => {\n                    let atomicBalances = OrderedMap<TokenCode, BigNumber | null>();\n                    let usableAtomicBalances = OrderedMap<TokenCode, BigNumber | null>();\n                    supportedTokens.forEach(token => {\n                        const tokenBalance = tokenBalancesMap.get(token);\n                        if (tokenBalance) {\n                            let totalBalance: BigNumber | null = null;\n                            if (tokenBalance.free !== null && tokenBalance.used !== null) {\n                                totalBalance = tokenBalance.free.plus(tokenBalance.used);\n                            }\n                            atomicBalances = atomicBalances.set(token, totalBalance);\n                            usableAtomicBalances = usableAtomicBalances.set(token, tokenBalance.free);\n                        }\n                    });\n                    dispatch(updateAtomicBalances({ atomicBalances }));\n                    dispatch(updateUsableAtomicBalances({ usableAtomicBalances }));\n                })\n                .catch((error) => {\n                    _captureBackgroundException_(\n                        error,\n                        { description: \"balancesActions.getAtomicBalances.fetchBalances\" });\n                }),\n        ]);\n    } catch (error) {\n        _captureBackgroundException_(error, {\n            description: \"Error in getAtomicBalances action\"\n        });\n    }\n};\n","import { createStandardAction } from \"typesafe-actions\";\n\nimport { Pair } from \"../../lib/market\";\nimport { OrderInputs } from \"../../reducers/types\";\n\n/**\n * Updates the current market (token pair, e.g. ETH/REN)\n */\nexport const setMarket = createStandardAction(\"SET_MARKET\")<{\n    /**\n     * The market being set.\n     */\n    market: Pair;\n}>();\n\n/**\n * Updates the NewOrder inputs\n */\nexport const setOrder = createStandardAction(\"SET_ORDER\")<{\n    /**\n     * The order inputs being set.\n     */\n    orderInputs: OrderInputs;\n}>();\n","import { OrderedMap } from \"immutable\";\nimport { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nimport RenExSDK, { OrderSettlement, OrderStatus } from \"@renex/renex\";\n\nimport { setAlert } from \"../../actions/alert/alertActions\";\nimport { addPendingAlert } from \"../../actions/alert/pendingAlertActions\";\nimport { _captureBackgroundException_ } from \"../../lib/errors\";\nimport { Alert, AlertType } from \"../../reducers/types\";\nimport { MatchDetailsRecord, TraderOrderRecord } from \"../../reducers/typesSdk\";\nimport { setNoLegacyOrders } from \"../trader/accountActions\";\n\nexport const syncTraderOrders = createStandardAction(\"SYNC_TRADER_ORDERS\")<{ traderOrders: OrderedMap<string, TraderOrderRecord> }>();\n\nexport const addOrders = createStandardAction(\"ADD_ORDERS\")<TraderOrderRecord[]>();\n\nexport const updateOrderStatus = createStandardAction(\"UPDATE_ORDER\")<{ orderID: string; orderStatus: OrderStatus }>();\n\nexport const updateOrderCancelling = createStandardAction(\"UPDATE_ORDER_CANCELLING\")<{ orderID: string; orderCancelling: boolean }>();\n\nexport const cancelLocalOrder = createStandardAction(\"CANCEL_LOCAL_ORDER\")<{ orderID: string }>();\n\n/**\n * Filter for orders that don't need to be checked - based on network and status\n */\nexport const defaultOrderFilter = (checkAllOrders: boolean) => ((order: TraderOrderRecord | undefined) => {\n    if (order === undefined) {\n        return false;\n    }\n\n    if (!checkAllOrders) {\n        if (order.status !== OrderStatus.OPEN &&\n            order.status !== OrderStatus.NOT_SUBMITTED &&\n            order.status !== OrderStatus.CONFIRMED\n        ) {\n            return false;\n        }\n    }\n\n    return true;\n});\n\nexport const checkOrderStatuses = (\n    sdk: RenExSDK,\n    traderOrders: OrderedMap<string, TraderOrderRecord>,\n    checkAllOrders = false,\n) => async (dispatch: Dispatch) => {\n\n    const legacyOrderCont = traderOrders\n        .filter((order) => order.computedOrderDetails.orderSettlement === OrderSettlement.RenEx)\n        .size;\n    dispatch(setNoLegacyOrders(legacyOrderCont === 0));\n\n    // Filter if order is for different network or trader\n    const toCheck = traderOrders\n        .valueSeq()\n        .filter(defaultOrderFilter(checkAllOrders))\n        .toArray();\n\n    for (let order of toCheck) {\n        if (order === undefined) { return; }\n\n        // Check the status of the order in the orderbook.\n        let orderStatus;\n        try {\n            orderStatus = await sdk.fetchOrderStatus(order.id);\n        } catch (error) {\n            _captureBackgroundException_(\n                error as Error,\n                { description: \"Error in checkOrderStatuses action\" },\n            );\n            continue;\n        }\n\n        // If the order is settled and doesn't have match details, get them now\n        if (!order.swapServer && !order.matchDetails && orderStatus === OrderStatus.SETTLED) {\n            order = order.set(\"matchDetails\", new MatchDetailsRecord(await sdk.fetchMatchDetails(order.id)));\n            order = order.set(\"status\", OrderStatus.SETTLED);\n\n            // Only update order after the balances have been updated\n            const alert = async () => {\n                dispatch(addOrders([order]));\n\n                dispatch(setAlert({\n                    alert: new Alert({\n                        alertType: AlertType.Success,\n                        // TODO: Replace with execution details\n                        message: \"Your order has successfully been settled\",\n                    })\n                }));\n            };\n            dispatch(addPendingAlert({ id: `settled: ${order.id}`, method: alert }));\n\n        } else if (order.status !== orderStatus) {\n            dispatch(updateOrderStatus({ orderID: order.id, orderStatus }));\n        }\n    }\n};\n","import { createStandardAction } from \"typesafe-actions\";\n\nimport { Wallet } from \"../../lib/wallets/wallet\";\n\nexport const storeWallet = createStandardAction(\"STORE_WALLET\")<{ wallet: Wallet | null }>();\n","import { createStandardAction } from \"typesafe-actions\";\n\nexport const seenMigration = createStandardAction(\"SEEN_MIGRATION\")<{ address: string; seenMigration: boolean }>();\n","import * as React from \"react\";\n\nimport { Loading } from \"../../components/Loading\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\n\n/**\n * SigningPopup is a popup component for prompting for a user's ethereum\n * signature\n */\nexport class SigningPopup extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            signing: true,\n        };\n    }\n\n    public async componentDidMount() {\n        this.callSign()\n            .catch(null);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { signing, error } = this.state;\n        const { data } = this.props;\n        return <div className=\"popup sign\">\n            <h2>Approve signature</h2>\n            <p className=\"sign--data\">{data.map((item, key) => <span key={key} className=\"monospace sign--datum\">{item}</span>)}</p>\n            {signing ?\n                <>\n                    <Loading />\n                </> :\n                <>\n                    {error ? <p className=\"red\">{error}</p> : null}\n                    <div className=\"popup--buttons\">\n                        <button onClick={this.props.closePopup}>Close</button>\n                        <button onClick={this.callSign}>Try again</button>\n                    </div>\n                </>\n            }\n        </div>;\n    }\n\n    private readonly callSign = async () => {\n        const { sign } = this.props;\n\n        this.setState({ signing: true, error: null });\n\n        try {\n            await sign();\n        } catch (error) {\n            _captureInteractionException_(error, {\n                description: \"Error in SigningPopup.callSign\",\n                shownToUser: \"In SigningPopup message box\",\n            });\n            this.setState({ error: error.message || error });\n        }\n        this.setState({ signing: false });\n    }\n}\n\ninterface Props {\n    data: string[];\n    sign(): Promise<void>;\n    closePopup(): void;\n}\n\ninterface State {\n    error: string | null;\n    signing: boolean;\n}\n","import * as React from \"react\";\n\nimport RenExSDK, { AtomicConnectionStatus } from \"@renex/renex\";\n\nimport { Dispatch } from \"redux\";\n\nimport { SigningPopup } from \"../../components/popups/SigningPopup\";\n\nimport { createStandardAction } from \"typesafe-actions\";\nimport { clearPopup, setPopup } from \"../../actions/popup/popupActions\";\n\nexport const updateAtomConnectionStatus = createStandardAction(\"UPDATE_ATOM_CONNECTION_STATUS\")<{ atomConnectionStatus: AtomicConnectionStatus }>();\n\nexport const refreshAtomConnectionStatus = (sdk: RenExSDK) => async (dispatch: Dispatch) => {\n    const atomConnectionStatus = await sdk.swapperd.refreshStatus();\n    dispatch(updateAtomConnectionStatus({ atomConnectionStatus }));\n};\n\nexport const authorizeSwapper = (sdk: RenExSDK) => (dispatch: Dispatch) => new Promise(async (resolve, reject) => {\n\n    const swapperID = await sdk.swapperd.getID();\n\n    const data: string[] = [`RenEx:`, `authorize:`, `${swapperID}`];\n\n    const uuid = Symbol();\n\n    const call = async () => {\n        const status = await sdk.swapperd.authorize();\n        dispatch(clearPopup({ uuid }));\n\n        resolve(status);\n    };\n\n    const onCancel = () => {\n        dispatch(clearPopup({ uuid }));\n        reject();\n    };\n\n    const popup = <SigningPopup data={data} sign={call} closePopup={onCancel} />;\n\n    dispatch(setPopup({ uuid, popup, onCancel }));\n    // tslint:disable-next-line:no-any\n}) as any;\n","import * as React from \"react\";\n\nimport { AtomicConnectionStatus } from \"@renex/renex\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { Loading } from \"./Loading\";\n\nimport { authorizeSwapper, updateAtomConnectionStatus } from \"../actions/settlement/atomicActions\";\nimport { ApplicationData } from \"../reducers/types\";\n\n/**\n * AtomicNotice\n */\nclass AtomicNoticeClass extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            linkError: null,\n            linkPending: false,\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { atomConnectionStatus } = this.props;\n        const { linkPending, linkError } = this.state;\n\n        const reconnect = <button onClick={this.retryConnect} disabled={linkPending}>\n            {linkPending ? <Loading /> : \"Retry\"}\n        </button>;\n\n        let inner;\n\n        switch (atomConnectionStatus) {\n            case AtomicConnectionStatus.NotConnected:\n                inner = <>\n                    <h2>Could not detect Swapperd</h2>\n                    <p>The Swapperd software is required for trading atomic swap pairs and viewing atomic balances. You can download the software using the links below:</p>\n                    <ul>\n                        <li><a href=\"https://releases.republicprotocol.com/swapperd/Swapperd.exe\">Swapperd for Windows</a></li>\n                        <li><a href=\"https://releases.republicprotocol.com/swapperd/Swapperd.dmg\">Swapperd for MacOS</a></li>\n                    </ul>\n                    {linkError && <p className=\"red\">{linkError}</p>}\n                    {reconnect}\n                </>;\n                break;\n            case AtomicConnectionStatus.NotAuthorized:\n                inner = <>\n                    <p>Your Swapperd has not been configured for this wallet. Please update your Swapperd configuration.</p>\n                    {linkError && <p className=\"red\">{linkError}</p>}\n                    {reconnect}\n                </>;\n                break;\n            case AtomicConnectionStatus.AtomNotAuthorized:\n                inner = <>\n                    <p>Your Swapperd needs to be authorized to action orders on your behalf.</p>\n                    {linkError && <p className=\"red\">{linkError}</p>}\n                    <button onClick={this.retryAuthorize} disabled={linkPending}>\n                        {linkPending ? <Loading /> : linkError ? \"Retry\" : \"Authorize\"}\n                    </button>\n                </>;\n                break;\n            case AtomicConnectionStatus.ChangedSwapper:\n                inner = <>\n                    <p>Your Swapperd details have changed. After ensuring your Swapperd details are correct and have been correctly configured correctly, click the Reconnect button.</p>\n                    {linkError && <p className=\"red\">{linkError}</p>}\n                    {reconnect}\n                </>;\n                break;\n            case AtomicConnectionStatus.InvalidSwapper:\n                inner = <>\n                    <p>Unable to verify authenticity of Swapperd. Please try updating the application.</p>\n                    {linkError && <p className=\"red\">{linkError}</p>}\n                    {reconnect}\n                </>;\n                break;\n            case AtomicConnectionStatus.ConnectedLocked:\n                inner = <>\n                    <p>Swapperd is locked. Please unlock to continue.</p>\n                    {reconnect}\n                </>;\n                break;\n            case AtomicConnectionStatus.ConnectedUnlocked:\n                inner = <>\n                    <p><span className=\"approve--tick\">✔</span> Successfully connected.</p>\n                </>;\n                break;\n            default:\n                inner = <p>Unknown Swapperd connection status: {atomConnectionStatus}</p>;\n        }\n\n        return <div className=\"order--wrapper\">\n            {inner}\n        </div>;\n    }\n\n    /**\n     * retryAuthorize attempts to authorize Swapperd.\n     */\n    private readonly retryAuthorize = async () => {\n        const { sdk } = this.props;\n\n        // tslint:disable-next-line:no-any\n        await this.handleLinkAtom(() => (this.props.actions.authorizeSwapper as any)(sdk));\n    }\n\n    /**\n     * retryConnect attempts to reconnect to Swapperd.\n     */\n    private readonly retryConnect = async () => {\n        const { sdk } = this.props;\n        await this.handleLinkAtom(sdk.swapperd.resetStatus);\n    }\n\n    /**\n     * handleLinkAtom is called by retryAuthorize or retryConnect. It takes in\n     * a Swapperd action and sets the states for linkPending and linkError\n     * depending on the outcome of the action.\n     */\n    private readonly handleLinkAtom = async (atomAction: () => Promise<AtomicConnectionStatus>) => {\n        const { actions } = this.props;\n\n        this.setState({\n            linkError: null,\n            linkPending: true,\n        });\n\n        return atomAction()\n            .then(atomConnectionStatus => {\n                this.setState({\n                    linkPending: false,\n                });\n                actions.updateAtomConnectionStatus({ atomConnectionStatus });\n            })\n            .catch((error) => {\n                this.setState({\n                    linkError: (error && error.message) || error,\n                    linkPending: false,\n                });\n            });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    atomConnectionStatus: state.trader.atomConnectionStatus,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        authorizeSwapper,\n        updateAtomConnectionStatus,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    /**\n     * linkError specifies if an error occurred while connecting to Swapperd.\n     */\n    linkError: string | null;\n\n    /**\n     * linkPending specifies if an attempt to connect to Swapperd is in\n     * progress.\n     */\n    linkPending: boolean;\n}\n\nexport const AtomicNotice = connect(mapStateToProps, mapDispatchToProps)(AtomicNoticeClass);\n","import * as React from \"react\";\n\nimport { List } from \"immutable\";\n\n// Used for CSS styling\nconst NUMERATOR = 164; // pixels\nconst DENOMINATOR = 94; // pixels\nconst OFFSET = 8994; // pixels\n\nexport class Console extends React.Component<Props, State> {\n    private bottomElement: HTMLElement | null = null;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            level: OFFSET,\n        };\n    }\n\n    public render = (): JSX.Element => {\n        const { level } = this.state;\n        const enhanced = level > (NUMERATOR + DENOMINATOR ** 2);\n        return (\n            <div role=\"log\" className={`monospace console ${enhanced ? \"enhanced\" : \"\"}`} onClick={this.onClickHandler}>\n                {this.props.logs}\n                <div ref={this.updateBottomElement} />\n            </div>);\n    }\n\n    public updateBottomElement = (ref: HTMLDivElement | null) => { this.bottomElement = ref; };\n\n    public componentDidMount = (): void => {\n        this.scrollToBottom();\n    }\n\n    public componentWillReceiveProps = (): void => {\n        this.scrollToBottom();\n    }\n\n    private readonly scrollToBottom = (): void => {\n        // Render any new logs before scrolling to bottom\n        this.forceUpdate(() => {\n            if (this.bottomElement) {\n                this.bottomElement.scrollIntoView({ behavior: \"smooth\" });\n            }\n        });\n    }\n\n    private readonly onClickHandler = (_event: React.MouseEvent<HTMLElement>): void => {\n        const { level } = this.state;\n        this.setState({\n            level: level + 1,\n        });\n    }\n}\n\ninterface Props {\n    logs: List<JSX.Element>;\n}\n\ninterface State {\n    level: number;\n}\n","import * as React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { TokenDetail } from \"../lib/market\";\n\nexport class TradeTokenBanner extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { spendToken, receiveToken, spendVolume, receiveVolume, leftArrow } = this.props;\n        // tslint:disable-next-line:non-literal-require\n        const spendTokenIcon = require(`../tokens/${spendToken.icon}`);\n        // tslint:disable-next-line:non-literal-require\n        const receiveTokenIcon = require(`../tokens/${receiveToken.icon}`);\n\n        return <div className=\"open--tokens\">\n            <div>\n                <img alt=\"\" role=\"presentation\" src={spendTokenIcon} />\n                {spendVolume && <p>{spendVolume.toFixed()} {spendToken.symbol}</p>}\n            </div>\n            <div className=\"open--arrow\">{leftArrow ? \"←\" : \"→\"}</div>\n            <div>\n                <img alt=\"\" role=\"presentation\" src={receiveTokenIcon} />\n                {receiveVolume && <p>{receiveVolume.toFixed()} {receiveToken.symbol}</p>}\n            </div>\n        </div>;\n    }\n}\n\ninterface Props {\n    spendToken: TokenDetail;\n    receiveToken: TokenDetail;\n    spendVolume?: BigNumber;\n    receiveVolume?: BigNumber;\n    leftArrow?: boolean;\n}\n\ninterface State {\n}\n","import * as React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { OrderInputs, OrderSide, SimpleConsole } from \"@renex/renex\";\nimport { List } from \"immutable\";\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { SetPopupPayload } from \"../../actions/popup/popupActions\";\nimport { Console } from \"../../components/Console\";\nimport { TradeTokenBanner } from \"../../components/TradeTokenBanner\";\nimport { TokenDetails, UnknownToken } from \"../../lib/market\";\nimport { ErrorCanceledByUser } from \"../../lib/wallets/wallet\";\nimport { ApplicationData } from \"../../reducers/types\";\n\n/**\n * OpenOrderPopup is a popup component that prompts the user to approve opening\n * an order\n */\nclass OpenOrderPopupClass extends React.Component<Props, State> {\n    private _isMounted: boolean = false;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            confirmed: props.skipConfirm !== undefined && props.skipConfirm,\n            error: null,\n            logCount: 0,\n            logs: List(),\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this._isMounted = true;\n        if (this.state.confirmed) {\n            await this.onConfirm();\n        }\n    }\n\n    public async componentWillUnmount(): Promise<void> {\n        this._isMounted = false;\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { confirmed } = this.state;\n\n        let inner;\n        if (!confirmed) {\n            inner = this.renderConfirm();\n        } else {\n            inner = this.renderOpening();\n        }\n\n        return <div className=\"popup open\">\n            {inner}\n        </div>;\n    }\n\n    private readonly renderConfirm = (): React.ReactNode => {\n        const { feePercent, orderInputs } = this.props;\n\n        const { symbol, side, price, volume, minVolume } = orderInputs;\n\n        const [baseToken, quoteToken] = symbol.split(\"/\");\n        const spendToken = side === OrderSide.BUY ? quoteToken : baseToken;\n        const receiveToken = side === OrderSide.BUY ? baseToken : quoteToken;\n        const spendTokenDetails = TokenDetails.get(spendToken, UnknownToken);\n        const receiveTokenDetails = TokenDetails.get(receiveToken, UnknownToken);\n        const baseTokenDetails = TokenDetails.get(baseToken, UnknownToken);\n        const quoteTokenDetails = TokenDetails.get(quoteToken, UnknownToken);\n\n        const baseVolume = new BigNumber(volume);\n        const minBaseVolume = new BigNumber(minVolume || 0);\n        const quoteVolume = baseVolume.times(new BigNumber(price));\n\n        const spendVolume = (side === OrderSide.BUY) ? quoteVolume : baseVolume;\n        let receiveVolume = (side === OrderSide.BUY) ? baseVolume : quoteVolume;\n\n        // Calculate fees\n        const feeToken = receiveToken;\n        const feeVolume = receiveVolume.times(feePercent);\n        receiveVolume = receiveVolume.minus(feeVolume);\n\n        const feeTokenDetails = TokenDetails.get(feeToken, UnknownToken);\n\n        return <>\n            <h2>Confirm order details</h2>\n            <TradeTokenBanner\n                spendToken={spendTokenDetails}\n                receiveToken={receiveTokenDetails}\n                spendVolume={spendVolume}\n                receiveVolume={receiveVolume}\n            />\n            <div className=\"open--details\">\n                <p><span>Price:</span> {price} {quoteTokenDetails.symbol}</p>\n                <p><span>Minimum Volume:</span> {minBaseVolume.toFixed()} {baseTokenDetails.symbol}</p>\n                <p>Includes a {feeVolume.toFixed()} {feeTokenDetails.symbol} fee</p>\n            </div>\n            <div className=\"popup--buttons\">\n                <button className=\"open--confirm\" onClick={this.onConfirm}><span>Confirm</span></button>\n                <button onClick={this.props.closePopup}>Cancel</button>\n            </div>\n        </>;\n    }\n\n    private readonly renderOpening = (): React.ReactNode => {\n        const { error, logs } = this.state;\n        const { closePopup } = this.props;\n\n        let title = <h2>Opening order...</h2>;\n        let message = <p>Please wait. Do not close this window.</p>;\n        if (error) {\n            switch (error.message) {\n                case ErrorCanceledByUser:\n                    title = <h2>Order canceled</h2>;\n                    message = <p />;\n                    break;\n                default:\n                    title = <h2 className=\"red\">Unable to complete transaction</h2>;\n                    message = <p>{error.message}</p>;\n            }\n        }\n        return <>\n            {title}\n            {message}\n            {error &&\n                <div className=\"popup--buttons\">\n                    {error ? <button onClick={this.onConfirm}>Retry</button> : <></>}\n                    <button onClick={closePopup}>Close</button>\n                </div>\n            }\n            <Console logs={logs} />\n        </>;\n    }\n\n    private readonly onConfirm = async () => {\n        const { call } = this.props;\n\n        this.setState({ error: null, confirmed: true });\n\n        const simpleConsole = { log: this.log, error: this.error };\n\n        await call(simpleConsole)\n            .catch((error) => {\n                console.error(error);\n                // Set state may fail if unmounted\n                if (this._isMounted) {\n                    this.setState({ error });\n                }\n            });\n    }\n\n    private readonly log = (message: string) => {\n        const logCount = this.state.logCount;\n        this.setState({ logCount: logCount + 1, logs: this.state.logs.push(<p key={logCount}>{message}</p>) });\n    }\n\n    private readonly error = (message: string) => {\n        const logCount = this.state.logCount;\n        this.setState({ logCount: logCount + 1, logs: this.state.logs.push(<p key={logCount} className=\"red\">{message}</p>) });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    feePercent: state.sdk.darknodeFeePercent,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n    orderInputs: OrderInputs;\n    skipConfirm?: boolean;\n    call(simpleConsole: SimpleConsole): Promise<void>;\n    closePopup(): void;\n}\n\ninterface State {\n    confirmed: boolean;\n    error: Error | null;\n    logCount: number;\n    logs: List<JSX.Element>;\n}\n\nconst OpenOrderPopup = connect(mapStateToProps, null)(OpenOrderPopupClass);\n\nexport const newOpenOrderPopup = (uuid: Symbol, orderInputs: OrderInputs, call: (simpleConsole?: SimpleConsole) => Promise<void>, onCancelAction: () => void, skipConfirm?: boolean): SetPopupPayload => ({\n    uuid,\n    popup: <OpenOrderPopup call={call} closePopup={onCancelAction} orderInputs={orderInputs} skipConfirm={skipConfirm} />,\n    dismissible: false,\n    onCancel: onCancelAction,\n});\n","import BigNumber from \"bignumber.js\";\n\nimport { Dispatch } from \"redux\";\n\nimport RenExSDK, { OrderInputs, OrderSettlement, OrderSide, OrderStatus, OrderType, SimpleConsole } from \"@renex/renex\";\n\nimport { setAlert } from \"../../actions/alert/alertActions\";\nimport { clearPopup, setPopup } from \"../../actions/popup/popupActions\";\nimport { newApprovalPopup } from \"../../components/popups/ApprovalPopup\";\nimport { Pair, Pairs } from \"../../lib/market\";\nimport { ErrorCanceledByUser } from \"../../lib/wallets/wallet\";\nimport { Alert, AlertType } from \"../../reducers/types\";\n\nimport { addPendingAlert } from \"../../actions/alert/pendingAlertActions\";\nimport { getLegacyBalances } from \"../../actions/balances/balancesActions\";\nimport { addOrders, updateOrderCancelling, updateOrderStatus } from \"../../actions/orderbook/traderBookActions\";\nimport { newOpenOrderPopup } from \"../../components/popups/OpenOrderPopup\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { traderOrderToRecord } from \"../../reducers/typesSdk\";\n\nexport const openOrder = (\n    sdk: RenExSDK,\n    market: Pair,\n    side: OrderSide,\n    pricepoint: string,\n    volume: string,\n    minimumVolume: string,\n    orderType: OrderType,\n    onSuccess?: () => void,\n    onError?: () => void,\n) => async (dispatch: Dispatch) => {\n    const marketPair = Pairs.get(market, undefined);\n    if (!marketPair) {\n        return;\n    }\n    const skipConfirm = marketPair.orderSettlement === OrderSettlement.RenExAtomic;\n\n    const pricepointBN = new BigNumber(pricepoint);\n    const volumeBN = new BigNumber(volume);\n    const minimumVolumeBN = new BigNumber(minimumVolume);\n\n    const orderInputs: OrderInputs = {\n        symbol: `${marketPair.baseToken}/${marketPair.quoteToken}`,\n        side,\n        price: pricepointBN.toFixed(),\n        volume: volumeBN,\n        minVolume: minimumVolumeBN,\n        type: orderType,\n    };\n\n    const uuid = Symbol();\n\n    const openOrderCall = async (simpleConsole?: SimpleConsole) => {\n        return sdk.openOrder(orderInputs, { simpleConsole, awaitConfirmation: false })\n            .then(async (openOrderResult) => {\n                const { traderOrder } = openOrderResult;\n                dispatch(addOrders([traderOrderToRecord(traderOrder)]));\n\n                // Reload balances before closing popup\n                await getLegacyBalances(sdk)(dispatch);\n\n                dispatch(setAlert({\n                    alert: new Alert({\n                        alertType: AlertType.Success,\n                        message: \"Your order has been sent\",\n                    })\n                }));\n\n                dispatch(clearPopup({ uuid }));\n                if (onSuccess) {\n                    onSuccess();\n                }\n            })\n            .catch(async (error: Error) => {\n                if (onError) {\n                    onError();\n                }\n                if (error.message.match(\"User denied transaction signature\") || error.message.match(sdk.errors.UserRejectedSwap)) {\n                    throw new Error(ErrorCanceledByUser);\n                }\n                _captureInteractionException_(error, {\n                    description: \"Error opening order\",\n                    shownToUser: \"In OpenOrderPopup in message box\",\n                });\n                throw error;\n            });\n    };\n\n    const onDismiss = () => {\n        dispatch(clearPopup({ uuid }));\n        if (onError) {\n            onError();\n        }\n    };\n\n    dispatch(setPopup(newOpenOrderPopup(uuid, orderInputs, openOrderCall, onDismiss, skipConfirm)));\n};\n\nexport const cancelOrder = (\n    sdk: RenExSDK,\n    orderID: string,\n) => async (dispatch: Dispatch) => {\n\n    return new Promise((resolve: () => void) => {\n\n        const uuid = Symbol();\n\n        const close = () => {\n            dispatch(clearPopup({ uuid }));\n            resolve();\n        };\n\n        dispatch(updateOrderCancelling({ orderID, orderCancelling: true }));\n        const cancelOrderCall = async () => {\n            const { promiEvent } = await sdk.cancelOrder(orderID, { awaitConfirmation: false });\n            if (!promiEvent) {\n                throw new Error(\"Unable to cancel order\");\n            }\n            return promiEvent\n                .on(\"transactionHash\", async () => {\n                    // Transaction is sent\n                    close();\n                })\n                .then(() => {\n                    // Transaction is confirmed\n                    dispatch(updateOrderStatus({ orderID, orderStatus: OrderStatus.CANCELED }));\n\n                    const alert = async () => {\n                        dispatch(setAlert({\n                            alert: new Alert({\n                                alertType: AlertType.Success,\n                                message: \"Your order has been cancelled\",\n                            })\n                        }));\n                        dispatch(updateOrderCancelling({ orderID, orderCancelling: false }));\n                    };\n                    dispatch(addPendingAlert({ id: `cancel: ${orderID}`, method: alert }));\n                })\n                .catch((error: Error) => {\n                    // Transaction failed\n                    dispatch(updateOrderCancelling({ orderID, orderCancelling: false }));\n                    throw error; // Shown in Approval Popup\n                });\n        };\n\n        dispatch(setPopup(newApprovalPopup(uuid, cancelOrderCall, close)));\n\n    });\n\n};\n","import * as React from \"react\";\n\nimport { LabelLevel } from \"../reducers/types\";\n\n/**\n * InfoLabel is a visual component for displaying an information message for\n * another component\n */\nexport class InfoLabel extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            top: 0,\n            left: 0,\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { level, children } = this.props;\n        const iconType = level || LabelLevel.Info;\n        return (\n            <div className=\"label\">\n                <div className={`label--icon ${iconType}--icon`} onMouseEnter={this.onMouseEnter} />\n                <div style={this.state} className=\"label--message\">{children ? children : \"\"}</div>\n            </div>\n        );\n    }\n\n    private readonly onMouseEnter = (event: React.MouseEvent<HTMLElement>) => {\n        const { top, left, width, height } = event.currentTarget.getBoundingClientRect();\n        this.setState({\n            top: top - height / 2,\n            left: left + width / 2,\n        });\n    }\n}\n\ninterface Props {\n    level?: LabelLevel;\n    children?: React.ReactNode;\n}\n\ninterface State {\n    top: number;\n    left: number;\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\n\nimport { OrderSettlement, OrderSide, OrderStatus } from \"@renex/renex\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { Loading } from \"./Loading\";\n\nimport { setAlert } from \"../actions/alert/alertActions\";\nimport { cancelOrder } from \"../actions/trader/orderActions\";\nimport { getTimeMagnitude, naturalTime, TimeMagnitude } from \"../lib/conversion\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { TokenDetails, UnknownToken } from \"../lib/market\";\nimport { Alert, AlertType, ApplicationData, LabelLevel } from \"../reducers/types\";\nimport { TraderOrderRecord } from \"../reducers/typesSdk\";\nimport { InfoLabel } from \"./InfoLabel\";\n\nconst renderOrderStatus = (status: OrderStatus) => {\n    switch (status) {\n        case OrderStatus.NOT_SUBMITTED: return \"Pending\";\n        case OrderStatus.FAILED_TO_SETTLE: return \"Failed\";\n        case OrderStatus.OPEN: return \"Open\";\n        case OrderStatus.CONFIRMED: return \"Settling\";\n        case OrderStatus.CANCELED: return \"Canceled\";\n        case OrderStatus.SETTLED: return \"Settled\";\n        case OrderStatus.SLASHED: return \"Aborted\";\n        default:\n            return \"Unknown\";\n    }\n};\n\nclass SubmittedTradesTableClass extends React.Component<Props, State> {\n    private timeout: NodeJS.Timer | undefined;\n    private rerender: NodeJS.Timer | undefined;\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            highlightLatest: false,\n            receivedOrders: false,\n            relevantRows: 0,\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props): void {\n        // Highlight the latest order if it was just added.\n        if (this.props.traderOrders.size < nextProps.traderOrders.size) {\n            if (this.state.receivedOrders) {\n                this.setState({ highlightLatest: true });\n\n                if (this.timeout) { clearTimeout(this.timeout); }\n                this.timeout = setTimeout(\n                    () => { this.setState({ highlightLatest: false }); },\n                    3 * 1000,\n                );\n            } else {\n                this.setState({ receivedOrders: true });\n            }\n        } else if (this.props.traderOrders.size > nextProps.traderOrders.size) {\n            // Remove highlight if order failed and has been removed from the list.\n            this.setState({ highlightLatest: false });\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.timeout) { clearTimeout(this.timeout); }\n        if (this.rerender) { clearTimeout(this.rerender); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { amountToShow } = this.props;\n        const { traderOrders } = this.props;\n        let relevantRows = null;\n        if (traderOrders.size > 0) {\n            // Find the most precise time being shown (seconds, minutes, hours...)\n            // and rerender to ensure that these times are updated\n            const magnitude = traderOrders\n                .map((traderOrder: TraderOrderRecord) => getTimeMagnitude(traderOrder.computedOrderDetails.date))\n                .reduce((val: number, min: number) => Math.min(val, min), TimeMagnitude.Day);\n\n            if (this.rerender) { clearTimeout(this.rerender); }\n            this.rerender = setTimeout(\n                () => {\n                    this.forceUpdate();\n                },\n                magnitude / 2\n            );\n\n            relevantRows = this.generateRows();\n        }\n\n        return (\n            <div className=\"trades--table table--wrapper\">\n                <table>\n                    <thead>\n                        <tr>\n                            {/* If any fields are added/removed, the colSpan\n                                    below must be modified to reflect this. */}\n                            <th>Order ID</th>\n                            <th>From</th>\n                            <th>To</th>\n                            <th>Price</th>\n                            <th>Opened</th>\n                            <th>Status</th>\n                            <th>Cancel?</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {relevantRows && relevantRows.length > 0 ?\n                            amountToShow !== undefined ? relevantRows.slice(0, amountToShow) : relevantRows\n                            :\n                            <tr>\n                                <td colSpan={8}>No submitted orders</td>\n                            </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    private async handleCancel(orderID: string): Promise<void> {\n        const { sdk, traderOrders } = this.props;\n\n        if (!sdk || !traderOrders) {\n            return;\n        }\n\n        // Attempt to cancel\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.cancelOrder(sdk, orderID);\n        } catch (error) {\n            _captureInteractionException_(error, {\n                description: \"Error in SubmittedTradesTable.handleCancel\",\n                shownToUser: \"As alert\",\n                orderID,\n            });\n            this.props.actions.setAlert({\n                alert: new Alert({\n                    alertType: AlertType.Error,\n                    // TODO: Replace with execution details\n                    message: \"Unable to cancel order\",\n                })\n            });\n        }\n    }\n\n    private generateRows(): React.ReactNode[] | null {\n        const { traderOrders, sdk, cancelling, filter } = this.props;\n        const { highlightLatest } = this.state;\n\n        const atomConnected = sdk.swapperd.isConnected();\n\n        const orders = filter ? traderOrders.filter(filter) : traderOrders;\n\n        return orders\n            .valueSeq()\n            .toArray()\n            .reverse()\n            .map((order: TraderOrderRecord, key: number) => {\n\n                const spendDetails = TokenDetails.get(order.computedOrderDetails.spendToken, UnknownToken);\n                const receiveDetails = TokenDetails.get(order.computedOrderDetails.receiveToken, UnknownToken);\n\n                const fstSymbol = (order.orderInputs.side === OrderSide.SELL ? receiveDetails : spendDetails).symbol;\n                const sndSymbol = (order.orderInputs.side === OrderSide.SELL ? spendDetails : receiveDetails).symbol;\n\n                // Deduct fees from receive amount.\n                // receiveAmount = receiveAmount.minus(receiveAmount.times(ORDER_FEE));\n\n                const receive = order.computedOrderDetails.receiveVolume;\n                const spend = order.computedOrderDetails.spendVolume;\n\n                const priceFixed = typeof order.orderInputs.price === \"object\" ?\n                    order.orderInputs.price.toFixed() :\n                    order.orderInputs.price.toString();\n\n                return (\n                    <tr key={key} className={`${order.status.toLowerCase()} ${key === 0 && highlightLatest ? \"recent\" : \"\"}`}>\n                        <td><span className=\"monospace\">{order.id}</span></td>\n                        <td className=\"volume right\">\n                            <span>{spend.toString()} {spendDetails.symbol}</span>\n                        </td>\n                        <td className=\"volume right\">\n                            <span>{receive.toString()} {receiveDetails.symbol}</span>\n                        </td>\n                        <td className=\"price center\">{`${priceFixed} ${fstSymbol} to ${sndSymbol}`}</td>\n                        <td\n                            className=\"center\"\n                            title={\n                                moment(order.computedOrderDetails.date * 1000)\n                                    .format(\"MMMM Do YYYY, HH:mm:ss\")\n                            }\n                        >\n                            <span>{naturalTime(order.computedOrderDetails.date, { message: \"Just now\", suffix: \"ago\", countDown: false })}</span>\n                        </td>\n                        <td className=\"center\">\n                            {\n                                order.status === OrderStatus.NOT_SUBMITTED ?\n                                    <Loading /> :\n                                    <span>{renderOrderStatus(order.status)}\n                                        {order.computedOrderDetails.orderSettlement === OrderSettlement.RenExAtomic &&\n                                            order.status === OrderStatus.CONFIRMED &&\n                                            !atomConnected ?\n                                            <InfoLabel level={LabelLevel.Warning}>Unable to connect to Swapperd</InfoLabel>\n                                            : null\n                                        }\n                                    </span>\n                            }\n                        </td>\n                        <td className=\"center\">\n                            {\n                                order.status === OrderStatus.OPEN ? (\n                                    cancelling.get(order.id, false) ?\n                                        <Loading />\n                                        :\n                                        <span\n                                            className=\"cross\"\n                                            role=\"button\"\n                                            // tslint:disable-next-line:react-this-binding-issue\n                                            onClick={this.handleCancel.bind(this, order.id)}\n                                        >\n                                            &#x00D7;\n                                        </span>\n                                )\n                                    :\n                                    <span>-</span>\n                            }\n                        </td>\n                    </tr >\n                );\n            });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    cancelling: state.traderBook.cancelling,\n    traderOrders: state.traderBook.traderOrders,\n    sdk: state.sdk.sdk,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        cancelOrder,\n        setAlert,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n    amountToShow?: number;\n    filter?(order?: TraderOrderRecord): boolean;\n}\n\ninterface State {\n    relevantRows: number;\n    highlightLatest: boolean;\n    receivedOrders: boolean;\n}\n\nexport const SubmittedTradesTable = connect(mapStateToProps, mapDispatchToProps)(SubmittedTradesTableClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { BalanceAction, BalanceActionType, Token, TokenCode, TransactionStatus } from \"@renex/renex\";\n\nimport { setAlert } from \"../actions/alert/alertActions\";\nimport { withdraw } from \"../actions/trader/balanceActions\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { RenExTokens, TokenDetails, UnknownToken } from \"../lib/market\";\nimport { networkData } from \"../lib/network\";\nimport { ErrorCanceledByUser } from \"../lib/wallets/wallet\";\nimport { Alert, AlertType, ApplicationData, LabelLevel } from \"../reducers/types\";\nimport { InfoLabel } from \"./InfoLabel\";\nimport { Loading } from \"./Loading\";\n\n/**\n * ViewBalancesTable is a visual component for allowing a user to deposit and\n * withdraw funds\n */\nclass ViewBalancesTableClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            balanceHistorySize: 0,\n            pendingWithdrawal: false,\n            withdrawing: null,\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props): void {\n        const { balanceHistory } = nextProps;\n\n        // Check for pending withdrawal updates if there are new items in the\n        // history or if there is an existing pending withdrawal.\n        if (balanceHistory.size !== this.state.balanceHistorySize || this.state.pendingWithdrawal) {\n            this.setState({ balanceHistorySize: balanceHistory.size });\n            const pendingWithdrawal = balanceHistory.filter((item: BalanceAction | undefined) => {\n                return item !== undefined && item.action === BalanceActionType.Withdraw && item.status === TransactionStatus.Pending;\n            }).size > 0;\n            if (pendingWithdrawal !== this.state.pendingWithdrawal) {\n                this.setState({ pendingWithdrawal });\n            }\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n\n        const relevantRows = this.generateRows();\n\n        return <div className=\"view--table table--wrapper\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Token</th>\n                        <th>\n                            Locked Balance\n                                <InfoLabel>If you have any ordered open, please cancel them before withdrawing.</InfoLabel>\n                        </th>\n                        <th>\n                            Usable Balance\n                                <InfoLabel>The amount you have deposited, excluding balances locked in open orders or pending withdrawals.</InfoLabel>\n                        </th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>\n                    {relevantRows && relevantRows.length > 0 ?\n                        relevantRows :\n                        <tr><td colSpan={4}>No balances</td></tr>\n                    }\n                </tbody>\n            </table>\n        </div>;\n    }\n\n    private generateRows(): React.ReactNode[] {\n        const { legacyBalances, usableLegacyBalances, supportedTokens } = this.props;\n        const { withdrawing } = this.state;\n\n        const list: React.ReactNode[] = [];\n        RenExTokens(supportedTokens)\n            .forEach((token: TokenCode) => {\n                const { name, symbol, icon, address } = TokenDetails.get(token, UnknownToken);\n                const balance = legacyBalances.get(token, null);\n                const usableBalance = usableLegacyBalances.get(token, null);\n\n                if (balance && balance.isZero()) {\n                    return;\n                }\n\n                const lockedBalance = balance && usableBalance ? balance.minus(usableBalance) : balance;\n\n                const lockedBalanceRender = !lockedBalance || lockedBalance.isZero() ?\n                    `` :\n                    <span className=\"red\">{lockedBalance.toFixed()} {symbol}</span>;\n\n                const readableUsableBalanceText = (usableBalance !== null) ? usableBalance.toFixed() : \"-\";\n\n                // tslint:disable-next-line:non-literal-require\n                const image = require(`../tokens/${icon}`);\n\n                let link;\n                if (token !== Token.ETH) {\n                    const TOKEN_URL = `${networkData.etherscan}/token/${address}`;\n                    link =\n                        <a className=\"view--external\" href={TOKEN_URL} rel=\"noopener noreferrer\" target=\"_blank\" title=\"View on Etherscan\">\n                            <span>&rarr;</span>\n                        </a>;\n                }\n                list.push(\n                    <tr key={token}>\n                        <td>\n                            <img alt=\"\" role=\"presentation\" src={image} />\n                            <span>{`${name} `}</span>\n                            {link}\n                        </td>\n                        <td>\n                            {withdrawing === token ? \"\" : lockedBalanceRender}\n                            {balance === null &&\n                                <InfoLabel level={LabelLevel.Warning}>Failed to retrieve locked {symbol} balance.</InfoLabel>\n                            }\n                        </td>\n                        <td>\n                            {`${readableUsableBalanceText} ${symbol}`}\n                            {usableBalance === null &&\n                                <InfoLabel level={LabelLevel.Warning}>Failed to retrieve usable {symbol} balance.</InfoLabel>\n                            }\n                        </td>\n                        <td className=\"center\">\n                            {withdrawing === token ?\n                                <Loading /> :\n                                <button disabled={withdrawing !== null} value={token} onClick={this.withdraw}>Withdraw</button>\n                            }\n                        </td>\n                    </tr >\n                );\n            });\n\n        return list;\n    }\n\n    private readonly withdraw = async (event: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n\n        const { sdk, legacyBalances, usableLegacyBalances } = this.props;\n        const { pendingWithdrawal } = this.state;\n\n        const element = (event.target as HTMLButtonElement);\n        const currency = element.value;\n\n        const withdrawAmount = usableLegacyBalances.get(currency);\n\n        if (!withdrawAmount) {\n            this.props.actions.setAlert({ alert: new Alert({ message: \"Unable to withdraw, please try again.\" }) });\n            return;\n        }\n\n        if (pendingWithdrawal) {\n            this.props.actions.setAlert({ alert: new Alert({ message: \"Please wait until the current withdrawal is complete\" }) });\n            return;\n        }\n\n        this.setState({ withdrawing: currency as Token });\n\n        const onDone = () => {\n            try {\n                this.setState({ withdrawing: null });\n            } catch {\n                //\n            }\n        };\n\n        try {\n            // tslint:disable-next-line: await-promise\n            await this.props.actions.withdraw(\n                sdk, legacyBalances, usableLegacyBalances, withdrawAmount.toFixed(), currency, onDone,\n            );\n        } catch (error) {\n            if (error.message !== ErrorCanceledByUser) {\n                _captureInteractionException_(error, { description: \"Error in ViewBalancesTable.withdraw\", shownToUser: \"As alert\" });\n\n                this.props.actions.setAlert({\n                    alert: new Alert({\n                        alertType: AlertType.Error,\n                        message: error.message || error,\n                    })\n                });\n            }\n            onDone();\n        }\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    accountLegacyBalances: state.trader.accountLegacyBalances,\n    balanceHistory: state.balanceHistory.balanceHistory,\n    legacyBalances: state.trader.legacyBalances,\n    traderOrders: state.traderBook.traderOrders,\n    usableLegacyBalances: state.trader.usableLegacyBalances,\n    sdk: state.sdk.sdk,\n    supportedTokens: state.sdk.supportedTokens,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setAlert,\n        withdraw,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    balanceHistorySize: number;\n    pendingWithdrawal: boolean;\n    withdrawing: Token | null;\n}\n\nexport const ViewBalancesTable = connect(mapStateToProps, mapDispatchToProps)(ViewBalancesTableClass);\n","import * as React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { AtomicConnectionStatus, OrderSettlement, OrderStatus } from \"@renex/renex\";\nimport { clearPopup, SetPopupPayload } from \"../../actions/popup/popupActions\";\nimport { seenMigration } from \"../../actions/trader/migrationActions\";\nimport { ApplicationData } from \"../../reducers/types\";\nimport { TraderOrderRecord } from \"../../reducers/typesSdk\";\nimport { AtomicNotice } from \"../AtomicNotice\";\nimport { Loading } from \"../Loading\";\nimport { SubmittedTradesTable } from \"../SubmittedTradesTable\";\nimport { ViewBalancesTable } from \"../ViewBalancesTable\";\n\nconst orderFilter = (order: TraderOrderRecord): boolean =>\n    order.computedOrderDetails.orderSettlement === OrderSettlement.RenEx &&\n    order.status === OrderStatus.OPEN;\n\n/**\n * MigrationPopup is a popup component for displaying terms and conditions\n */\nclass MigrationPopupClass extends React.Component<Props, State> {\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            page: 0,\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { page } = this.state;\n\n        return <div className=\"popup migration\">\n            {this.pages()[page]()}\n        </div>;\n    }\n\n    public renderWelcome = (): JSX.Element => {\n        return <>\n            <h1>Welcome</h1>\n            <div className=\"migration--body\">\n                <div className=\"migration--description\">\n                    <p>\n                        RenEx now uses <i>Swapperd</i> for trader balances and order execution.\n                        Before continuing, please step through to see the changes.\n                        </p>\n                </div>\n                <div className=\"migration--buttons\">\n                    <button onClick={this.next}>Next</button>\n                </div>\n            </div>\n        </>;\n    }\n\n    // public renderWhatIsSwapperd = (): JSX.Element => {\n    //     return <>\n    //             <h1>What is Swapperd</h1>\n    //             <div className=\"migration--body\">\n    //                 <div className=\"migration--description\">\n    //                     <p>\n    //                         Swapperd is a\n    //                     </p>\n    //                 </div>\n    //                 <div className=\"migration--buttons\">\n    //                     <button onClick={this.previous}>Previous</button>\n    //                     <button onClick={this.next}>Next</button>\n    //                 </div>\n    //             </div>\n    //         </>;\n    // }\n\n    public renderAtomicNotice = (): JSX.Element => {\n        const { atomConnectionStatus } = this.props;\n\n        const showLater =\n            atomConnectionStatus !== AtomicConnectionStatus.ConnectedUnlocked;\n\n        return <>\n            <h1>Connect Swapperd</h1>\n            <div className=\"migration--body\">\n\n                <div className=\"migration--description\">\n                    <p>\n                        In order to use RenEx, you now use the Swapperd wallet. Connect it to trade:\n                    </p>\n                </div>\n                <div className=\"migration--frame\">\n                    <AtomicNotice />\n                </div>\n                <div className=\"migration--buttons\">\n                    <button onClick={this.previous}>Previous</button>\n                    {showLater ?\n                        <button onClick={this.next}>Later</button> :\n                        <button onClick={this.next} className=\"button--blue\">Next</button>\n                    }\n                </div>\n            </div>\n        </>;\n    }\n\n    public renderCancelOrders = (): JSX.Element => {\n        const { traderOrders } = this.props;\n\n        const showLater = traderOrders.filter(orderFilter).size > 0;\n\n        return <>\n            <h1>Cancel old orders</h1>\n            <div className=\"migration--body\">\n\n                <div className=\"migration--description\">\n                    <p>\n                        RenEx now uses.\n                        RenEx now uses a single Atomic swap system for all\n                        trades and balances should now be stored in Swapperd to\n                        perform trades.\n                        Before withdrawing your legacy balances, please cancel\n                        your old orders.\n                    </p>\n                </div>\n                <div className=\"migration--frame\">\n                    <SubmittedTradesTable filter={orderFilter} />\n                </div>\n                <div className=\"migration--buttons\">\n                    <button onClick={this.previous}>Previous</button>\n                    {showLater ?\n                        <button onClick={this.next}>Later</button> :\n                        <button onClick={this.next} className=\"button--blue\">Next</button>\n                    }\n                </div>\n            </div>\n        </>;\n    }\n\n    public renderWithdraw = (): JSX.Element => {\n        const { legacyBalances } = this.props;\n\n        const showLater = (legacyBalances.filter(\n            (balance: BigNumber | null) => (\n                balance !== null &&\n                !balance.isZero())).size > 0\n        );\n\n        return <>\n            <h1>Withdraw legacy balances</h1>\n            <div className=\"migration--body\">\n\n                <div className=\"migration--description\">\n                    <p>Balances are no longer stored in the RenEx balances contract.</p>\n                </div>\n                <div className=\"migration--frame\">\n                    <ViewBalancesTable />\n                </div>\n                <div className=\"migration--buttons\">\n                    <button onClick={this.previous}>Previous</button>\n                    {showLater ?\n                        <button onClick={this.next}>Later</button> :\n                        <button onClick={this.next} className=\"button--blue\">Next</button>\n                    }\n                </div>\n            </div>\n        </>;\n    }\n\n    public renderClose = (): JSX.Element => {\n        return <>\n            <div className=\"migration--body\">\n                <h1>Ready to go</h1>\n                <div className=\"migration--description\" />\n                <div className=\"migration--buttons\">\n                    <button onClick={this.previous}>Previous</button>\n                    <button onClick={this.done} className=\"button--blue\">Close</button>\n                </div>\n            </div>\n        </>;\n    }\n\n    public renderLoading = (): JSX.Element => {\n        return <>\n            <div className=\"migration--body\">\n                <Loading />\n                <br />\n                <div className=\"migration--buttons\">\n                    <button onClick={this.previous}>Previous</button>\n                    <button onClick={this.next}>Next</button>\n                </div>\n            </div>\n        </>;\n    }\n\n    /**\n     * pages is an array of render functions to show for each step\n     */\n    private readonly pages = (): Array<() => JSX.Element> => {\n        const { noLegacyBalances, noLegacyOrders } = this.props;\n\n        const pageList = [];\n        pageList.push(this.renderWelcome);\n        // pageList.push(this.renderWhatIsSwapperd);\n        pageList.push(this.renderAtomicNotice);\n\n        if (noLegacyOrders === null) {\n            pageList.push(this.renderLoading);\n        } else if (noLegacyOrders === false) {\n            pageList.push(this.renderCancelOrders);\n        }\n\n        if (noLegacyBalances === null) {\n            pageList.push(this.renderLoading);\n        } else if (noLegacyBalances === false) {\n            pageList.push(this.renderWithdraw);\n        }\n\n        pageList.push(this.renderClose);\n\n        return pageList;\n    }\n\n    private readonly next = (): void => {\n        this.setState({ page: this.state.page + 1 });\n    }\n\n    private readonly previous = (): void => {\n        this.setState({ page: this.state.page - 1 });\n    }\n\n    private readonly done = (): void => {\n        const { address } = this.props;\n        if (address) {\n            this.props.actions.seenMigration({ address, seenMigration: true });\n        }\n        this.props.onDone();\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    legacyBalances: state.trader.legacyBalances,\n    traderOrders: state.traderBook.traderOrders,\n\n    noLegacyOrders: state.trader.noLegacyOrders,\n    noLegacyBalances: state.trader.noLegacyBalances,\n\n    atomConnectionStatus: state.trader.atomConnectionStatus,\n\n    address: state.trader.address,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        seenMigration,\n        clearPopup,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n    onDone(): void;\n}\n\ninterface State {\n    page: number;\n}\n\nexport const MigrationPopup = connect(mapStateToProps, mapDispatchToProps)(MigrationPopupClass);\n\nexport const newMigrationPopup = (uuid: Symbol, onCancelAction: () => void, onDoneAction: () => void): SetPopupPayload => ({\n    uuid,\n    popup: <MigrationPopup onDone={onDoneAction} />,\n    dismissible: true,\n    onCancel: onCancelAction,\n});\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import * as Sentry from \"@sentry/browser\";\n\nimport RenExSDK, { TokenCode } from \"@renex/renex\";\nimport Web3 from \"web3\";\n\nimport { OrderedMap } from \"immutable\";\nimport { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\nimport { Provider } from \"web3/providers\";\n\nimport { storeBalanceActions } from \"../../actions/balances/balancesActions\";\nimport { setMarket } from \"../../actions/inputs/inputsActions\";\nimport { addOrders } from \"../../actions/orderbook/traderBookActions\";\nimport {\n    updateAccountLegacyBalances,\n    updateAtomicAddresses,\n    updateAtomicBalances,\n    updateLegacyBalances,\n    updateUsableLegacyBalances,\n} from \"../../actions/trader/balanceActions\";\nimport { storeWallet } from \"../../actions/trader/walletActions\";\nimport { newMigrationPopup } from \"../../components/popups/MigrationPopup\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../../lib/errors\";\nimport { history } from \"../../lib/history\";\nimport { Pair } from \"../../lib/market\";\nimport { INFURA_URL, networkData } from \"../../lib/network\";\nimport { getNetwork } from \"../../lib/web3\";\nimport { BalanceActionRecord, traderOrderToRecord } from \"../../reducers/typesSdk\";\nimport { clearPopup, setPopup } from \"../popup/popupActions\";\n\nexport const storeAddress = createStandardAction(\"STORE_ADDRESS\")<string | null>();\n\nexport const storeURL = createStandardAction(\"STORE_URL\")<string | null>();\n\n/**\n * Sets whether the trader has no legacy balances to true of false.\n */\nexport const setNoLegacyBalances = createStandardAction(\"SET_NO_LEGACY_BALANCES\")<boolean>();\n\n/**\n * Sets whether the trader has no legacy orders to true of false.\n */\nexport const setNoLegacyOrders = createStandardAction(\"SET_NO_LEGACY_ORDERS\")<boolean>();\n\nexport const logout = (sdk: RenExSDK, options: { reload: boolean }) => async (dispatch: Dispatch) => {\n\n    // Clear session account in store (and in local storage)\n    dispatch(storeAddress(null));\n\n    // Clear Redux stores\n    dispatch(setMarket({ market: Pair.REN_ETH }));\n\n    // Clear balances\n    dispatch(updateLegacyBalances({ balances: OrderedMap() }));\n    dispatch(updateUsableLegacyBalances({ usableBalances: OrderedMap() }));\n    dispatch(updateAccountLegacyBalances({ accountBalances: OrderedMap() }));\n    dispatch(updateAtomicBalances({ atomicBalances: OrderedMap() }));\n\n    dispatch(updateAtomicAddresses({ atomicAddresses: OrderedMap<TokenCode, string>() }));\n    dispatch(storeWallet({ wallet: null }));\n\n    // Use read-only provider and clear address\n    sdk.updateProvider(new Web3.providers.HttpProvider(INFURA_URL));\n    sdk.setAddress(\"\");\n\n    Sentry.configureScope((scope) => {\n        scope.setExtra(\"loggedIn\", false);\n    });\n\n    if (options.reload) {\n        history.push(\"/loading\");\n        // Reload to clear all stores and cancel timeouts\n        // (e.g. deposit/withdrawal confirmations)\n        location.replace(\"/\");\n    }\n};\n\nexport const login = (\n    sdk: RenExSDK,\n    web3Provider: Provider,\n    address: string,\n    seenMigration: boolean,\n    options: { redirect: boolean; url: string | null }\n) => async (dispatch: Dispatch) => {\n    // Check that the provider is using the correct network\n    if (await getNetwork(new Web3(web3Provider)) !== networkData.ethNetwork) {\n        // dispatch(setAlert({\n        //     alert: new Alert({ message: `Invalid Web3 network (expected ${networkData.ethNetworkLabel})` })\n        // }));\n\n        logout(sdk, { reload: false })(dispatch)\n            .catch((error) => {\n                _captureInteractionException_(\n                    error,\n                    { description: \"accountActions.login.logout\", shownToUser: \"No\" });\n            });\n\n        return;\n    }\n\n    Sentry.configureScope((scope) => {\n        scope.setUser({ id: address });\n        scope.setExtra(\"loggedIn\", true);\n    });\n\n    // Store address in the store (and in local storage)\n    dispatch(storeAddress(address));\n\n    // Configure SDK\n    sdk.updateProvider(web3Provider);\n    sdk.setAddress(address);\n\n    // Retrieve the trader's orders\n    sdk.fetchTraderOrders()\n        .then((traderOrders) => dispatch(addOrders(traderOrders.map(traderOrderToRecord))))\n        .catch((error) => {\n            _captureBackgroundException_(\n                error,\n                { description: \"accountActions.login.fetchTraderOrders\" });\n        });\n\n    // Retrieve the trader's balance actions\n    sdk.fetchBalanceActions()\n        // Convert to immutable records and then dispatch\n        .then((balanceActions) => dispatch(storeBalanceActions(\n            balanceActions.map(balanceAction => new BalanceActionRecord(balanceAction))\n        )))\n        .catch((error) => {\n            _captureBackgroundException_(\n                error,\n                { description: \"accountActions.login.fetchBalanceActions\" });\n        });\n\n    if (options.redirect) {\n        history.push(options.url ? options.url : \"/exchange\");\n    }\n\n    if (!seenMigration) {\n        const uuid = Symbol();\n        const close = () => dispatch(clearPopup({ uuid }));\n        dispatch(setPopup(newMigrationPopup(uuid, close, close)));\n    }\n};\n\nexport const lookForLogout = (sdk: RenExSDK) => async (dispatch: Dispatch) => {\n    if (!sdk.getAddress()) {\n        return;\n    }\n\n    let accounts = await sdk.getWeb3().eth\n        .getAccounts();\n\n    accounts = accounts.map((account) => account.toLowerCase());\n\n    const address = sdk.getAddress()\n        .toLowerCase();\n\n    if (!accounts.includes(address)) {\n        console.warn(`User has logged out of their web3 provider (${sdk.getAddress()} not in [${accounts.join(\", \")}])`);\n        logout(sdk, { reload: true })(dispatch)\n            .catch((error) => {\n                _captureBackgroundException_(error, {\n                    description: \"accountActions.lookForLogout.logout\"\n                });\n            });\n    }\n};\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { clearAlert } from \"../actions/alert/alertActions\";\nimport { ApplicationData } from \"../reducers/types\";\n\n/**\n * Alerts is a visual component for displaying general alert messages.\n * Alerts can represent an Error, a Warning or a Success event.\n */\nclass AlertsClass extends React.Component<Props, AlertsState> {\n\n    /**\n     * Th\n     */\n    private readonly DEFAULT_TIME = 10 * 1000; // 10 seconds\n\n    /**\n     * NodeJS Timer for hiding alerts after a specified period\n     */\n    private alertIntervalTimeout: NodeJS.Timer | undefined;\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n    }\n\n    public componentWillReceiveProps(nextProps: Props): void {\n        const { message } = nextProps.alert;\n        if (message === null || message === this.props.alert.message) {\n            return;\n        }\n\n        // Hide alert after 10 seconds.\n        if (this.alertIntervalTimeout) { clearTimeout(this.alertIntervalTimeout); }\n        this.alertIntervalTimeout = setTimeout(\n            this.props.actions.clearAlert,\n            this.DEFAULT_TIME,\n        );\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { message } = this.props.alert;\n        const { alertType } = this.props.alert;\n        if (message === \"\") {\n            return <></>;\n        }\n\n        return (\n            <div role=\"alert\" className={`alert ${alertType}`}>\n                <span className=\"alert--message\">{message}</span>\n                <span role=\"button\" className=\"alert--cross\" onClick={this.handleClose}>&#x00D7;</span>\n            </div>\n        );\n    }\n\n    /**\n     * handleClose is called when a user manually closes an alert\n     */\n    private readonly handleClose = (): void => {\n        if (this.alertIntervalTimeout) { clearInterval(this.alertIntervalTimeout); }\n        this.props.actions.clearAlert();\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    alert: state.alert.alert\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        clearAlert,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface AlertsState {\n}\n\nexport const Alerts = connect(mapStateToProps, mapDispatchToProps)(AlertsClass);\n","import { createStandardAction } from \"typesafe-actions\";\n\nimport { Pair } from \"../../lib/market\";\n\n/**\n * Updates the market price for a specific token\n */\nexport const updatePrices = createStandardAction(\"UPDATE_PRICES\")<{\n    price: number;\n    percentChange: number;\n    pair: Pair;\n}>();\n","import RenExSDK, { Order } from \"@renex/renex\";\n\nimport { List } from \"immutable\";\nimport { Dispatch } from \"redux\";\nimport { createStandardAction } from \"typesafe-actions\";\n\nexport const setHiddenOrders = createStandardAction(\"SET_HIDDEN_ORDERS\")<{\n    hiddenOrders: List<Order>;\n}>();\n\n/**\n * Retrieves hidden orders with an index greater than or equal to startingIndex\n */\nexport const getHiddenOrders = (sdk: RenExSDK) => async (dispatch: Dispatch) => {\n\n    const hiddenOrders = List(await sdk.fetchOrderbook({ limit: 10 }));\n\n    dispatch(setHiddenOrders({ hiddenOrders }));\n};\n","\nimport RenExSDK, { MarketDetails, TokenCode } from \"@renex/renex\";\nimport BigNumber from \"bignumber.js\";\n\nimport { List } from \"immutable\";\n\nimport { createStandardAction } from \"typesafe-actions\";\n\nexport const storeSDK = createStandardAction(\"STORE_SDK\")<{ sdk: RenExSDK }>();\n\ninterface StoreSDKDataPayload {\n    supportedTokens: List<TokenCode>;\n    supportedAtomicTokens: List<TokenCode>;\n    supportedMarkets: List<MarketDetails>;\n    minEthTradeVolume: BigNumber;\n    darknodeFeePercent: BigNumber;\n    wrappingFeePercent: BigNumber;\n}\n\nexport const storeSDKData = createStandardAction(\"STORE_SDK_DATA\")<StoreSDKDataPayload>();\n","import * as React from \"react\";\n\nimport { List } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { getAtomicBalances, getLegacyBalances, updateBalancesHistory } from \"../actions/balances/balancesActions\";\nimport { updatePrices } from \"../actions/market/marketActions\";\nimport { getHiddenOrders } from \"../actions/orderbook/hiddenBookActions\";\nimport { checkOrderStatuses } from \"../actions/orderbook/traderBookActions\";\nimport { storeSDKData } from \"../actions/sdk/sdkActions\";\nimport { refreshAtomConnectionStatus } from \"../actions/settlement/atomicActions\";\nimport { lookForLogout } from \"../actions/trader/accountActions\";\nimport { _captureBackgroundException_, _captureInteractionException_ } from \"../lib/errors\";\nimport { getPrice, Pairs } from \"../lib/market\";\nimport { Wallet } from \"../lib/wallets/wallet\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { _catch_ } from \"./ErrorBoundary\";\n\n/**\n * BackgroundTasks is responsible for running background loops like updating\n * balances and prices\n */\nclass BackgroundTasksClass extends React.Component<Props, State> {\n\n    /**\n     * The following timeouts are used to run the various background tasks.\n     * setTimeout is used instead of setInterval so the interval between calls\n     * includes the time it takes to run the task.\n     */\n    // tslint:disable: completed-docs\n    private readonly setupLoopsTimeout: NodeJS.Timer | undefined;\n    private callGetLegacyBalancesTimeout: NodeJS.Timer | undefined;\n    private callHiddenOrdersTimeout: NodeJS.Timer | undefined;\n    private callUpdatePricesTimeout: NodeJS.Timer | undefined;\n    private callLookForLogoutTimeout: NodeJS.Timer | undefined;\n    private readonly callConnectToAtomTimeout: NodeJS.Timer | undefined;\n    private callUpdateAtomStatusTimeout: NodeJS.Timer | undefined;\n    private callGetAtomicBalancesTimeout: NodeJS.Timer | undefined;\n    private callCheckOrderStatusesTimeout: NodeJS.Timer | undefined;\n    private readonly callCheckRenExExecutionTimeout: NodeJS.Timer | undefined;\n    private callUpdateBalancesHistoryTimeout: NodeJS.Timer | undefined;\n    // tslint:enable: completed-docs\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.storeSDKData()\n            .then(this.setupLoops)\n            .catch(this.setupLoops);\n    }\n\n    public componentWillUnmount() {\n        // Clear timeouts\n        if (this.setupLoopsTimeout) { clearTimeout(this.setupLoopsTimeout); }\n        if (this.callGetLegacyBalancesTimeout) { clearTimeout(this.callGetLegacyBalancesTimeout); }\n        if (this.callHiddenOrdersTimeout) { clearTimeout(this.callHiddenOrdersTimeout); }\n        if (this.callUpdatePricesTimeout) { clearTimeout(this.callUpdatePricesTimeout); }\n        if (this.callLookForLogoutTimeout) { clearTimeout(this.callLookForLogoutTimeout); }\n        if (this.callConnectToAtomTimeout) { clearTimeout(this.callConnectToAtomTimeout); }\n        if (this.callUpdateAtomStatusTimeout) { clearTimeout(this.callUpdateAtomStatusTimeout); }\n        if (this.callGetAtomicBalancesTimeout) { clearTimeout(this.callGetAtomicBalancesTimeout); }\n        if (this.callCheckOrderStatusesTimeout) { clearTimeout(this.callCheckOrderStatusesTimeout); }\n        if (this.callCheckRenExExecutionTimeout) { clearTimeout(this.callCheckRenExExecutionTimeout); }\n        if (this.callUpdateBalancesHistoryTimeout) { clearTimeout(this.callUpdateBalancesHistoryTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return <></>;\n    }\n\n    /**\n     * setupLoops is called once to start the timeouts\n     */\n    private readonly setupLoops = () => {\n        // See if the user has logged out every 5 seconds\n        const callLookForLogout = async () => {\n            const { sdk, wallet } = this.props;\n            if (sdk.getAddress() && wallet === Wallet.MetaMask) {\n                try {\n                    // tslint:disable-next-line: await-promise\n                    await this.props.actions.lookForLogout(sdk);\n                } catch (error) {\n                    _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callLookForLogout\" });\n                }\n            }\n            this.callLookForLogoutTimeout = setTimeout(callLookForLogout, 5 * 1000);\n        };\n        callLookForLogout()\n            .catch(_captureBackgroundException_);\n\n        // Update the user's balances every 5 seconds\n        const callGetLegacyBalances = async () => {\n            const { sdk, pendingAlerts } = this.props;\n            if (sdk.getAddress()) {\n                // tslint:disable-next-line: await-promise\n                await this.props.actions.getLegacyBalances(sdk, pendingAlerts);\n            }\n            this.callGetLegacyBalancesTimeout = setTimeout(callGetLegacyBalances, 5 * 1000);\n        };\n        callGetLegacyBalances()\n            .catch(_captureBackgroundException_);\n\n        // Update the atom connection status every 60 seconds\n        const callUpdateAtomStatus = async () => {\n            const { sdk } = this.props;\n            let delay = 60;\n            if (sdk !== null && sdk.getAddress() !== \"\") {\n                try {\n                    // tslint:disable-next-line: await-promise\n                    await this.props.actions.refreshAtomConnectionStatus(sdk);\n                } catch (error) {\n                    _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callUpdateAtomicStatus\" });\n                }\n            } else {\n                delay = 1;\n            }\n            this.callUpdateAtomStatusTimeout = setTimeout(callUpdateAtomStatus, delay * 1000);\n        };\n        callUpdateAtomStatus()\n            .catch(_captureBackgroundException_);\n\n        // Update the user's atomic balances every 5 seconds\n        const callGetAtomicBalances = async () => {\n            const { sdk } = this.props;\n            if (sdk.getAddress() && sdk.swapperd.isConnected()) {\n                try {\n                    // tslint:disable-next-line: await-promise\n                    await this.props.actions.getAtomicBalances(sdk);\n                } catch (error) {\n                    _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callGetAtomicBalances\" });\n                }\n            }\n            this.callGetAtomicBalancesTimeout = setTimeout(callGetAtomicBalances, 5 * 1000);\n        };\n        callGetAtomicBalances()\n            .catch(_captureBackgroundException_);\n\n        // Retrieve new hidden orders from the Orderbook every 30 seconds\n        const callHiddenOrders = async () => {\n            const { sdk } = this.props;\n            try {\n                // tslint:disable-next-line: await-promise\n                await this.props.actions.getHiddenOrders(sdk);\n            } catch (error) {\n                _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callHiddenOrders\" });\n            }\n            this.callHiddenOrdersTimeout = setTimeout(callHiddenOrders, 30 * 1000);\n        };\n        callHiddenOrders()\n            .catch(_captureBackgroundException_);\n\n        // Update balance history every 10 seconds\n        const callUpdateBalancesHistory = async (count: number) => {\n            const { sdk, balanceHistory } = this.props;\n            let newCount = count;\n            if (sdk.getAddress()) {\n                try {\n                    // See comment in `callCheckOrderStatuses` on count\n                    // tslint:disable-next-line: await-promise\n                    await this.props.actions.updateBalancesHistory(sdk, balanceHistory, (newCount % 60 === 1));\n                    newCount += 1;\n                } catch (error) {\n                    _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callUpdateBalancesHistory\" });\n                }\n            }\n            this.callUpdateBalancesHistoryTimeout = setTimeout(async () => callUpdateBalancesHistory(newCount), 10 * 1000);\n        };\n        callUpdateBalancesHistory(0)\n            .catch(_captureBackgroundException_);\n\n        // Retrieve market prices every minute\n        const callUpdatePrices = async () => {\n            let delay = 60;\n            try {\n                for (const pair of Pairs.valueSeq().toArray()) {\n                    const [price, percentChange] = await getPrice(pair.quoteToken, pair.baseToken);\n                    this.props.actions.updatePrices({ price, percentChange, pair: pair.code });\n                }\n            } catch (error) {\n                _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callUpdatePrices\" });\n                delay = 10;\n            }\n            this.callUpdatePricesTimeout = setTimeout(callUpdatePrices, delay * 1000);\n        };\n        callUpdatePrices()\n            .catch(_captureBackgroundException_);\n\n        // Check for status updates every 5 seconds\n        const callCheckOrderStatuses = async (count: number) => {\n            const { sdk, traderOrders } = this.props;\n            let newCount = count;\n            if (sdk.getAddress()) {\n                try {\n                    // Every 120 times (10 minutes) including the second time,\n                    // check all orders. The full check is done on the second\n                    // call so that statuses likely to change are checked\n                    // sooner (in the first call) but the full check is still\n                    // run early on (in the second call).\n                    // Successive full checks are called every 10 minutes in\n                    // case the window is not being refreshed.\n                    // tslint:disable-next-line: await-promise\n                    await this.props.actions.checkOrderStatuses(sdk, traderOrders, (newCount % 120 === 1));\n                    newCount += 1;\n                } catch (error) {\n                    _captureBackgroundException_(error, { description: \"Error in BackgroundTasks.callCheckOrderStatuses\" });\n                }\n            }\n            this.callCheckOrderStatusesTimeout = setTimeout(async () => callCheckOrderStatuses(newCount), 5 * 1000);\n        };\n        callCheckOrderStatuses(0)\n            .catch(_captureBackgroundException_);\n    }\n\n    /**\n     * storeSDKData fetches variables from the SDK including supported tokens,\n     * supported markets and fee constants.\n     */\n    private readonly storeSDKData = async (): Promise<void> => {\n        const { sdk } = this.props;\n        const [supportedTokens, supportedAtomicTokens, darknodeFeePercent, wrappingFeePercent, minEthTradeVolume, supportedMarkets] = await Promise.all([\n            sdk.fetchSupportedTokens(),\n            sdk.fetchSupportedAtomicTokens(),\n            sdk.fetchDarknodeFeePercent(),\n            sdk.fetchWrappingFeePercent(),\n            sdk.fetchMinEthTradeVolume(),\n            sdk.fetchMarkets(),\n        ]);\n\n        this.props.actions.storeSDKData({\n            supportedTokens: List(supportedTokens),\n            supportedAtomicTokens: List(supportedAtomicTokens),\n            darknodeFeePercent,\n            wrappingFeePercent,\n            minEthTradeVolume,\n            supportedMarkets: List(supportedMarkets),\n        });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    balanceHistory: state.balanceHistory.balanceHistory,\n    pendingAlerts: state.alert.pendingAlerts,\n    sdk: state.sdk.sdk,\n    traderOrders: state.traderBook.traderOrders,\n    wallet: state.trader.wallet,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        checkOrderStatuses,\n        getAtomicBalances,\n        getLegacyBalances,\n        getHiddenOrders,\n        lookForLogout,\n        refreshAtomConnectionStatus,\n        storeSDKData,\n        updateBalancesHistory,\n        updatePrices,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksClass);\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport { _captureComponentException_ } from \"../lib/errors\";\n\nclass ErrorBoundary extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    public componentDidCatch = (error: Error, errorInfo: React.ErrorInfo) => {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        _captureComponentException_(error, errorInfo);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div className={this.props.popup ? \"popup\" : \"\"}>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                    {this.props.popup ? <div className=\"popup--buttons\">\n                        <button onClick={this.reportFeedback}>Report feedback</button>\n                        <button onClick={this.props.onCancel}>Close</button>\n                    </div> : null\n                    }\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n\n    private readonly reportFeedback = () => {\n        Sentry.showReportDialog();\n    }\n}\n\ninterface Props {\n    /**\n     * Popup specifies whether or not the Error Boundary is being rendered in\n     * the popup controller.\n     */\n    popup?: boolean;\n\n    /**\n     * If `popup` is true, then onCancel should also be provided.\n     */\n    onCancel?(): void;\n}\n\ninterface State {\n    error: null | Error;\n    errorInfo: null | React.ErrorInfo;\n}\n\nexport const _catch_ = (\n    children: React.ReactNode,\n    options?: { popup: boolean; onCancel(): void }\n) => <ErrorBoundary popup={options && options.popup} onCancel={options && options.onCancel}>\n        {children}\n    </ErrorBoundary>;\n","import BigNumber from \"bignumber.js\";\n\nimport * as React from \"react\";\n\nimport { OrderedMap } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { OrderSettlement, TokenCode } from \"@renex/renex\";\n\nimport { Pairs, RenExAtomicTokens, RenExTokens, TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\n\n/**\n * BalanceBanner is a visual component for displaying user balances in a banner\n * format\n */\nclass BalanceBannerClass extends React.Component<Props, State> {\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { sdk, market, usableLegacyBalances, usableAtomicBalances, supportedTokens, supportedAtomicTokens } = this.props;\n        const pair = Pairs.get(market, undefined);\n        const atomic = pair !== undefined && pair.orderSettlement === OrderSettlement.RenExAtomic;\n        const tokens = RenExTokens(supportedTokens);\n        const atomicTokens = RenExAtomicTokens(supportedAtomicTokens);\n\n        return (\n            <div className=\"banner\">\n                <div className=\"container\">\n                    <div className=\"banner--details\">\n                        {atomic && sdk.swapperd.isConnected() ?\n                            <>\n                                <span>Swapperd balances:</span>\n                                <ul>\n                                    {this.listBalances(atomicTokens.toArray(), usableAtomicBalances)}\n                                </ul>\n                            </>\n                            :\n                            <>\n                                <span>Legacy balances:</span>\n                                <ul>\n                                    {this.listBalances(tokens.toArray(), usableLegacyBalances)}\n                                </ul>\n                            </>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * listBalances assembles the list of token balances\n     */\n    private listBalances(tokens: TokenCode[], balances: OrderedMap<TokenCode, BigNumber | null>): React.ReactNode[] {\n        const list: React.ReactNode[] = [];\n        for (const token of tokens) {\n            const balance = balances.get(token, null);\n            const balanceText = (balance !== null) ? balance.toFixed() : \"-\";\n\n            const { symbol, icon } = TokenDetails.get(token, UnknownToken);\n\n            // tslint:disable-next-line:non-literal-require\n            const image = require(`../tokens/${icon}`);\n\n            list.push(\n                <li key={token}>\n                    {/* tslint:disable-next-line: react-a11y-anchors */}\n                    <a><img alt=\"\" role=\"presentation\" src={image} /> {balanceText} {symbol}</a>\n                </li>\n            );\n        }\n\n        return list;\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    supportedTokens: state.sdk.supportedTokens,\n    supportedAtomicTokens: state.sdk.supportedAtomicTokens,\n    market: state.inputs.market,\n    usableLegacyBalances: state.trader.usableLegacyBalances,\n    usableAtomicBalances: state.trader.usableAtomicBalances,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const BalanceBanner = connect(mapStateToProps, mapDispatchToProps)(BalanceBannerClass);\n","import * as React from \"react\";\n\n/**\n * Heading is a visual component for displaying a title above another component\n */\nexport class Heading extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { title, description } = this.props;\n\n        return (\n            <div className=\"heading\">\n                <h1 className=\"heading--title\">{title}</h1>\n                {description &&\n                    <h2 className=\"heading--description\">({description})</h2>\n                }\n            </div>\n        );\n    }\n}\n\ninterface Props {\n    title: React.ReactNode | string;\n    description?: React.ReactNode | string;\n}\n\ninterface State {\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { BalanceAction, TransactionStatus } from \"@renex/renex\";\n\nimport { Heading } from \"./Heading\";\nimport { Loading } from \"./Loading\";\n\nimport { getTimeMagnitude, naturalTime, TimeMagnitude } from \"../lib/conversion\";\nimport { TokenDetails, UnknownToken } from \"../lib/market\";\nimport { networkData } from \"../lib/network\";\nimport { ApplicationData } from \"../reducers/types\";\n\n/**\n * BalanceHistory is a visual component for displaying previous deposits and\n * withdrawals\n */\nclass BalanceHistoryClass extends React.Component<Props, State> {\n\n    /**\n     * highlightTimeout is used to time the highlighting of the most recent\n     * balance history item.\n     */\n    public highlightTimeout: NodeJS.Timer | undefined;\n\n    /**\n     * datesRerenderTimeout is used to update the balance history item dates\n     */\n    public datesRerenderTimeout: NodeJS.Timer | undefined;\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            highlightLatest: false,\n            receivedBalances: false,\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props): void {\n        // Highlight the latest item if it was just added.\n        if (this.props.balanceHistory.size < nextProps.balanceHistory.size) {\n            if (this.state.receivedBalances) {\n                this.setState({ highlightLatest: true });\n\n                if (this.highlightTimeout) { clearTimeout(this.highlightTimeout); }\n                this.highlightTimeout = setTimeout(\n                    () => {\n                        this.setState({ highlightLatest: false });\n                    },\n                    3 * 1000\n                );\n            } else {\n                this.setState({ receivedBalances: true });\n            }\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.highlightTimeout) { clearTimeout(this.highlightTimeout); }\n        if (this.datesRerenderTimeout) { clearTimeout(this.datesRerenderTimeout); }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { balanceHistory } = this.props;\n        let relevantRows = null;\n        if (balanceHistory.size > 0) {\n            // Find the most precise time being shown (seconds, minutes, hours...)\n            // and rerender to ensure that these times are updated\n            const magnitude = balanceHistory\n                .valueSeq()\n                .toArray()\n                .map((value: BalanceAction) => getTimeMagnitude(value.time))\n                .reduce((val: number, min: number) => Math.min(val, min), TimeMagnitude.Day);\n\n            if (this.datesRerenderTimeout) { clearTimeout(this.datesRerenderTimeout); }\n            this.datesRerenderTimeout = setTimeout(\n                () => {\n                    this.forceUpdate();\n                },\n                magnitude / 2\n            );\n\n            relevantRows = this.generateRows();\n        }\n        return (\n            <div className=\"section history\">\n                <div className=\"container\">\n                    <Heading title=\"Recent legacy deposits and withdrawals\" />\n                    <div className=\"table--wrapper\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    {/* If any fields are added/removed, the colSpan\n                                below must be modified to reflect this. */}\n                                    <th>Transaction Hash</th>\n                                    <th>Date</th>\n                                    <th>Action</th>\n                                    <th>Amount</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {relevantRows !== null ?\n                                    relevantRows // Output relevant rows\n                                    :\n                                    <tr>\n                                        <td colSpan={4}>No transactions</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * generateRows is used to assemble the rows in the table\n     */\n    private generateRows(): Array<React.ReactNode | null> | null {\n        const { balanceHistory } = this.props;\n        const { highlightLatest } = this.state;\n        let relevantRows = false;\n\n        const rows = balanceHistory\n            .valueSeq()\n            .toArray()\n            .reverse()\n            .map((balanceAction: BalanceAction, key: number) => {\n                relevantRows = true;\n                const TX_URL = `${networkData.etherscan}/tx/${balanceAction.txHash}`;\n\n                const readableAmount = balanceAction.amount;\n\n                const currentMoment = moment(balanceAction.time * 1000)\n                    .format(\"MMMM Do YYYY, HH:mm:ss\");\n\n                const actionType = balanceAction.action\n                    .charAt(0)\n                    .toUpperCase()\n                    +\n                    balanceAction.action.slice(1);\n\n                return (\n                    <tr key={key} className={`${key === 0 && highlightLatest ? \"recent\" : \"\"} balanceAction--${balanceAction.status}`}>\n                        <td className=\"monospace\">\n                            {balanceAction.status === TransactionStatus.Pending ?\n                                < Loading /> :\n                                \"\"\n                            }\n                            <a href={TX_URL} rel=\"noopener noreferrer\" target=\"_blank\">{balanceAction.txHash}</a>\n                            {balanceAction.status === TransactionStatus.Failed ? <span className=\"red\"> (failed)</span> : \"\"}\n                            {balanceAction.status === TransactionStatus.Replaced ? <span className=\"red\"> (replaced)</span> : \"\"}\n                        </td>\n                        <td title={currentMoment}>\n                            <span>{naturalTime(balanceAction.time, { message: \"Just now\", suffix: \"ago\", countDown: false })}</span>\n                        </td>\n                        <td>{actionType}</td>\n                        <td>{readableAmount.toFixed()} {TokenDetails.get(balanceAction.token, UnknownToken).symbol}</td>\n                    </tr>\n                );\n            });\n        return relevantRows ? rows : null;\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    balanceHistory: state.balanceHistory.balanceHistory,\n    sdk: state.sdk.sdk,\n    updateIndex: state.balanceHistory.updateIndex,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\ninterface State {\n    /**\n     * highlightLatest indicates if a new balance history item is being\n     * highlighted.\n     */\n    highlightLatest: boolean;\n\n    /**\n     * receivedBalances is used to prevent highlighting old items when they\n     * are initially received from the SDK storage\n     */\n    receivedBalances: boolean;\n}\n\nexport const BalanceHistory = connect(mapStateToProps)(BalanceHistoryClass);\n","// tslint:disable: no-bitwise\n\nimport * as React from \"react\";\n\n// Modified from https://github.com/ethereum/blockies\n// License: https://github.com/ethereum/blockies#license (WTFPL)\n\ninterface Options {\n    /**\n     * The pixel resolution of the blocky. Default: 8.\n     */\n    size: number;\n\n    /**\n     * The canvas is scaled by this number to avoid aliasing. Default: 4.\n     */\n    scale: number;\n\n    /**\n     * Optional seed to generate blocky deterministically.\n     */\n    seed: string;\n\n    /**\n     * Optional foreground color. Default: Generated from seed.\n     */\n    color: string;\n\n    /**\n     * Optional background color. Default: Generated from seed.\n     */\n    bgColor: string;\n\n    /**\n     * Optional highlight color. Default: Generated from seed.\n     */\n    spotColor: string;\n}\n\nconst blockies = () => {\n    // The random number is a js implementation of the XOR-shift PRNG\n    const randSeed = [0, 0, 0, 0]; // XOR-shift: [x, y, z, w] 32 bit values\n\n    const seedRand = (seed: string) => {\n        for (let i = 0; i < randSeed.length; i++) {\n            randSeed[i] = 0;\n        }\n        for (let i = 0; i < seed.length; i++) {\n            randSeed[i % 4] = ((randSeed[i % 4] << 5) - randSeed[i % 4]) + seed.charCodeAt(i);\n        }\n    };\n\n    const rand = () => {\n        // based on Java's String.hashCode(), expanded to 4 32bit values\n\n        const t = randSeed[0] ^ (randSeed[0] << 11);\n\n        randSeed[0] = randSeed[1];\n        randSeed[1] = randSeed[2];\n        randSeed[2] = randSeed[3];\n\n        randSeed[3] = (randSeed[3] ^ (randSeed[3] >> 19) ^ t ^ (t >> 8));\n\n        return (randSeed[3] >>> 0) / ((1 << 31) >>> 0);\n    };\n\n    const createColor = () => {\n        // saturation is the whole color spectrum\n        const h = Math.floor(rand() * 360);\n        // saturation goes from 40 to 100, it avoids greyish colors\n        const s = `${(rand() * 60) + 40}%`;\n        // lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n        const l = `${((rand() + rand() + rand() + rand()) * 25)}%`;\n\n        return `hsl(${h},${s},${l})`;\n    };\n\n    const createImageData = (size: number) => {\n        const width = size; // Only support square icons for now\n        const height = size;\n\n        const dataWidth = Math.ceil(width / 2);\n        const mirrorWidth = width - dataWidth;\n\n        const data = [];\n        for (let y = 0; y < height; y++) {\n            let row = [];\n            for (let x = 0; x < dataWidth; x++) {\n                // this makes foreground and background color to have a 43% (1/2.3) probability\n                // spot color has 13% chance\n                row[x] = Math.floor(rand() * 2.3);\n            }\n            const r = row.slice(0, mirrorWidth);\n            r.reverse();\n            row = row.concat(r);\n\n            for (const rowItem of row) {\n                data.push(rowItem);\n            }\n        }\n\n        return data;\n    };\n\n    // tslint:disable-next-line:no-any\n    const buildOpts = (opts: Partial<Options>): Options => {\n        // tslint:disable-next-line:no-any\n        const newOpts: Partial<Options> = {};\n\n        newOpts.size = opts.size || 8;\n        newOpts.scale = opts.scale || 4;\n        // tslint:disable-next-line:insecure-random\n        newOpts.seed = opts.seed || Math.floor((Math.random() * Math.pow(10, 16)))\n            .toString(16);\n\n        seedRand(newOpts.seed);\n\n        newOpts.color = opts.color || createColor();\n        newOpts.bgColor = opts.bgColor || createColor();\n        newOpts.spotColor = opts.spotColor || createColor();\n\n        return newOpts as Options;\n    };\n\n    // tslint:disable-next-line:no-any\n    const renderIcon = (optsIn: Partial<Options>, canvas: HTMLCanvasElement) => {\n        const opts = buildOpts(optsIn || {});\n\n        const imageData = createImageData(opts.size);\n        const width = Math.sqrt(imageData.length);\n\n        canvas.width = canvas.height = opts.size * opts.scale;\n\n        const cc = canvas.getContext(\"2d\");\n        if (!cc) {\n            return canvas;\n        }\n        cc.fillStyle = opts.bgColor;\n        cc.fillRect(0, 0, canvas.width, canvas.height);\n        cc.fillStyle = opts.color;\n\n        for (let i = 0; i < imageData.length; i++) {\n\n            // if data is 0, leave the background\n            if (imageData[i]) {\n                const row = Math.floor(i / width);\n                const col = i % width;\n\n                // if data is 2, choose spot color, if 1 choose foreground\n                cc.fillStyle = (imageData[i] === 1) ? opts.color : opts.spotColor;\n\n                cc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n            }\n        }\n        return canvas;\n    };\n\n    const createIcon = (optsIn: Partial<Options>): HTMLCanvasElement => {\n        const opts = buildOpts(optsIn || {});\n        const canvas = document.createElement(\"canvas\");\n\n        renderIcon(opts, canvas);\n\n        return canvas;\n    };\n\n    return {\n        create: createIcon,\n        render: renderIcon\n    };\n};\n\n// tslint:enable\n\n/**\n * Blocky is a visual component for displaying Ethereum blockies - visual hashes\n * of ethereum addresses\n */\nexport class Blocky extends React.Component<Props, State> {\n\n    private canvas: HTMLCanvasElement | null | undefined;\n    private readonly blocky = blockies();\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.canvas = null;\n    }\n\n    public getOpts = (address: string) => ({\n        seed: address.toLowerCase(),\n        size: 8,\n        scale: 10,\n    })\n\n    public renderIcon = (address: string | null) => {\n        if (address) {\n            this.setState({ loading: false });\n            this.blocky.create(this.getOpts(address));\n            if (this.canvas) {\n                this.blocky.render(this.getOpts(address), this.canvas);\n            } else {\n                console.error(\"No canvas provided to Block component.\");\n            }\n        } else {\n            this.setState({ loading: true });\n        }\n    }\n\n    public componentWillReceiveProps(props: Props) {\n        this.renderIcon(props.address);\n    }\n\n    public componentDidMount() {\n        this.renderIcon(this.props.address);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { address } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className=\"blocky--outer\">\n                <div data-tip={address || \"...\"}>\n                    {loading ? <i className=\"fa fa-spin fa-spinner blocky__loading\" /> : <i />}\n                    <canvas className=\"blocky\" ref={this.setCanvas} />\n                </div>\n            </div>\n        );\n    }\n\n    private readonly setCanvas = (canvas: HTMLCanvasElement) => this.canvas = canvas;\n}\n\ninterface Props {\n    address: string | null;\n}\n\ninterface State {\n    loading: boolean;\n}\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link, RouteComponentProps, RouteProps, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setAlert } from \"../actions/alert/alertActions\";\nimport { logout } from \"../actions/trader/accountActions\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { Alert, AlertType, ApplicationData } from \"../reducers/types\";\nimport { Blocky } from \"./Blocky\";\n\n/**\n * Header is a visual component providing page branding and navigation.\n */\nclass HeaderClass extends React.Component<Props & RouteProps, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            copied: false,\n            dropdownVisible: false,\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { address, withMenu } = this.props;\n        const { dropdownVisible, copied } = this.state;\n        const route = this.props.location ? this.props.location.pathname : \"\";\n        const path = route.split(\"/\")[1];\n\n        const loggedIn = (address != null);\n\n        return (\n            <div className=\"header\">\n                <div className=\"container\">\n                    <Link to={loggedIn ? \"/exchange\" : \"/\"}>\n                        <div className=\"header--logo\" />\n                    </Link>\n                    {withMenu ?\n                        <ul className=\"header--menu\">\n                            <li className={path === \"exchange\" ? \"active\" : \"\"}><Link to=\"/exchange\"><span>Exchange</span></Link></li>\n                            <li className={path === \"orders\" ? \"active\" : \"\"}><Link to=\"/orders\"><span>Orders</span></Link></li>\n                            <li className={path === \"balances\" ? \"active\" : \"\"}><Link to=\"/balances\"><span>Balances</span></Link></li>\n                            <li className=\"header--logout\" role=\"button\" onClick={this.handleLogOut}><Link to=\"\"><span>Logout</span></Link></li>\n                            {address &&\n                                <li\n                                    className=\"header--account\"\n                                    onMouseEnter={this.showDropdown}\n                                    onMouseLeave={this.hideDropdown}\n                                >\n                                    <Blocky address={address} />\n                                    {dropdownVisible ?\n                                        <ul className=\"header--dropdown\">\n                                            <li role=\"button\" onClick={this.copyToClipboard}>\n                                                <span data-addr={address}>\n                                                    {copied ?\n                                                        <span>Copied</span>\n                                                        :\n                                                        <span>{address.substring(0, 8)}...{address.slice(-5)}</span>\n                                                    }\n                                                </span>\n                                            </li>\n                                            <li role=\"button\" onClick={this.handleLogOut}>Logout</li>\n                                        </ul> : null\n                                    }\n                                </li>\n                            }\n                        </ul> : null\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private readonly showDropdown = (): void => {\n        this.setState({ dropdownVisible: true, copied: false });\n    }\n\n    private readonly hideDropdown = (): void => {\n        this.setState({ dropdownVisible: false, copied: false });\n    }\n\n    private readonly copyToClipboard = (e: React.MouseEvent<HTMLElement>): void => {\n        const el = e.currentTarget.childNodes[0] as Element;\n        const address = el.getAttribute(\"data-addr\");\n        if (address) {\n            const dummy = document.createElement(\"input\");\n            document.body.appendChild(dummy);\n            dummy.setAttribute(\"value\", address);\n            dummy.select();\n            document.execCommand(\"copy\");\n            document.body.removeChild(dummy);\n        }\n        this.setState({ copied: true });\n    }\n\n    private readonly handleLogOut = async (): Promise<void> => {\n        const { sdk } = this.props;\n        try {\n            await this.props.actions.logout(sdk, { reload: true });\n        } catch (error) {\n            const message = \"Something went wrong while logging out.\";\n\n            this.props.actions.setAlert({\n                alert: new Alert({\n                    alertType: AlertType.Error,\n                    message,\n                })\n            });\n\n            _captureInteractionException_(error, {\n                description: message,\n                shownToUser: \"As alert\",\n            });\n        }\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    address: state.trader.address,\n    sdk: state.sdk.sdk,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        logout,\n        setAlert,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps>, RouteComponentProps {\n    withMenu: boolean;\n}\n\ninterface State {\n    dropdownVisible: boolean;\n    copied: boolean;\n}\n\nexport const Header = withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderClass));\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setMarket } from \"../actions/inputs/inputsActions\";\nimport { Pair, PairDetails, Pairs, TokenDetails } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\n\n/**\n * MarketBanner is a visual component for displaying market price changes in a\n * banner format\n */\nclass MarketBannerClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <div className=\"market\">\n                <div className=\"container\">\n                    <ul className=\"market--items\">\n                        {this.listPairs()}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n    private listPairs(): React.ReactNode[] {\n        const { marketPrices } = this.props;\n        let key = 0;\n        return Pairs\n            .map((pairDetails: PairDetails) => {\n                key += 1;\n                const pair = pairDetails.code;\n                const marketPrice = marketPrices.get(pair, undefined);\n                if (marketPrice === undefined || pair === Pair.WBTC_BTC) {\n                    return <div key={key} />;\n                }\n                const percentChange = marketPrice ? `${marketPrice.percentChange.toFixed(2)}%` : \"\";\n                const price = marketPrice ? marketPrice.price : \"\";\n                const fstDetails = TokenDetails.get(pairDetails.quoteToken, undefined);\n                const sndDetails = TokenDetails.get(pairDetails.baseToken, undefined);\n\n                if (!fstDetails || !sndDetails) {\n                    return <div key={key} />;\n                }\n\n                return (\n                    <li key={key} title={price.toString()}>\n                        {/* tslint:disable-next-line:react-this-binding-issue */}\n                        <Link to=\"/exchange\" onClick={this.updateMarket.bind(this, pair)}>\n                            <span>{`${sndDetails.symbol}/${fstDetails.symbol}`}:</span>\n                        </Link>\n                        <span className={`${marketPrice.percentChange < 0 ? \"negative\" : \"positive\"}`}>{percentChange}</span>\n                    </li>\n                );\n            }).valueSeq().toArray();\n    }\n\n    private updateMarket(market: Pair): void {\n        if (market !== this.props.market) {\n            this.props.actions.setMarket({ market });\n        }\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    market: state.inputs.market,\n    marketPrices: state.marketPrices.marketPrices,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setMarket,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n}\n\nexport const MarketBanner = connect(mapStateToProps, mapDispatchToProps)(MarketBannerClass);\n","import * as React from \"react\";\n\nimport { AtomicConnectionStatus, TokenCode } from \"@renex/renex\";\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { RenExAtomicTokens, TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData, LabelLevel } from \"../reducers/types\";\nimport { AtomicNotice } from \"./AtomicNotice\";\nimport { Heading } from \"./Heading\";\nimport { InfoLabel } from \"./InfoLabel\";\n\n/**\n * ViewAtomicBalances is a visual component for displaying the user's balances\n * held by the atomic-swap software, Atom\n */\nclass ViewAtomicBalancesClass extends React.Component<Props, State> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { atomConnectionStatus } = this.props;\n\n        const atomConnected = atomConnectionStatus === AtomicConnectionStatus.ConnectedUnlocked;\n\n        return (\n            <div className=\"section view\">\n                <div className=\"container\">\n                    <Heading title=\"Balances held by Swapperd\" />\n                    {!atomConnected ? <AtomicNotice /> :\n                        <div className=\"view--table table--wrapper\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Token</th>\n                                        <th>Address</th>\n                                        <th>Total Balance\n                                </th>\n                                        <th>\n                                            Usable Balance\n                                    <InfoLabel>The amount you have deposited, excluding balances locked in open orders.</InfoLabel>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.generateRows()}\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private generateRows(): React.ReactNode[] {\n        const list: React.ReactNode[] = [];\n        const { atomicAddresses, atomicBalances, usableAtomicBalances, supportedAtomicTokens } = this.props;\n        RenExAtomicTokens(supportedAtomicTokens)\n            .forEach((token: TokenCode) => {\n                const { name, symbol, icon } = TokenDetails.get(token, UnknownToken);\n\n                const address = atomicAddresses.get(token, undefined) || \"-\";\n\n                const balance = atomicBalances.get(token, undefined);\n                const balanceReadable = balance !== undefined && balance !== null ? `${balance.toFixed()} ${symbol}` : \"-\";\n\n                const usable = usableAtomicBalances.get(token, undefined);\n                const usableReadable = usable !== undefined && usable !== null ? `${usable.toFixed()} ${symbol}` : \"-\";\n\n                // let locked = balance.minus(usable);\n                // if (locked.isLessThan(0)) {\n                //     locked = new BigNumber(0);\n                // }\n\n                // tslint:disable-next-line:non-literal-require\n                const image = require(`../tokens/${icon}`);\n\n                list.push(\n                    <tr key={token}>\n                        <td>\n                            <img alt=\"\" role=\"presentation\" src={image} />\n                            <span>{`${name} `}</span>\n                        </td>\n                        <td className=\"monospace\">{address}</td>\n                        <td>\n                            {balanceReadable}\n                            {balance === null &&\n                                <InfoLabel level={LabelLevel.Warning}>Failed to retrieve total {symbol} balance.</InfoLabel>\n                            }\n                        </td>\n                        <td>\n                            {usableReadable}\n                            {usable === null &&\n                                <InfoLabel level={LabelLevel.Warning}>Failed to retrieve usable {symbol} balance.</InfoLabel>\n                            }\n                        </td>\n                    </tr >\n                );\n            });\n        return list;\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    atomicAddresses: state.trader.atomicAddresses,\n    atomicBalances: state.trader.atomicBalances,\n    usableAtomicBalances: state.trader.usableAtomicBalances,\n    atomConnectionStatus: state.trader.atomConnectionStatus,\n    supportedAtomicTokens: state.sdk.supportedAtomicTokens,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\ninterface State {\n}\n\nexport const ViewAtomicBalances = connect(mapStateToProps)(ViewAtomicBalancesClass);\n","import * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { ApplicationData } from \"../reducers/types\";\nimport { Heading } from \"./Heading\";\nimport { ViewBalancesTable } from \"./ViewBalancesTable\";\n\n/**\n * ViewBalances is a visual component for displaying the user's Ether and token\n * balances\n */\nclass ViewBalancesClass extends React.Component<Props, State> {\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <div className=\"section view\">\n                <div className=\"container\">\n                    <Heading title=\"Your legacy balances\" />\n                    <ViewBalancesTable />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (_state: ApplicationData) => ({\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\ninterface State {\n}\n\nexport const ViewBalances = connect(mapStateToProps)(ViewBalancesClass);\n","import * as React from \"react\";\n\nimport { BalanceBanner } from \"../../components/BalanceBanner\";\nimport { BalanceHistory } from \"../../components/BalanceHistory\";\nimport { Header } from \"../../components/Header\";\nimport { MarketBanner } from \"../../components/MarketBanner\";\nimport { ViewAtomicBalances } from \"../../components/ViewAtomicBalances\";\nimport { ViewBalances } from \"../../components/ViewBalances\";\nimport { _catch_ } from \"../ErrorBoundary\";\n\n/**\n * Balances is a page whose principal components allows the user to withdraw and\n * deposit funds, and see their previous balance actions.\n */\nexport const Balances: React.StatelessComponent = () =>\n    <div className=\"balances\">\n        {_catch_(<MarketBanner />)}\n        {_catch_(<Header withMenu={true} />)}\n        {_catch_(<BalanceBanner />)}\n\n        <div className=\"content\">\n            {_catch_(<ViewAtomicBalances />)}\n            {_catch_(<ViewBalances />)}\n            {_catch_(<BalanceHistory />)}\n        </div>\n    </div>;\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { Heading } from \"./Heading\";\n\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { SubmittedTradesTable } from \"./SubmittedTradesTable\";\n\n// This is the number of orders that will be displayed if the 'recent' prop\n// is set.\nexport const RECENT_AMOUNT = 5;\n\nclass SubmittedTradesClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { recent } = this.props;\n        const { traderOrders } = this.props;\n\n        const title = `Your ${recent ? \"latest \" : \"\"}submitted orders`;\n\n        return (\n            <div className=\"section trades\">\n                <div className=\"container\">\n                    <Heading title={title} />\n                    <SubmittedTradesTable amountToShow={recent ? RECENT_AMOUNT : undefined} />\n                    {recent && traderOrders && traderOrders.size - RECENT_AMOUNT > 0 &&\n                        <p><Link to=\"/orders\">View {traderOrders.size - RECENT_AMOUNT} more</Link></p>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    traderOrders: state.traderBook.traderOrders,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n    recent?: boolean;\n}\n\ninterface State {\n}\n\nexport const SubmittedTrades = connect(mapStateToProps, mapDispatchToProps)(SubmittedTradesClass);\n","import * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\nimport { Link } from \"react-router-dom\";\n\nimport { TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { TraderOrderRecord } from \"../reducers/typesSdk\";\nimport { Heading } from \"./Heading\";\nimport { RECENT_AMOUNT } from \"./SubmittedTrades\";\n\n/**\n * ExecutedTrades is a visual component for displaying the execution details of\n * a user's executed trades\n */\nclass ExecutedTradesClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            relevantRows: 0\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { traderOrders } = this.props;\n\n        const executedOrders = traderOrders\n            .valueSeq()\n            .toArray()\n            .filter((traderOrder: TraderOrderRecord) => {\n                if (!traderOrder.matchDetails) {\n                    return false;\n                }\n\n                return true;\n            });\n\n        const recent: boolean = (this.props.recent === true);\n\n        let relevantRows: React.ReactNode[] | null = null;\n        if (executedOrders.length > 0) {\n            relevantRows = this.generateRows(executedOrders);\n        }\n\n        const title = `Your ${recent ? \"latest \" : \"\"}executed orders`;\n\n        return (\n            <div className=\"section trades\">\n                <div className=\"container\">\n                    <Heading title={title} />\n                    <div className=\"trades--table table--wrapper\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    {/* If any fields are added/removed, the colSpan\n                                    below must be modified to reflect this. */}\n                                    <th>Order ID</th>\n                                    <th>Match ID</th>\n                                    {/* <th>Match Price</th> */}\n                                    <th>Spent Amount</th>\n                                    <th>Receive Amount</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {relevantRows !== null ?\n                                    recent ? relevantRows.slice(0, RECENT_AMOUNT) : relevantRows\n                                    :\n                                    <tr>\n                                        <td colSpan={4}>No executed orders</td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                    {recent && relevantRows !== null && relevantRows.length - RECENT_AMOUNT > 0 ?\n                        <p><Link to=\"/orders\">View {relevantRows.length - RECENT_AMOUNT} more</Link></p> :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private generateRows(executedOrders: TraderOrderRecord[]): React.ReactNode[] | null {\n        return executedOrders\n            .reverse()\n            .map((order: TraderOrderRecord, key: number) => {\n                const matchDetails = order.matchDetails;\n\n                if (matchDetails === undefined) {\n                    return <></>;\n                }\n\n                const receivedTokenDetails = TokenDetails.get(matchDetails.receivedToken, UnknownToken);\n                const spentTokenDetails = TokenDetails.get(matchDetails.spentToken, UnknownToken);\n\n                const receiveAmountReadable = matchDetails.receivedVolume;\n                const paidAmountReadable = matchDetails.spentVolume.plus(matchDetails.fee);\n                // const feeReadable = balanceToReadable(matchDetails.fee, matchDetails.spentToken);\n\n                return <tr key={key}>\n                    <td><span className=\"monospace\">{matchDetails.orderID}</span></td>\n                    <td className=\"match\"><span className=\"monospace\">{matchDetails.matchedID}</span></td>\n                    {/* <td className=\"center price\"><span>{`${pricepoint} ${fstSymbol} to ${sndSymbol}`}</span></td> */}\n                    <td className=\"center volume\"><span>{`${paidAmountReadable} ${spentTokenDetails.symbol}`}</span></td>\n                    <td className=\"center volume\"><span>{`${receiveAmountReadable} ${receivedTokenDetails.symbol}`}</span></td>\n                </tr>;\n            });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    traderOrders: state.traderBook.traderOrders,\n    sdk: state.sdk.sdk,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n    recent?: boolean;\n}\n\ninterface State {\n    relevantRows: number;\n}\n\nexport const ExecutedTrades = connect(mapStateToProps)(ExecutedTradesClass);\n","import * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { Order, OrderStatus } from \"@renex/renex\";\n\nimport { Heading } from \"./Heading\";\nimport { Loading } from \"./Loading\";\n\nimport { ApplicationData } from \"../reducers/types\";\n\nconst NUMBER_OF_ORDERS = 10;\n\nconst HiddenOrderStatusDisplay = {\n    [OrderStatus.NOT_SUBMITTED]: \"-\",\n    [OrderStatus.OPEN]: \"Open\",\n    [OrderStatus.CONFIRMED]: \"Matched\",\n    [OrderStatus.CANCELED]: \"Canceled\",\n    [OrderStatus.SETTLED]: \"Settled\",\n};\n/**\n * HiddenOrderbook is a visual component for displaying a list of orders from\n * the Republic Protocol darkpool\n */\nclass HiddenOrderbookClass extends React.Component<Props> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { hiddenOrders } = this.props;\n        return (\n            <div className=\"section orderbook\">\n                <div className=\"container\">\n                    <Heading title=\"Hidden orderbook\" description={`Last ${NUMBER_OF_ORDERS} orders`} />\n                    {hiddenOrders ?\n                        <div className=\"table--wrapper\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Order ID</th>\n                                        <th className=\"center\">Status</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {hiddenOrders.size > 0 ?\n                                        hiddenOrders\n                                            .reverse()\n                                            .toArray()\n                                            .map((order: Order) =>\n                                                <tr key={order.id}>\n\n                                                    <td className=\"truncate\"><span className=\"monospace\">{order.id}</span></td>\n                                                    <td className=\"center\">{HiddenOrderStatusDisplay[order.status]}</td>\n                                                </tr>\n                                            ) :\n                                        <tr />\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        :\n                        <Loading />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    hiddenOrders: state.hiddenBook.hiddenOrders,\n    sdk: state.sdk.sdk,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\nexport const HiddenOrderbook = connect(mapStateToProps)(HiddenOrderbookClass);\n","import BigNumber from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nimport { TokenCode } from \"@renex/renex\";\nimport { TokenDetails, UnknownToken } from \"./market\";\n\n/**\n * Convert a token amount to the readable amount using the token decimals.\n * @param balance The balance represented as a BigNumber.\n * @param token The token used to represented the balance.\n */\nexport const balanceToReadable = (balanceIn: BN, token: TokenCode): BigNumber => {\n    const balance = balanceIn === undefined ? new BN(0) : balanceIn;\n\n    // If token is not found, use `UnknownToken` which has 0 decimals\n    // i.e. the balance is returned as it is\n    const tokenDetails = TokenDetails.get(token, UnknownToken);\n\n    let balanceBN = new BigNumber(balance.toString());\n\n    const e = new BigNumber(10).pow(tokenDetails.digits);\n    balanceBN = balanceBN.div(e);\n\n    return balanceBN;\n};\n\n/**\n * Convert a readable amount to the token amount using the token decimals.\n * @param readable The amount represented as a string.\n * @param token The token used to represent the amount.\n */\nexport const readableToBalance = (readableIn: string, token: TokenCode): BN => {\n    const readable = readableIn === undefined || readableIn === \"\" ? \"0\" : readableIn;\n\n    // If token is not found, use `UnknownToken` which has 0 decimals\n    // i.e. the balance is returned as it is\n    const tokenDetails = TokenDetails.get(token, UnknownToken);\n\n    const e = new BigNumber(10).pow(tokenDetails.digits);\n\n    return new BN(new BigNumber(readable)\n        .times(e)\n        .integerValue(BigNumber.ROUND_FLOOR)\n        .toFixed());\n};\n\n/**\n * Removes excessive digits from a value for a given currency. Primarily used\n * for user inputs.\n * @param amount The amount to be checked for excessive digits.\n * @param token The token the digits should be checked against.\n */\nexport const removeExcessDigits = (amount: BigNumber, token: TokenCode): BigNumber => {\n    const value = readableToBalance(amount.toFixed(), token);\n    return new BigNumber(balanceToReadable(value, token));\n};\n","import React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { FieldProps } from \"formik\";\n\nimport { InfoLabel } from \"./InfoLabel\";\n\nexport class NewOrderInputField extends React.Component<FieldProps<HTMLInputElement> & Props, HTMLInputElement> {\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const {\n            form: { errors, dirty },\n            title, ticker, disabled, hint, handleChange, handleBlur, notice\n        } = this.props;\n        const { onBlur, onChange, ...field } = this.props.field;\n\n        return (\n            <div className=\"order--input-wrapper\">\n                <label>\n                    <div className=\"order--title\">\n                        <span>{title}</span>\n                        {hint && <InfoLabel>{hint}</InfoLabel>}\n                    </div>\n                    <span className={`order--input-item${disabled ? \" disabled\" : \"\"}`}>\n                        <input\n                            {...field}\n                            type=\"number\"\n                            step={this.calculateStep()}\n                            disabled={disabled}\n                            placeholder=\"0\"\n                            min={0}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                        <span>{ticker}</span>\n                    </span>\n                </label>\n                {!!errors[field.name] && dirty && (\n                    <p className=\"order--warning\">\n                        {errors[field.name]}\n                    </p>\n                )}\n                {!!notice && !errors[field.name] && (\n                    <p className=\"order--message\">\n                        {notice}\n                    </p>\n                )}\n            </div>\n        );\n    }\n\n    private calculateStep(): string {\n        const { stepFunction, field } = this.props;\n        if (stepFunction) {\n            return stepFunction(new BigNumber(field.value || \"0\"));\n        }\n        return \"\";\n    }\n\n}\n\ninterface Props {\n    ticker: string;\n    title: React.ReactNode;\n    disabled?: boolean;\n    hint?: React.ReactNode;\n    notice?: React.ReactNode;\n    stepFunction?(value: BigNumber): string;\n    handleChange?(e: React.ChangeEvent<HTMLInputElement>): void;\n    handleBlur?(e: React.ChangeEvent<HTMLInputElement>): void;\n}\n","import React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { Field, FieldProps, Form, FormikProps } from \"formik\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { OrderSettlement, OrderSide } from \"@renex/renex\";\n\nimport { Loading } from \"./Loading\";\n\nimport { setOrder } from \"../actions/inputs/inputsActions\";\nimport { removeExcessDigits } from \"../lib/balances\";\nimport { getPriceStep, getVolumeStep } from \"../lib/conversion\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { Pair, Pairs, TokenDetail, TokenDetails } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { InfoLabel } from \"./InfoLabel\";\nimport { NewOrderInputField } from \"./NewOrderInputField\";\nimport { NewOrderInputsValues } from \"./NewOrderInputs\";\n\n// tslint:disable: jsx-no-lambda\nclass NewOrderInputFormClass extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            priorityTokenDetails: undefined,\n            nonPriorityTokenDetails: undefined,\n            feeToken: undefined,\n            notice: undefined,\n        };\n    }\n\n    public componentDidMount(): void {\n        // Validate fields on load\n        const { values, setValues } = this.props;\n        const newState = this.calculateNewState(values);\n        setValues(newState);\n\n        this.preRender(this.props);\n    }\n\n    public componentWillUnmount(): void {\n        // Save inputs when the user navigates away from the page\n        const { values, side } = this.props;\n        this.props.actions.setOrder({\n            orderInputs: {\n                side,\n                pricepoint: values.pricepoint,\n                volume: values.volume,\n                minVolume: values.minVolume,\n            }\n        });\n    }\n\n    public async componentWillReceiveProps(nextProps: Props): Promise<void> {\n        const { market, side, allOrNothing, initialMarketPrice, validateForm, values } = this.props;\n\n        // Update the market price if the market or market price has changed\n        const marketChanged = market !== nextProps.market;\n        const initialMarketPriceChanged = initialMarketPrice !== nextProps.initialMarketPrice;\n        const price = new BigNumber(values.pricepoint || \"0\");\n        const minValueNotSet = !values.minVolume && !nextProps.values.minVolume;\n        if (minValueNotSet || marketChanged || initialMarketPriceChanged && price.lte(new BigNumber(0))) {\n            nextProps.values.pricepoint = nextProps.initialMarketPrice;\n            const pairDetails = Pairs.get(nextProps.market, undefined);\n            const pricepointBigNumber = new BigNumber(nextProps.initialMarketPrice);\n            if (pairDetails && !pricepointBigNumber.isZero()) {\n                const absoluteMinVolume = nextProps.calculateAbsoluteMinTradeVolume(\n                    pairDetails.quoteToken,\n                    pairDetails.baseToken,\n                    pricepointBigNumber\n                );\n                nextProps.values.minVolume = new BigNumber(absoluteMinVolume).toFixed();\n            }\n        }\n\n        // Match minVolume to volume when All or Nothing is enabled\n        const allOrNothingEnabled = !allOrNothing && nextProps.allOrNothing;\n        if (allOrNothingEnabled) {\n            nextProps.values.minVolume = nextProps.values.volume;\n        }\n\n        // Re-validate form\n        const sideChanged = side !== nextProps.side;\n        if (sideChanged || marketChanged || allOrNothing !== nextProps.allOrNothing) {\n            await validateForm();\n        }\n\n        this.preRender(nextProps);\n    }\n\n    // The code that used to be at the start of render has been moved here\n    public preRender = (props: Props) => {\n        const { values, settlementType, market, side } = props;\n\n        const marketDetails = Pairs.get(market, undefined);\n        if (!marketDetails) { return; }\n\n        const priorityTokenDetails = TokenDetails.get(marketDetails.quoteToken, undefined);\n        const nonPriorityTokenDetails = TokenDetails.get(marketDetails.baseToken, undefined);\n\n        if (!priorityTokenDetails || !nonPriorityTokenDetails) { return; }\n\n        let feeToken;\n        let notice: string;\n        if (settlementType === OrderSettlement.RenExAtomic) {\n            feeToken = side === OrderSide.BUY ? priorityTokenDetails : nonPriorityTokenDetails;\n            const sellAmount = new BigNumber(side === OrderSide.BUY ? values.priorityVolume : values.volume);\n            notice = sellAmount.gt(new BigNumber(0)) ? `You will spend ${sellAmount.plus(this.feeAmount()).toFixed()} ${feeToken.symbol} after fees.` : \"\";\n        } else {\n            feeToken = side === OrderSide.BUY ? nonPriorityTokenDetails : priorityTokenDetails;\n            const buyAmount = new BigNumber(side === OrderSide.BUY ? values.volume : values.priorityVolume);\n            notice = buyAmount.gt(new BigNumber(0)) ? `You will receive ${buyAmount.minus(this.feeAmount()).toFixed()} ${feeToken.symbol} after fees.` : \"\";\n        }\n\n        this.setState({\n            priorityTokenDetails,\n            nonPriorityTokenDetails,\n            notice,\n            feeToken,\n        });\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { side, feePercent, isSubmitting, isValid } = this.props;\n        const { feeToken, nonPriorityTokenDetails } = this.state;\n\n        if (!feeToken || !nonPriorityTokenDetails) {\n            return <></>;\n        }\n\n        return (\n            <Form>\n                <div className=\"order--inputs\">\n                    <Field\n                        name=\"pricepoint\"\n                        render={this.pricepointRender}\n                    />\n                    <Field\n                        name=\"volume\"\n                        render={this.volumeRender}\n                    />\n                    <Field\n                        name=\"minVolume\"\n                        render={this.renderMinVolume}\n                    />\n                    <Field\n                        name=\"priorityVolume\"\n                        render={this.renderPriorityVolume}\n                    />\n                </div>\n                <div>\n                    <div>\n                        <span>Fee: {this.feeAmount().toFixed()} {feeToken.symbol}</span>\n                        <InfoLabel>Fees are set to {feePercent.times(100).toFixed()}% of the order volume.</InfoLabel>\n                    </div>\n                </div>\n                <div className=\"order--footer\">\n                    <button className={`order--button ${isSubmitting ? \"submitting\" : \"\"}`} type=\"submit\" disabled={!isValid || isSubmitting}>\n                        <span>\n                            {\n                                isSubmitting ? <Loading /> :\n                                    <>{side === OrderSide.BUY ? \"Buy\" : \"Sell\"} {nonPriorityTokenDetails.symbol}</>\n                            }\n                        </span>\n                    </button>\n                </div>\n            </Form>\n        );\n    }\n\n    private readonly pricepointRender = (field: FieldProps) => {\n        const { market, initialMarketPrice } = this.props;\n\n        const marketDetails = Pairs.get(market, undefined);\n        if (!marketDetails) { return <></>; }\n\n        const priorityTokenDetails = TokenDetails.get(marketDetails.quoteToken, undefined);\n        if (!priorityTokenDetails) { return <></>; }\n\n        const prioritySymbol = priorityTokenDetails.symbol;\n\n        return <NewOrderInputField\n            {...field}\n            title={<>\n                Price (<span\n                    role=\"button\"\n                    className=\"order--option\"\n                    // tslint:disable-next-line:react-this-binding-issue\n                    onClick={() => {\n                        this.setAndUpdateValues(field.field.name, initialMarketPrice);\n                    }}\n                >\n                    Market\n                </span>)\n            </>}\n            disabled={marketDetails.fixedPrice !== undefined}\n            ticker={prioritySymbol}\n            stepFunction={getPriceStep}\n            handleChange={this.handleChange}\n            handleBlur={this.handleBlur}\n        />;\n    }\n\n    private readonly volumeRender = (field: FieldProps) => {\n        const { side, settlementType } = this.props;\n        const { nonPriorityTokenDetails, notice } = this.state;\n\n        if (!nonPriorityTokenDetails) {\n            return <></>;\n        }\n\n        return <NewOrderInputField\n            {...field}\n            title={<>\n                {side === OrderSide.BUY ? \"Receive\" : \"Spend\"} (<span role=\"button\" className=\"order--option\" onClick={this.fillVolume}>Max</span>)\n            </>}\n            ticker={nonPriorityTokenDetails.symbol}\n            stepFunction={getVolumeStep}\n            handleChange={this.handleChange}\n            handleBlur={this.handleBlur}\n            notice={settlementType === OrderSettlement.RenExAtomic ? (side === OrderSide.SELL && notice) : (side === OrderSide.BUY && notice)}\n        />;\n    }\n\n    private readonly renderMinVolume = (field: FieldProps) => {\n        const { allOrNothing } = this.props;\n        const { nonPriorityTokenDetails } = this.state;\n\n        if (!nonPriorityTokenDetails) {\n            return <></>;\n        }\n\n        return <NewOrderInputField\n            {...field}\n            title=\"Minimum Fill Amount\"\n            ticker={nonPriorityTokenDetails.symbol}\n            hint=\"The minimum volume you are willing to be matched with. This does not affect price but higher minimum volumes reduce the chances of order match.\"\n            disabled={allOrNothing}\n            stepFunction={getVolumeStep}\n            handleChange={this.handleChange}\n            handleBlur={this.handleBlur}\n        />;\n    }\n\n    private readonly renderPriorityVolume = (field: FieldProps) => {\n        const { side, settlementType } = this.props;\n        const { priorityTokenDetails, notice } = this.state;\n\n        if (!priorityTokenDetails) {\n            return <></>;\n        }\n\n        return <NewOrderInputField\n            {...field}\n            title={side === OrderSide.BUY ? \"Spend\" : \"Receive\"}\n            ticker={priorityTokenDetails.symbol}\n            disabled={true}\n            stepFunction={getVolumeStep}\n            notice={settlementType === OrderSettlement.RenExAtomic ? (side === OrderSide.BUY && notice) : (side === OrderSide.SELL && notice)}\n        />;\n    }\n\n    private calculateNewState(oldState: NewOrderInputsValues, name?: string, valueIn?: string): NewOrderInputsValues {\n        let newState = { ...oldState };\n\n        if (name) {\n            // If value is undefined, set it to previous state\n            let value = (valueIn === undefined) ? oldState[name] : valueIn;\n\n            // If the value is in scientific notation, fix it\n            if (value.toLowerCase().indexOf(\"e\") !== -1) {\n                value = new BigNumber(value).toFixed();\n            }\n\n            newState = { ...newState, [name]: value };\n        }\n        const { pricepoint, volume } = newState;\n\n        // Match minVolume to volume if we're an All Or Nothing trade\n        if (this.props.allOrNothing) {\n            newState.minVolume = newState.volume;\n        }\n\n        // Calculate the new priority volume\n        const price = new BigNumber(pricepoint || \"0\");\n        const nonPriorityVolume = new BigNumber(volume || \"0\");\n        const priorityVolume = nonPriorityVolume.times(price);\n        newState.priorityVolume = priorityVolume.toFixed();\n\n        return newState;\n    }\n\n    private coerceValues(state: NewOrderInputsValues, name: string): NewOrderInputsValues {\n        const { sdk, market, initialMarketPrice, calculateAbsoluteMinTradeVolume, side } = this.props;\n        const { normalizePrice, normalizeVolume } = sdk.utils;\n\n        const pairDetails = Pairs.get(market, undefined);\n        if (!pairDetails) {\n            return state;\n        }\n\n        const pricepointBigNumber = new BigNumber(normalizePrice(new BigNumber(state.pricepoint || \"0\"), side === OrderSide.SELL));\n        const volumeBigNumber = new BigNumber(normalizeVolume(removeExcessDigits(new BigNumber(state.volume || \"0\"), pairDetails.baseToken)));\n        const minVolumeBigNumber = new BigNumber(normalizeVolume(removeExcessDigits(new BigNumber(state.minVolume || \"0\"), pairDetails.baseToken)));\n        const absoluteMinVolume = calculateAbsoluteMinTradeVolume(pairDetails.quoteToken, pairDetails.baseToken, pricepointBigNumber);\n\n        const newState = { ...state };\n        switch (name) {\n            case \"pricepoint\":\n                // Reset price to default if price is empty or zero\n                if (pricepointBigNumber.lte(new BigNumber(0))) {\n                    newState.pricepoint = initialMarketPrice;\n                } else {\n                    // Set pricepoint to normalized price\n                    newState.pricepoint = pricepointBigNumber.toFixed();\n                }\n                break;\n            case \"volume\":\n                // Set volume to normalized volume\n                newState.volume = volumeBigNumber.toFixed();\n                // Coerce minimum volume if volume < min volume\n                if (volumeBigNumber.lt(minVolumeBigNumber)) {\n                    newState.minVolume = BigNumber\n                        .max(volumeBigNumber, absoluteMinVolume)\n                        .toFixed();\n                }\n                break;\n            case \"minVolume\":\n                // Set min volume to normalized volume\n                newState.minVolume = minVolumeBigNumber.toFixed();\n\n                // Enforce absolute minimum volume\n                if (minVolumeBigNumber.lt(absoluteMinVolume)) {\n                    newState.minVolume = absoluteMinVolume.toFixed();\n                }\n\n                // Coerce volume if min volume > volume\n                if (minVolumeBigNumber.gt(volumeBigNumber)) {\n                    newState.volume = newState.minVolume;\n                }\n            default:\n                const description = `Unexpected value name ${name} in coerceValues`;\n                _captureInteractionException_(\n                    new Error(description),\n                    { description, shownToUser: \"No\" },\n                );\n        }\n        return this.calculateNewState(newState, name);\n    }\n\n    private readonly feeAmount = (): BigNumber => {\n        const { values, side, feePercent, settlementType } = this.props;\n        const nonPriorityVolume = new BigNumber(values.volume || \"0\");\n        const priorityVolume = new BigNumber(values.priorityVolume || \"0\");\n        let feeAmount;\n        if (settlementType === OrderSettlement.RenExAtomic) {\n            feeAmount = side === OrderSide.BUY ? priorityVolume.times(feePercent) : nonPriorityVolume.times(feePercent);\n        } else {\n            feeAmount = side === OrderSide.BUY ? nonPriorityVolume.times(feePercent) : priorityVolume.times(feePercent);\n        }\n        return feeAmount;\n    }\n\n    private readonly fillVolume = (): void => {\n        const { market, values, side, settlementType } = this.props;\n        const usableLegacyBalances = settlementType === OrderSettlement.RenEx ? this.props.usableLegacyBalances : this.props.usableAtomicBalances;\n        const { pricepoint } = values;\n        const marketDetails = Pairs.get(market, undefined);\n        if (!marketDetails) {\n            return;\n        }\n\n        const priorityToken = marketDetails.quoteToken;\n        const nonPriorityToken = marketDetails.baseToken;\n\n        let nonPriorityVolume = new BigNumber(0);\n        if (side === OrderSide.BUY) {\n            const price = new BigNumber(pricepoint || \"0\");\n            if (!price.isZero()) {\n                const priorityVolume = usableLegacyBalances.get(priorityToken) || new BigNumber(0);\n                nonPriorityVolume = priorityVolume.div(price);\n            }\n        } else {\n            nonPriorityVolume = usableLegacyBalances.get(nonPriorityToken) || new BigNumber(0);\n        }\n        this.setAndUpdateValues(\"volume\", nonPriorityVolume.toFixed(), true);\n    }\n\n    private readonly handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = e.target;\n        this.setAndUpdateValues(name, value);\n    }\n\n    private readonly handleBlur = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = e.target;\n        this.setAndUpdateValues(name, value, true);\n    }\n\n    private setAndUpdateValues(name: string, value: string, blur?: boolean): void {\n        const { setValues, values } = this.props;\n        let newState = this.calculateNewState(values, name, value);\n        // Coerce values if necessary\n        if (blur) {\n            newState = this.coerceValues(newState, name);\n        }\n        setValues(newState);\n    }\n\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    feePercent: state.sdk.darknodeFeePercent,\n    usableLegacyBalances: state.trader.usableLegacyBalances,\n    usableAtomicBalances: state.trader.usableAtomicBalances,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setOrder,\n    }, dispatch)\n});\n\ninterface FormProps extends FormikProps<NewOrderInputsValues> {\n    market: Pair;\n    side: OrderSide;\n    allOrNothing: boolean;\n    initialMarketPrice: string;\n    settlementType: OrderSettlement;\n    calculateAbsoluteMinTradeVolume(quoteToken: string, baseToken: string, price: BigNumber): BigNumber;\n}\n\ninterface Props extends FormProps, ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    priorityTokenDetails: TokenDetail | undefined;\n    nonPriorityTokenDetails: TokenDetail | undefined;\n    feeToken: TokenDetail | undefined;\n    notice: string | undefined;\n}\n\nexport const NewOrderInputForm = connect(mapStateToProps, mapDispatchToProps)(NewOrderInputFormClass);\n","import React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { Formik, FormikActions, FormikErrors, FormikProps } from \"formik\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { OrderSettlement, OrderSide, OrderType, Token } from \"@renex/renex\";\n\nimport { openOrder } from \"../actions/trader/orderActions\";\nimport { Pair, Pairs, TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { InfoLabel } from \"./InfoLabel\";\nimport { NewOrderInputForm } from \"./NewOrderInputForm\";\n\nclass OuterForm extends React.Component<Props, State> {\n\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            showMoreOptions: true,\n            allOrNothing: false,\n            immediateOrCancel: false,\n            fillOrKill: false,\n            side: OrderSide.BUY,\n        };\n    }\n\n    public componentDidMount(): void {\n        // Set side based on what user last saved\n        const { orderInputs } = this.props;\n        if (orderInputs.side !== this.state.side) {\n            this.setState({ side: orderInputs.side });\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n\n        const { fillOrKill, allOrNothing, immediateOrCancel, showMoreOptions } = this.state;\n        const { sdk, orderInputs, market, marketPrice, settlementType } = this.props;\n        const pairDetails = Pairs.get(market, undefined);\n        if (!pairDetails) {\n            return <></>;\n        }\n\n        const nonPriorityTokenDetails = TokenDetails.get(pairDetails.baseToken, UnknownToken);\n        const { side } = this.state;\n        const defaultMarketPrice = marketPrice ? new BigNumber(sdk.utils.normalizePrice(marketPrice)).toFixed() : \"0\";\n        return (\n            <>\n                <div className=\"order--wrapper order--wrapper--tabbed\">\n                    <ul className=\"order--tabs\">\n                        <li\n                            className={side === OrderSide.BUY ? \"active\" : \"\"}\n                            role=\"tab\"\n                            // tslint:disable-next-line: react-this-binding-issue jsx-no-lambda\n                            onClick={() => { this.setState({ side: OrderSide.BUY }); }}\n                        >\n                            <span>Buy {nonPriorityTokenDetails.symbol}</span>\n                        </li>\n                        <li\n                            className={side === OrderSide.SELL ? \"active\" : \"\"}\n                            role=\"tab\"\n                            // tslint:disable-next-line: react-this-binding-issue jsx-no-lambda\n                            onClick={() => { this.setState({ side: OrderSide.SELL }); }}\n                        >\n                            <span>Sell {nonPriorityTokenDetails.symbol}</span>\n                        </li>\n                    </ul>\n                    <Formik\n                        initialValues={{\n                            volume: orderInputs.volume || \"\",\n                            minVolume: orderInputs.minVolume || \"\",\n                            pricepoint: orderInputs.pricepoint || defaultMarketPrice,\n                            priorityVolume: \"\",\n                        }}\n                        validate={this.validate}\n                        onSubmit={this.handleSubmit}\n                        // tslint:disable-next-line: react-this-binding-issue jsx-no-lambda\n                        render={(props: FormikProps<NewOrderInputsValues>) => (\n                            <NewOrderInputForm\n                                {...props}\n                                market={market}\n                                side={side}\n                                allOrNothing={allOrNothing || fillOrKill}\n                                initialMarketPrice={defaultMarketPrice}\n                                settlementType={settlementType}\n                                calculateAbsoluteMinTradeVolume={this.calculateAbsoluteMinTradeVolume}\n                            />\n                        )}\n                    />\n                </div>\n                <div className={`order--options ${!showMoreOptions ? \"hidden\" : \"\"}`}>\n                    <label>\n                        <input\n                            name=\"allOrNothing\"\n                            type=\"checkbox\"\n                            disabled={fillOrKill}\n                            checked={allOrNothing || fillOrKill}\n                            onChange={this.handleMoreOptions}\n                        />\n                        All or Nothing <InfoLabel>Execute either the entire order or not at all.</InfoLabel>\n                    </label>\n                    <label>\n                        <input\n                            name=\"immediateOrCancel\"\n                            type=\"checkbox\"\n                            disabled={fillOrKill}\n                            checked={immediateOrCancel || fillOrKill}\n                            onChange={this.handleMoreOptions}\n                        />\n                        Immediate or Cancel <InfoLabel>If the order cannot be matched against the current orderbook, cancel the order.</InfoLabel>\n                    </label>\n                    <label>\n                        <input\n                            name=\"fillOrKill\"\n                            type=\"checkbox\"\n                            disabled={allOrNothing && immediateOrCancel}\n                            checked={fillOrKill || (allOrNothing && immediateOrCancel)}\n                            onChange={this.handleMoreOptions}\n                        />\n                        Fill or Kill <InfoLabel>If the entire order cannot be executed against the current orderbook, cancel the order.</InfoLabel>\n                    </label>\n                </div>\n            </>\n        );\n    }\n\n    // tslint:disable-next-line:no-any\n    private readonly handleSubmit = async (values: NewOrderInputsValues, formikBag: FormikActions<NewOrderInputsValues>) => {\n        const { setSubmitting, resetForm } = formikBag;\n        const { market, sdk } = this.props;\n        const { side, immediateOrCancel, fillOrKill } = this.state;\n        const { pricepoint, volume, minVolume } = values;\n\n        const orderType = immediateOrCancel || fillOrKill ? OrderType.LIMIT_IOC : OrderType.LIMIT;\n\n        // Callback functions\n        const onSuccess = () => {\n            setSubmitting(false);\n            resetForm({\n                pricepoint,\n                volume: \"0\",\n                minVolume: \"0\",\n                priorityVolume: \"0\",\n            });\n        };\n\n        const onError = () => {\n            setSubmitting(false);\n        };\n\n        await this.props.actions.openOrder(\n            sdk,\n            market,\n            side, pricepoint || \"0\",\n            volume || \"0\", minVolume || \"0\",\n            orderType,\n            onSuccess,\n            onError,\n        );\n    }\n\n    private readonly validate = (values: NewOrderInputsValues): FormikErrors<NewOrderInputsValues> => {\n        const { minEthereumTradeVolume, market, settlementType } = this.props;\n        const usableLegacyBalances = settlementType === OrderSettlement.RenEx ? this.props.usableLegacyBalances : this.props.usableAtomicBalances;\n        const { side, allOrNothing } = this.state;\n\n        const errors: FormikErrors<NewOrderInputsValues> = {};\n        const marketDetails = Pairs.get(market, undefined);\n        if (!marketDetails) {\n            errors.volume = `Unknown market pair.`;\n\n            return errors;\n        }\n\n        const sellToken = (side === OrderSide.BUY) ? marketDetails.quoteToken : marketDetails.baseToken;\n        const whichVolume = (side === OrderSide.BUY) ? \"priorityVolume\" : \"volume\";\n        const sellBalance = usableLegacyBalances.get(sellToken) || new BigNumber(0);\n        const sellVolume = new BigNumber(values[whichVolume]);\n        const sellTokenDetails = TokenDetails.get(sellToken, UnknownToken);\n\n        const pricepointBigNumber = new BigNumber(values.pricepoint || \"0\");\n        const volumeBigNumber = new BigNumber(values.volume || \"0\");\n        const minVolumeBigNumber = new BigNumber(values.minVolume || \"0\");\n        const priorityVolumeBigNumber = new BigNumber(values.priorityVolume || \"0\");\n\n        // Ensure user has sufficient balance\n        if (sellBalance.lt(sellVolume)) {\n            errors[whichVolume] = `Insufficient ${sellTokenDetails.symbol} balance.`;\n        }\n\n        // Enforce minimum volume\n        if (marketDetails.quoteToken === Token.ETH && priorityVolumeBigNumber.lt(minEthereumTradeVolume)) {\n            errors.priorityVolume = `Minimum order size is ${minEthereumTradeVolume.toFixed()} ETH.`;\n        }\n\n        // Ensure pricepoint is non zero before enforcing absolute minimum volume\n        if (!pricepointBigNumber.isZero()) {\n            const absoluteMinVolume = this.calculateAbsoluteMinTradeVolume(marketDetails.quoteToken, marketDetails.baseToken, pricepointBigNumber);\n            const nonPriorityDetails = TokenDetails.get(marketDetails.baseToken, UnknownToken);\n            if (minVolumeBigNumber.lt(absoluteMinVolume)) {\n                const whichMinVolume = allOrNothing ? \"volume\" : \"minVolume\";\n                const volumeString = allOrNothing ? \"Volume\" : \"Minimum volume\";\n                errors[whichMinVolume] = `${volumeString} must be at least ${absoluteMinVolume.toFixed()} ${nonPriorityDetails.symbol}.`;\n            }\n        }\n\n        // Minimum volume should be less than volume\n        if (volumeBigNumber.lt(minVolumeBigNumber)) {\n            errors.volume = `Volume cannot be less than minimum volume.`;\n        }\n\n        return errors;\n    }\n\n    private readonly handleMoreOptions = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const { name, checked } = e.target;\n        this.setState((oldState) => ({ ...oldState, [name]: checked, }));\n    }\n\n    private readonly calculateAbsoluteMinTradeVolume = (quoteToken: string, baseToken: string, price: BigNumber): BigNumber => {\n        const { sdk, minEthereumTradeVolume } = this.props;\n        switch (baseToken) {\n            case Token.ETH:\n                return minEthereumTradeVolume;\n            case Token.WBTC:\n                return new BigNumber(0.0002);\n            default:\n                let minVolume = new BigNumber(sdk.utils.normalizeVolume(minEthereumTradeVolume.dividedBy(price), true));\n                if (quoteToken === Token.BTC) {\n                    // We roughly estimate BTC minimum volume\n                    minVolume = minVolume.multipliedBy(0.01);\n                }\n                return minVolume;\n        }\n    }\n\n}\n\n// tslint:enable:jsx-no-lambda\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    orderInputs: state.inputs.orderInputs,\n    minEthereumTradeVolume: state.sdk.minEthTradeVolume,\n    usableLegacyBalances: state.trader.usableLegacyBalances,\n    usableAtomicBalances: state.trader.usableAtomicBalances,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        openOrder,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n    market: Pair;\n    marketPrice: number;\n    settlementType: OrderSettlement;\n}\n\n// Shape of form values\nexport interface NewOrderInputsValues {\n    volume: string;\n    minVolume: string;\n    priorityVolume: string;\n    pricepoint: string;\n}\n// tslint:disable: jsx-no-lambda\n\ninterface State {\n    side: OrderSide;\n    showMoreOptions: boolean;\n    allOrNothing: boolean;\n    immediateOrCancel: boolean;\n    fillOrKill: boolean;\n}\n\nexport const NewOrderInputs = connect(mapStateToProps, mapDispatchToProps)(OuterForm);\n","import * as React from \"react\";\n\nimport { css } from \"emotion\";\n\nimport { ControlProps } from \"react-select/lib/components/Control\";\nimport { OptionProps } from \"react-select/lib/components/Option\";\nimport { SingleValueProps } from \"react-select/lib/components/SingleValue\";\nimport { TokenDetails, UnknownToken } from \"../lib/market\";\n\ninterface OptionType {\n    label: string;\n    value: string;\n    // tslint:disable-next-line: no-any no-reserved-keywords\n    symbol: any;\n    name: string;\n    orderSettlement?: string;\n}\n\nexport const CustomControl = <X extends OptionType>(props: ControlProps<X>) => {\n    const { children, cx, getStyles, className, isDisabled, isFocused, innerRef, innerProps } = props;\n    // tslint:disable-next-line: no-any\n    const { menuIsOpen } = (props as any);\n    return (\n        <div\n            ref={innerRef}\n            className={`${(cx(css(getStyles(\"control\", props)), {\n                control: true,\n                \"control--is-disabled\": isDisabled,\n                \"control--is-focused\": isFocused,\n                \"control--menu-is-open\": menuIsOpen\n            }, className) || \"\")} Select-control`}\n            {...innerProps}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport const CustomValue = <X extends OptionType>(props: SingleValueProps<X>) => {\n    const { className, cx, getStyles, isDisabled, innerProps, children } = props;\n\n    const option = props.data;\n\n    const filename = TokenDetails.get(option.value, UnknownToken).icon;\n\n    // tslint:disable-next-line:non-literal-require\n    const image = require(`../tokens/${filename}`);\n\n    return (\n        <div\n            className={`${cx(\n                // tslint:disable-next-line: no-any\n                css(getStyles(\"singleValue\", props)),\n                {\n                    \"single-value\": true,\n                    \"single-value--is-disabled\": isDisabled\n                },\n                className\n            )} Select-value`}\n            {...innerProps}\n        >\n            <img alt=\"\" role=\"presentation\" src={image} />\n            {children}\n        </div>\n    );\n};\n\nexport const CustomOption = <X extends OptionType>(props: OptionProps<X>) => {\n    const { children, className, cx, getStyles, isDisabled, isFocused, isSelected, innerRef, innerProps } = props;\n\n    const option = props.data;\n\n    const filename = TokenDetails.get(option.value, UnknownToken).icon;\n\n    // tslint:disable-next-line:non-literal-require\n    const image = require(`../tokens/${filename}`);\n    return (\n        <div\n            ref={innerRef}\n            className={`${cx(\n                css(getStyles(\"option\", props)),\n                {\n                    option: true,\n                    \"option--is-disabled\": isDisabled,\n                    \"option--is-focused\": isFocused,\n                    \"option--is-selected\": isSelected,\n                },\n                className\n            ) || \"\"} Select--option`}\n            {...innerProps}\n        >\n            <img role=\"presentation\" alt=\"\" src={image} />\n            {children}\n        </div >\n    );\n};\n","import * as React from \"react\";\n\nimport Select from \"react-select\";\n\nimport { OrderSettlement, TokenCode } from \"@renex/renex\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\n// import { OptionProps } from \"react-select/lib/components/Option\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { history } from \"../lib/history\";\n\nimport { setMarket } from \"../actions/inputs/inputsActions\";\nimport { Pair, Pairs, TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { CustomControl, CustomOption, CustomValue } from \"./Select\";\n\ninterface OptionType {\n    field: string;\n    label: string;\n    name: string;\n    // tslint:disable-next-line: no-any no-reserved-keywords\n    symbol: any;\n    value: string;\n    orderSettlement?: OrderSettlement;\n    market: Pair;\n}\n\n/**\n * SelectMarket allows the user to select a market from two token dropdowns\n */\nclass SelectMarketClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n\n        // Retrieve the order inputs from the store.\n        const { market } = this.props;\n        const marketDetails = Pairs.get(market, undefined);\n\n        let fstCode;\n        let sndCode;\n        if (marketDetails) {\n            fstCode = marketDetails.category || marketDetails.quoteToken;\n            sndCode = fstCode === marketDetails.quoteToken ? marketDetails.baseToken : marketDetails.quoteToken;\n        }\n        this.state = {\n            fstCode,\n            sndCode,\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props): void {\n        const { market } = nextProps;\n        const marketDetails = Pairs.get(market, undefined);\n\n        if (marketDetails) {\n            let { fstCode, sndCode } = this.state;\n            if (market !== this.props.market) {\n                fstCode = marketDetails.category || marketDetails.quoteToken;\n                sndCode = fstCode === marketDetails.quoteToken ? marketDetails.baseToken : marketDetails.quoteToken;\n                this.setState({ fstCode, sndCode });\n            }\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { fstCode, sndCode } = this.state;\n\n        if (fstCode === undefined || sndCode === undefined) {\n            return <></>;\n        }\n\n        const leftCurrencies = this.listCurrencies();\n        const rightCurrencies = this.listPairs(fstCode);\n\n        return (\n            <div className=\"order--currencies\">\n                <Select\n                    className=\"Select--currency\"\n                    name=\"fstCode\"\n                    value={leftCurrencies.find((option => option.value === fstCode))}\n                    onChange={this.handleChange}\n                    options={leftCurrencies}\n                    components={{\n                        SingleValue: CustomValue,\n                        Option: CustomOption,\n                        Control: CustomControl,\n                    }}\n                    isClearable={false}\n                    backspaceRemovesValue={false}\n                    isDisabled={leftCurrencies.length <= 1}\n                />\n                <Select\n\n                    className=\"Select--currency\"\n                    name=\"sndCode\"\n                    value={rightCurrencies.find((option => option.value === sndCode))}\n                    onChange={this.handleChange}\n                    options={rightCurrencies}\n                    components={{\n                        SingleValue: CustomValue,\n                        Option: CustomOption,\n                        Control: CustomControl,\n                    }}\n                    isClearable={false}\n                    backspaceRemovesValue={false}\n                    isDisabled={rightCurrencies.length <= 1}\n                />\n            </div>\n        );\n    }\n\n    // private updateMarket(market: Pair): void {\n    //     // let { fstCode, sndCode } = this.state;\n\n    //     // // Check if the pair exists\n    //     // if (!TokenDetails.get(fstCode).pairs.has(sndCode)) {\n    //     //     // If not, check if the inverse of the pair exists\n    //     //     if (TokenDetails.get(sndCode).pairs.has(fstCode)) {\n    //     //         const fstCodeTmp = fstCode;\n    //     //         fstCode = sndCode;\n    //     //         sndCode = fstCodeTmp;\n    //     //         this.setState({ fstCode, sndCode });\n    //     //     } else {\n    //     //         // Otherwise, check if there are any pairs in which it is the\n    //     //         // first token and assign them. If it has no pairs, we revert\n    //     //         // use Token.ETH.\n    //     //         if (!TokenDetails.get(fstCode).pairs.size) {\n    //     //             fstCode = Token.ETH;\n    //     //             this.setState({ fstCode });\n    //     //         }\n    //     //         sndCode = Number(TokenDetails.get(fstCode).pairs.keySeq().first());\n    //     //         if (!isNaN(sndCode)) {\n    //     //             this.setState({ sndCode });\n    //     //         }\n    //     //     }\n    //     // }\n\n    //     // const market = TokenDetails.get(fstCode).pairs.get(sndCode);\n    //     this.props.actions.setMarket({ market });\n    // }\n\n    // tslint:disable-next-line:no-any\n    private readonly handleChange = (e: any): void => {\n        this.setState((current) => ({ ...current, [e.field]: e.value }), () => {\n            // this.updateMarket(e.market);\n            history.push(\"/exchange\");\n            this.props.actions.setMarket({ market: e.market });\n        });\n    }\n\n    private readonly listCurrencies = (): OptionType[] => {\n        const { supportedTokens, supportedAtomicTokens } = this.props;\n        const list: OptionType[] = [];\n        const tokens = supportedTokens\n            .concat(supportedAtomicTokens)\n            .toArray();\n        Array.from(new Set(tokens))\n            .forEach((token: TokenCode) => {\n                // Check if token has any pairs in which it is the 'fstCode'.\n                if (TokenDetails.get(token, UnknownToken).pairs.size > 0) {\n                    const { symbol, name, pairs } = TokenDetails.get(token, UnknownToken);\n                    list.push({\n                        field: \"fstCode\",\n                        label: `${symbol} – ${name}`,\n                        name,\n                        symbol,\n                        value: token,\n                        market: pairs.first(),\n                    });\n                }\n            });\n        return list;\n    }\n\n    private readonly listPairs = (fstCode: TokenCode): OptionType[] => {\n        return TokenDetails.get(fstCode, UnknownToken).pairs\n            .map((pair: Pair, token: TokenCode) => {\n                const pairDetails = Pairs.get(pair, undefined);\n                if (!pairDetails) {\n                    return;\n                }\n                const { orderSettlement, code } = pairDetails;\n                const { symbol, name } = TokenDetails.get(token, UnknownToken);\n                return {\n                    field: \"sndCode\",\n                    label: `${symbol} – ${name}${orderSettlement === OrderSettlement.RenExAtomic ? ` (atomic)` : ``}`,\n                    name,\n                    symbol,\n                    value: token,\n                    orderSettlement,\n                    market: code,\n                };\n            })\n            .valueSeq()\n            .toArray()\n            .filter(x => x !== undefined) as OptionType[];\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    market: state.inputs.market,\n    supportedTokens: state.sdk.supportedTokens,\n    supportedAtomicTokens: state.sdk.supportedAtomicTokens,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setMarket,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    fstCode: TokenCode | undefined;\n    sndCode: TokenCode | undefined;\n}\n\nexport const SelectMarket = connect(mapStateToProps, mapDispatchToProps)(SelectMarketClass);\n","import * as React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { WBTCOrder } from \"@renex/renex\";\nimport { addOrders } from \"../actions/orderbook/traderBookActions\";\nimport { updateAtomConnectionStatus } from \"../actions/settlement/atomicActions\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { TokenDetails, UnknownToken } from \"../lib/market\";\nimport { ApplicationData } from \"../reducers/types\";\nimport { traderOrderToRecord } from \"../reducers/typesSdk\";\nimport { InfoLabel } from \"./InfoLabel\";\nimport { Loading } from \"./Loading\";\n\nclass WrapBitcoinClass extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            linkPending: false,\n            inputValue: \"0\",\n            wrap: true,\n            isSubmitting: false,\n        };\n    }\n\n    // tslint:disable: jsx-no-lambda\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { wrappingFeePercent, usableAtomicBalances } = this.props;\n        const btcTokenDetails = TokenDetails.get(\"BTC\", UnknownToken);\n        const wbtcTokenDetails = TokenDetails.get(\"WBTC\", UnknownToken);\n        const { isSubmitting, wrap, error } = this.state;\n        let amount = new BigNumber(this.state.inputValue);\n        if (amount.isNaN() || !amount.isFinite()) {\n            amount = new BigNumber(0);\n        }\n        const spendToken = wrap ? btcTokenDetails : wbtcTokenDetails;\n        const spendBalance = usableAtomicBalances.get(spendToken.symbol) || new BigNumber(0);\n        const receiveToken = wrap ? wbtcTokenDetails : btcTokenDetails;\n        const feeAmount = amount.times(wrappingFeePercent);\n\n        return <div className=\"order--wrapper order--wrapper--tabbed\">\n            <ul className=\"order--tabs\">\n                <li\n                    className={wrap ? \"active\" : \"\"}\n                    role=\"tab\"\n                    onClick={this.enableWrap}\n                >\n                    <span>Wrap BTC</span>\n                </li>\n                <li\n                    className={!wrap ? \"active\" : \"\"}\n                    role=\"tab\"\n                    onClick={this.disableWrap}\n                >\n                    <span>Unwrap WBTC</span>\n                </li>\n            </ul>\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"order--inputs\">\n                    <div className=\"order--input-wrapper\">\n                        <label>\n                            <div className=\"order--title\">\n                                <span>Spend</span>\n                            </div>\n                            <span className=\"order--input-item\">\n                                <input min=\"0\" step=\".00000001\" type=\"number\" value={this.state.inputValue} onChange={this.handleChange} />\n                                <span>{spendToken.symbol}</span>\n                            </span>\n                        </label>\n                        {spendBalance.lt(amount) ?\n                            <p className=\"order--warning\">Insufficient {spendToken.symbol} balance</p>\n                            : (\n                                !feeAmount.isEqualTo(0) &&\n                                <p className=\"order--message\">You will spend {new BigNumber(this.state.inputValue).plus(feeAmount).toFixed()} {wrap ? \"BTC\" : \"WBTC\"} after fees.</p>\n                            )\n\n                        }\n                    </div>\n                    <div className=\"order--input-wrapper\">\n                        <label>\n                            <div className=\"order--title\">\n                                <span>Receive</span>\n                            </div>\n                            <span className=\"order--input-item\">\n                                <input min=\"0\" step=\".00000001\" type=\"number\" value={this.state.inputValue} onChange={this.handleChange} disabled />\n                                <span>{receiveToken.symbol}</span>\n                            </span>\n                        </label>\n                    </div>\n                </div>\n                {!feeAmount.isEqualTo(0) &&\n                    <div>\n                        <span>Fee: {feeAmount.toFixed()} {spendToken.symbol}</span>\n                        <InfoLabel>Fees for {wrap ? \"wrapping BTC\" : \"unwrapping WBTC\"} are set to {wrappingFeePercent.times(100).toFixed()}% of the order volume.</InfoLabel>\n                    </div>\n                }\n                <div className=\"order--footer\">\n                    <button className={`order--button ${isSubmitting ? \"submitting\" : \"\"}`} type=\"submit\" disabled={this.checkDisable()}>\n                        <span>\n                            {isSubmitting ?\n                                <Loading />\n                                : (\n                                    wrap ? \"Wrap BTC\" : \"Unwrap WBTC\"\n                                )\n                            }\n                        </span>\n                    </button>\n                </div>\n                {error && error !== \"User rejected the swap\" &&\n                    <div>\n                        <p className=\"order--warning\">{error}</p>\n                    </div>\n                }\n            </form>\n        </div >;\n    }\n\n    private readonly enableWrap = () => { this.setState({ wrap: true }); };\n    private readonly disableWrap = () => { this.setState({ wrap: false }); };\n\n    private readonly checkDisable = (): boolean => {\n        const { usableAtomicBalances } = this.props;\n        const { wrap, isSubmitting } = this.state;\n        const value = new BigNumber(this.state.inputValue);\n        const spendToken = wrap ? \"BTC\" : \"WBTC\";\n        const usable: BigNumber = usableAtomicBalances.get(spendToken) || new BigNumber(0);\n        const valid = value.gt(0) && value.lte(usable);\n\n        return !valid || isSubmitting;\n    }\n\n    private readonly handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        const { wrap, inputValue } = this.state;\n        this.setState({ isSubmitting: true, error: null });\n        event.preventDefault();\n        // Buying WBTC means wrapping Bitcoin\n        const swap = (wrap) ? this.wrap() : this.unwrap();\n\n        return swap\n            // tslint:disable-next-line: no-any\n            .then((wbtcOrder: any) => {\n                // Add order to trader orders\n                this.props.actions.addOrders([traderOrderToRecord(wbtcOrder)]);\n                this.setState({ isSubmitting: false });\n            })\n            .catch((error: Error) => {\n                _captureInteractionException_(error, {\n                    description: \"Error in WrapBitcoin.handleSubmit\",\n                    shownToUser: \"In WrapBitcoin as message box\",\n                    wrap,\n                    inputValue,\n                });\n                this.setState({ error: error.message, isSubmitting: false });\n            });\n    }\n\n    private readonly wrap = async (): Promise<WBTCOrder> => {\n        const { sdk } = this.props;\n\n        return sdk.swapperd.wrap(this.state.inputValue, \"BTC\");\n    }\n\n    private readonly unwrap = async (): Promise<WBTCOrder> => {\n        const { sdk } = this.props;\n\n        return sdk.swapperd.unwrap(this.state.inputValue, \"WBTC\");\n    }\n\n    private readonly handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue;\n        inputValue = (event.target as HTMLInputElement).value;\n        if (inputValue.indexOf(\"e\") >= 0) {\n            inputValue = new BigNumber(inputValue).toFixed();\n        }\n        this.setState({ inputValue });\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    atomConnectionStatus: state.trader.atomConnectionStatus,\n    usableAtomicBalances: state.trader.usableAtomicBalances,\n    wrappingFeePercent: state.sdk.wrappingFeePercent,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        updateAtomConnectionStatus,\n        addOrders,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    error: string | null;\n    linkPending: boolean;\n    inputValue: string;\n    wrap: boolean;\n    isSubmitting: boolean;\n}\n\nexport const WrapBitcoin = connect(mapStateToProps, mapDispatchToProps)(WrapBitcoinClass);\n","import * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { AtomicConnectionStatus, OrderSettlement } from \"@renex/renex\";\n\nimport { Pair, Pairs } from \"../lib/market\";\nimport { ApplicationData, UnknownMarketPrice } from \"../reducers/types\";\nimport { AtomicNotice } from \"./AtomicNotice\";\nimport { Heading } from \"./Heading\";\nimport { NewOrderInputs } from \"./NewOrderInputs\";\nimport { SelectMarket } from \"./SelectMarket\";\nimport { WrapBitcoin } from \"./WrapBitcoin\";\n\n/**\n * NewOrder is a visual component for allowing users to open new orders\n */\nclass NewOrderClass extends React.Component<Props, State> {\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { market, marketPrices } = this.props;\n        const pairDetails = Pairs.get(market, undefined);\n\n        let newOrder;\n        if (pairDetails === undefined) {\n            newOrder = <div className=\"order--wrapper\">\n                <p>Invalid market pair: {market}</p>\n            </div>;\n        } else {\n            const settlement = pairDetails.orderSettlement;\n            const marketPrice = pairDetails.fixedPrice ? pairDetails.fixedPrice.toNumber() : marketPrices.get(market, UnknownMarketPrice).price;\n\n            const { atomConnectionStatus } = this.props;\n\n            if (atomConnectionStatus !== AtomicConnectionStatus.ConnectedUnlocked && settlement === OrderSettlement.RenExAtomic) {\n                newOrder = <AtomicNotice />;\n            } else if (market === Pair.WBTC_BTC) {\n                newOrder = <WrapBitcoin />;\n            } else {\n                newOrder = <NewOrderInputs\n                    market={market}\n                    marketPrice={marketPrice}\n                    settlementType={settlement}\n                />;\n            }\n        }\n\n        return (\n            <div className=\"section order\">\n                <div className=\"container\">\n                    <Heading title=\"Submit an order\" />\n                    <SelectMarket />\n                    {newOrder}\n                </div>\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    market: state.inputs.market,\n    marketPrices: state.marketPrices.marketPrices,\n    sdk: state.sdk.sdk,\n    atomConnectionStatus: state.trader.atomConnectionStatus,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\ninterface State {\n}\n\nexport const NewOrder = connect(mapStateToProps, null)(NewOrderClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setMarket } from \"../../actions/inputs/inputsActions\";\nimport { BalanceBanner } from \"../../components/BalanceBanner\";\nimport { ExecutedTrades } from \"../../components/ExecutedTrades\";\nimport { Header } from \"../../components/Header\";\nimport { HiddenOrderbook } from \"../../components/HiddenOrderbook\";\nimport { MarketBanner } from \"../../components/MarketBanner\";\nimport { NewOrder } from \"../../components/NewOrder\";\nimport { SubmittedTrades } from \"../../components/SubmittedTrades\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { Pairs } from \"../../lib/market\";\nimport { _catch_ } from \"../ErrorBoundary\";\n\n/**\n * Home is a page whose principal component allows users to open orders. The\n * page also displays the hidden orderbook.\n */\nclass ExchangeClass extends React.Component<Props, Exchange> {\n    public componentDidMount(): void {\n        try {\n            // Set market pair based on URL\n            const params = window.location.href.split(\"/\");\n            const fstCode = params[4];\n            const sndCode = params[5];\n            if (fstCode && sndCode) {\n                for (const pair of Pairs.valueSeq().toArray()) {\n                    if (fstCode.toUpperCase() === pair.quoteToken) {\n                        if (sndCode.toUpperCase() === pair.baseToken) {\n                            this.props.actions.setMarket({ market: pair.code });\n                            break;\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            _captureInteractionException_(error, {\n                description: \"Error in Exchange.componentDidMount\",\n                shownToUser: \"No\",\n            });\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render = (): React.ReactNode =>\n        <div className=\"exchange\">\n            {_catch_(<MarketBanner />)}\n            {_catch_(<Header withMenu={true} />)}\n            {_catch_(<BalanceBanner />)}\n\n            <div className=\"content\">\n                {_catch_(<NewOrder />)}\n                {_catch_(<SubmittedTrades recent />)}\n                {_catch_(<ExecutedTrades recent />)}\n                {_catch_(<HiddenOrderbook />)}\n            </div>\n        </div>\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setMarket,\n    }, dispatch)\n});\n\ninterface Props extends ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface Exchange {\n}\n\nexport const Exchange = connect(null, mapDispatchToProps)(ExchangeClass);\n","import * as React from \"react\";\n\nimport Axios from \"axios\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { Blocky } from \"../../components/Blocky\";\nimport { Loading } from \"../../components/Loading\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { ErrorVerificationFailed } from \"../../lib/wallets/wallet\";\nimport { ApplicationData } from \"../../reducers/types\";\n\n/**\n * SelectWeb3Account is a popup component for prompting a user to select an\n * Ethereum account from multiple addresses\n */\nclass SelectWeb3AccountClass extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            accounts: null,\n            error: null,\n        };\n    }\n\n    public async componentDidMount() {\n        await this.getAccounts();\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { accounts, error } = this.state;\n\n        if (error) {\n            return (\n                <div className=\"popup ledger\">\n                    <h2>Unable to retrieve accounts</h2>\n                    <p>{error}</p>\n                    <button onClick={this.getAccounts}>Retry</button>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"popup accounts\">\n                {accounts !== null ?\n                    <>\n                        <h2>Select an account:</h2>\n                        {accounts.map((account, i) =>\n                            <button key={i} data-item={i} className=\"account--button\" onClick={this.onSelectAccount}>\n                                <div className=\"account--left\">\n                                    <Blocky address={account} />\n                                </div>\n                                <div className=\"account--right\">\n                                    <span className=\"monospace\">{account}</span>\n                                </div>\n                            </button>\n                        )}\n                    </>\n                    :\n                    <Loading />\n                }\n            </div>\n        );\n    }\n\n    private readonly getAccounts = async () => {\n        const { referrer } = this.props;\n        this.setState({ error: null });\n        let accounts;\n        try {\n            accounts = await this.props.getAccounts();\n        } catch (error) {\n            // Errors already logged to Sentry\n            this.setState({ error: (error as Error).message || error.toString() });\n            return;\n        }\n        if (accounts.length === 1) {\n            await this.attemptVerification(accounts[0], referrer);\n            return;\n        }\n        this.setState({ accounts });\n    }\n\n    private readonly onSelectAccount = async (event: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        const { referrer } = this.props;\n        const { accounts } = this.state;\n        const selectedAccountIndex = parseInt(event.currentTarget.getAttribute(\"data-item\") || \"0\", 10);\n\n        if (selectedAccountIndex === null || accounts === null || accounts.length < selectedAccountIndex) {\n            console.error(\"No account selected\");\n            return;\n        }\n        const address = accounts[selectedAccountIndex];\n        await this.attemptVerification(address, referrer);\n    }\n\n    private readonly attemptVerification = async (address: string, referrer: string): Promise<void> => {\n        const { url } = this.props;\n        const data = { address, referrer };\n\n        try {\n            // This request stores the trader login details (address and\n            // referrer) in the Ingress database and performs a check to find\n            // whether the trader is verified.\n            const response = await Axios.post(`${window.NETWORK.ingress}/login`, JSON.stringify(data));\n            if (response.data.verified) {\n                this.props.resolve(address, url);\n                return;\n            }\n        } catch (error) {\n            _captureInteractionException_(error, {\n                description: \"Error in SelectWeb3Account.attemptVerification\",\n                shownToUser: \"No\",\n            });\n        }\n\n        this.props.reject(address, ErrorVerificationFailed);\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    url: state.trader.url,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n    message: string;\n    referrer: string;\n    getAccounts(): Promise<string[]>;\n    resolve(address: string, url: string | null): void;\n    reject(address: string, reason: string): void;\n}\n\ninterface State {\n    accounts: string[] | null;\n    error: string | null;\n}\n\nexport const SelectWeb3Account = connect(mapStateToProps)(SelectWeb3AccountClass);\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setAlert } from \"../../actions/alert/alertActions\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { Wallet } from \"../../lib/wallets/wallet\";\nimport { Alert, AlertType } from \"../../reducers/types\";\n\n/**\n * VerificationPopup is a popup component for submitting KYC applications\n */\nclass VerificationPopupClass extends React.Component<Props, State> {\n    // tslint:disable-next-line:no-any\n    private handler: any;\n\n    public componentDidMount(): void {\n        const { closePopup } = this.props;\n\n        // tslint:disable-next-line:no-any\n        this.handler = new (window as any).Wyre.Widget({\n            accountId: window.WYRE_KEY,\n            auth: { type: \"metamask\" },\n            operation: {\n                type: \"none\"\n            },\n            onSuccess: () => {\n                closePopup();\n                this.props.actions.setAlert({\n                    alert: new Alert({ message: \"Your application was successfully submitted. Check back later to view the status of your application\", alertType: AlertType.Success })\n                });\n            },\n            // tslint:disable-next-line:no-any\n            onExit: (error: any) => {\n                if (error != null) {\n                    _captureInteractionException_(error, {\n                        description: \"Error in VerificationPopup.onExit\",\n                        shownToUser: \"As alert\",\n                    });\n                    closePopup();\n                    this.props.actions.setAlert({\n                        alert: new Alert({ message: \"There was an error submitting your application. Please try again later\", alertType: AlertType.Error })\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const callbackURL = `${location.protocol}//${location.host}${location.pathname}`;\n        return <div className=\"popup kyc content\">\n            <h2>Verify your account</h2>\n            <p>Please submit a KYC application, or check back later to see if your application has been approved.</p>\n            <div className=\"popup--buttons\">\n                <a href={`https://kyber.network/oauth/authorize?client_id=${window.KYBER_KEY}&redirect_uri=${callbackURL}&response_type=code&state=${this.props.address},${this.props.wallet}`}>\n                    <button className=\"kyber--button\"><span>Login with Kyber</span></button>\n                </a>\n                <button className=\"wyre--button\" onClick={this.openWyreHandler}><span>Verify with Wyre</span></button>\n            </div>\n            <p>Note: Wyre currently supports US residents only.</p>\n        </div>;\n    }\n\n    public openWyreHandler = () => {\n        this.handler.open();\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setAlert,\n    }, dispatch)\n});\n\ninterface Props extends ConnectedReturnType<typeof mapDispatchToProps> {\n    address: string;\n    wallet: Wallet;\n    closePopup(): void;\n}\n\ninterface State {\n}\n\nexport const VerificationPopup = connect(null, mapDispatchToProps)(VerificationPopupClass);\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\n\nimport Web3 from \"web3\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { Provider } from \"web3/providers\";\n\nimport { setAlert } from \"../actions/alert/alertActions\";\nimport { clearPopup, setPopup } from \"../actions/popup/popupActions\";\nimport { login } from \"../actions/trader/accountActions\";\nimport { storeWallet } from \"../actions/trader/walletActions\";\nimport { _captureInteractionException_ } from \"../lib/errors\";\nimport { networkData } from \"../lib/network\";\nimport { ErrorCanceledByUser, ErrorVerificationFailed, Wallet, WalletDetails } from \"../lib/wallets/wallet\";\nimport { Alert, AlertType, ApplicationData } from \"../reducers/types\";\nimport { getParameterByName } from \"./pages/Home\";\nimport { SelectWeb3Account } from \"./popups/SelectWeb3Account\";\nimport { VerificationPopup } from \"./popups/VerificationPopup\";\n\n/**\n * WalletItem is a visual component representing an individual wallet selection\n */\nclass WalletItemClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            referrer: \"\",\n            canceled: false\n        };\n    }\n\n    public componentDidMount(): void {\n        if (window.location.href.indexOf(\"?ref=\") !== -1) {\n            const referrer = getParameterByName(\"ref\");\n            if (referrer != null && referrer !== \"\" && this.state.referrer === \"\") {\n                this.setState({ referrer });\n            }\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { wallet } = this.props;\n        const walletDetails = WalletDetails.get(wallet, undefined);\n\n        if (walletDetails === undefined) {\n            return <></>;\n        }\n\n        const { slug, enabled, description, name } = walletDetails;\n\n        return (\n            <div className={`wallets--container ${slug} ${enabled ? \"\" : \"disabled\"}`}>\n                <div\n                    className=\"wallets--item\"\n                    role=\"button\"\n                    onClick={this.handleSelectWallet}\n                >\n                    <span className=\"wallets--title\">{name}</span>\n                    <p className=\"wallets--description\">\n                        {!enabled ?\n                            \"Coming soon\" : null\n                        }\n                        {enabled && description !== \"\" ?\n                            description : null\n                        }\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    private readonly handleSelectWallet = async (): Promise<void> => {\n        const { sdk, wallet, seenMigrationMap } = this.props;\n        const { referrer } = this.state;\n\n        const walletDetails = WalletDetails.get(wallet, undefined);\n        if (!walletDetails) {\n            return;\n        }\n\n        Sentry.configureScope((scope) => {\n            scope.setExtra(\"wallet\", walletDetails.slug);\n        });\n\n        const { getWeb3Provider } = walletDetails;\n\n        this.setState({ canceled: false });\n        this.props.actions.storeWallet({ wallet });\n\n        // Retrieve web3.\n        let provider: Provider;\n        let providerAccounts: string[] | null;\n        try {\n            [provider, providerAccounts] = await getWeb3Provider();\n        } catch (error) {\n            if (error.message !== ErrorCanceledByUser) {\n\n                _captureInteractionException_(error, {\n                    description: \"Error in WalletItem.handleSelectWallet\",\n                    shownToUser: \"As alert\",\n                });\n                this.props.actions.setAlert({\n                    alert: new Alert({ message: error.message })\n                });\n            }\n            this.props.actions.storeWallet({ wallet: null });\n\n            return;\n        }\n\n        const uuid = Symbol();\n        const resolve = async (address: string, url: string | null) => {\n            const seenMigration = seenMigrationMap.get(address, false);\n\n            await this.props.actions.login(sdk, provider, address, seenMigration, { redirect: true, url });\n            this.props.actions.clearPopup({ uuid });\n            this.props.actions.setAlert({\n                alert: new Alert({\n                    message: \"You have been successfully logged in\",\n                    alertType: AlertType.Success\n                })\n            });\n        };\n\n        const cancel = () => {\n            this.props.actions.clearPopup({ uuid });\n\n            // Set the state to canceled, so any pending verification is\n            // halted.\n            this.setState({ canceled: true });\n        };\n\n        const reject = (address: string, reason: string) => {\n            if (reason === ErrorVerificationFailed) {\n                if (this.state.canceled) {\n                    return;\n                }\n                this.props.actions.setPopup({ uuid, popup: <VerificationPopup address={address} wallet={wallet} closePopup={cancel} />, onCancel: cancel });\n            } else {\n                cancel();\n            }\n        };\n\n        const getAccounts = async () => {\n            const web3 = new Web3(provider);\n\n            let accounts;\n            try {\n                accounts = providerAccounts ? providerAccounts : await web3.eth.getAccounts();\n            } catch (error) {\n                if (wallet === Wallet.Ledger && error.message.match(/invalid transport instance/)) {\n                    throw new Error(\"Unable to connect to Ledger.\");\n                } else {\n                    _captureInteractionException_(error, {\n                        description: \"Error in WalletItem.getAccounts\",\n                        shownToUser: \"In message box in SelectWeb3Popup\",\n                    });\n                    throw error;\n                }\n            }\n\n            if (accounts.length === 0) {\n                if (wallet === Wallet.MetaMask) {\n                    throw new Error(\"Please unlock your Metamask.\");\n                } else {\n                    throw new Error(\"No accounts found. Your wallet may be locked.\");\n                }\n            }\n\n            // Check that wallet is on correct network (except for Ledger and\n            // Keystore, for which we have already set the network)\n            if (wallet !== Wallet.Ledger && wallet !== Wallet.Keystore) {\n                // tslint:disable-next-line:no-any\n                const network = await (web3.eth.net as any).getNetworkType();\n\n                if (network !== networkData.ethNetwork) {\n                    throw new Error(`Please ensure you are on the ${networkData.ethNetworkLabel} network`);\n                }\n            }\n\n            return accounts;\n        };\n\n        const popup = {\n            uuid,\n            popup: <SelectWeb3Account referrer={referrer} getAccounts={getAccounts} resolve={resolve} reject={reject} message={\"Select account\"} />,\n            onCancel: cancel,\n        };\n\n        this.props.actions.setPopup(popup);\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    url: state.trader.url,\n    seenMigrationMap: state.trader.seenMigrationMap,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        setAlert,\n        storeWallet,\n        setPopup,\n        clearPopup,\n        login,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n    wallet: Wallet;\n}\n\ninterface State {\n    referrer: string;\n    canceled: boolean;\n}\n\nexport const WalletItem = connect(mapStateToProps, mapDispatchToProps)(WalletItemClass);\n","import * as React from \"react\";\n\nimport { List } from \"immutable\";\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { WalletItem } from \"../components/WalletItem\";\nimport { Wallet, WalletList } from \"../lib/wallets/wallet\";\n\n/**\n * Wallets displays a selection of wallets (MetaMask, Ledger, etc.)\n */\nclass WalletsClass extends React.Component<Props> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <div className=\"section wallets\">\n                <div className=\"container\">\n                    <div className=\"wallets--wrapper\">\n                        {this.listWallets()}\n                    </div>\n                    <p className=\"wallets--disclaimer\">\n                        Your trades and transactions are stored locally within your browser.\n                        {/*By proceeding, you agree to the <span onClick={this.handleClick}>Terms &amp; Conditions</span>.*/}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    private readonly listWallets = (): List<React.ReactNode> => {\n        return WalletList.map((wallet: Wallet, i: number) => {\n            return (\n                <WalletItem key={i} wallet={wallet} />\n            );\n        });\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n    }, dispatch)\n});\n\ninterface Props extends ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\nexport const Wallets = connect(null, mapDispatchToProps)(WalletsClass);\n","import * as React from \"react\";\n\nimport Axios from \"axios\";\nimport Web3 from \"web3\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Redirect } from \"react-router\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setAlert } from \"../../actions/alert/alertActions\";\nimport { login } from \"../../actions/trader/accountActions\";\nimport { storeWallet } from \"../../actions/trader/walletActions\";\nimport { Header } from \"../../components/Header\";\nimport { HiddenOrderbook } from \"../../components/HiddenOrderbook\";\nimport { Loading } from \"../../components/Loading\";\nimport { MarketBanner } from \"../../components/MarketBanner\";\nimport { Wallets } from \"../../components/Wallets\";\nimport { _captureInteractionException_ } from \"../../lib/errors\";\nimport { Wallet, WalletDetails } from \"../../lib/wallets/wallet\";\nimport { includesAddress } from \"../../lib/web3\";\nimport { Alert, AlertType, ApplicationData } from \"../../reducers/types\";\nimport { _catch_ } from \"../ErrorBoundary\";\n\n// Adapted from https://stackoverflow.com/a/901144\nexport const getParameterByName = (name: string) => {\n    const fixedName = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    const regex = new RegExp(`[?&]${fixedName}(=([^&#]*)|&|#|$)`);\n    const results = regex.exec(window.location.href);\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return \"\";\n    }\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\n\n/**\n * Home is a page whose principal components are wallet selection to allow users\n * to log-in, and the hidden orderbook\n */\nclass HomeClass extends React.Component<Props, HomeState> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            checkingVerification: false,\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.props.actions.storeWallet({ wallet: null });\n\n        if (window.location.href.indexOf(\"?code=\") !== -1) {\n            // Show loading state between verification checks\n            this.setState({ checkingVerification: true });\n\n            // Check verification\n            let verified, address, kyberUID, wallet, alert;\n            try {\n                ({ verified, address, kyberUID, wallet, alert } = await this.kyberVerification());\n            } catch (error) {\n                _captureInteractionException_(error, {\n                    description: \"Error in Home.componentDidMount.kyberVerification\",\n                    shownToUser: \"No\",\n                });\n            }\n\n            if (verified && address !== undefined && kyberUID !== undefined && wallet !== undefined) {\n                try {\n                    await this.handleForwardLogin(address, wallet);\n                } catch (error) {\n                    _captureInteractionException_(error, {\n                        description: \"Error in Home.componentDidMount.handleForwardLogin\",\n                        shownToUser: \"No\",\n                    });\n                }\n            } else if (!verified && alert) {\n                this.props.actions.setAlert({ alert });\n            }\n            this.setState({ checkingVerification: false });\n        }\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { checkingVerification } = this.state;\n        const { address } = this.props;\n\n        if (address) {\n            return <Redirect to=\"/exchange\" />;\n        }\n\n        return (\n            <div className=\"home\">\n                {checkingVerification &&\n                    <>\n                        <div className=\"popup\">\n                            <Loading />\n                        </div>\n                        <div className=\"overlay\" />\n                    </>\n                }\n                {_catch_(<MarketBanner />)}\n                {_catch_(<Header withMenu={false} />)}\n                {_catch_(<Wallets />)}\n                <div className=\"content\">\n                    {_catch_(<HiddenOrderbook />)}\n                </div>\n            </div>\n        );\n    }\n\n    private async kyberVerification(): Promise<{ verified: boolean; address?: string; kyberUID?: string; wallet?: Wallet; alert?: Alert }> {\n        const authCode = getParameterByName(\"code\");\n        const state = getParameterByName(\"state\");\n        if (state) {\n            const address = state.split(\",\")[0];\n            const wallet: Wallet = parseInt(state.split(\",\")[1], undefined);\n            const redirectURL = `${location.protocol}//${location.host}${location.pathname}`;\n            const data = {\n                address,\n                request: {\n                    grant_type: \"authorization_code\",\n                    code: authCode,\n                    redirect_uri: redirectURL,\n                    client_id: window.KYBER_KEY\n                }\n            };\n            try {\n                const response = await Axios.post(`${window.NETWORK.ingress}/kyber`, JSON.stringify(data));\n                const kyberUID = response.data.uid;\n                const lowerCaseAddresses = response.data.active_wallets.map((value: string) => value.toLowerCase());\n                if (!address) {\n                    throw new Error(\"Unable to retrieve address from Kyber response\");\n                }\n                if (response.data.kyc_status !== \"approved\") {\n                    throw new Error(`Received unexpected Kyber status: ${response.data.kyc_status}`);\n                }\n                if (lowerCaseAddresses.indexOf(address.toLowerCase()) === -1) {\n                    throw new Error(`Address ${address} not authorized with Kyber`);\n                }\n                return { verified: true, address, kyberUID, wallet };\n            } catch (error) {\n                let alert: Alert;\n                if (error.response && error.response.status === 401) {\n                    alert = new Alert({\n                        message: `Your Kyber account has not been verified with address ${address}. Please verify and check back later`\n                    });\n                } else {\n                    _captureInteractionException_(error, { description: \"Error in kyberVerification\", shownToUser: \"As alert\" });\n\n                    alert = new Alert({\n                        message: `Unable to retrieve account verification details. Please try again later`\n                    });\n                }\n\n                return { verified: false, alert };\n            }\n        } else {\n            _captureInteractionException_(new Error(\"Not enough information for Kyber KYC\"), {\n                description: \"Error caught in Home.kyberVerification\",\n                shownToUser: \"No\",\n            });\n\n            return { verified: false };\n        }\n    }\n\n    private async handleForwardLogin(address: string, wallet: Wallet): Promise<void> {\n        const { actions, sdk, url, seenMigrationMap } = this.props;\n        const walletDetails = WalletDetails.get(wallet, undefined);\n\n        if (!walletDetails) {\n            throw new Error(\"Logged in to an invalid wallet.\");\n        }\n\n        // tslint:disable-next-line:whitespace\n        const [provider,] = await walletDetails.getWeb3Provider(address);\n\n        if (await includesAddress(new Web3(provider), address)) {\n            const seenMigration = seenMigrationMap.get(address, false);\n            await actions.login(sdk, provider, address, seenMigration, { redirect: true, url });\n            actions.setAlert({\n                alert: new Alert({\n                    message: \"Successfully logged in via Kyber verification\",\n                    alertType: AlertType.Success\n                })\n            });\n            return;\n        }\n\n        throw new Error(\"Logged in to a non-verified address.\");\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    sdk: state.sdk.sdk,\n    address: state.trader.address,\n    url: state.trader.url,\n    seenMigrationMap: state.trader.seenMigrationMap,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        login,\n        storeWallet,\n        setAlert,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface HomeState {\n    checkingVerification: boolean;\n}\n\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(HomeClass);\n","import * as React from \"react\";\n\nimport { Loading } from \"../../components/Loading\";\n\n/**\n * LoggingOut is a page which shows a single loading spinner. This page is\n * displayed while the page is being refreshed on log-out.\n */\nexport const LoggingOut: React.StatelessComponent = () =>\n    <div className=\"logging-out\">\n        <Loading />\n    </div>;\n","import * as React from \"react\";\n\nimport { BalanceBanner } from \"../../components/BalanceBanner\";\nimport { ExecutedTrades } from \"../../components/ExecutedTrades\";\nimport { Header } from \"../../components/Header\";\nimport { MarketBanner } from \"../../components/MarketBanner\";\nimport { SubmittedTrades } from \"../../components/SubmittedTrades\";\nimport { _catch_ } from \"../ErrorBoundary\";\n\n/**\n * Orders is a page whose principal component is a list of the trader's orders\n * and a list of execution details\n */\nexport const Orders = () =>\n    <div className=\"orders\">\n        {_catch_(<MarketBanner />)}\n        {_catch_(<Header withMenu={true} />)}\n\n        {_catch_(<BalanceBanner />)}\n\n        <div className=\"content\">\n            {_catch_(<SubmittedTrades />)}\n            {_catch_(<ExecutedTrades />)}\n        </div>\n    </div>;\n","import * as React from \"react\";\n\nimport { connect } from \"react-redux\"; // Custom typings\n\nimport { ApplicationData, PopupDetails } from \"../reducers/types\";\nimport { _catch_ } from \"./ErrorBoundary\";\n\n/**\n * Popup is a visual component for displaying an arbitrary component in the\n * foreground with the rest of the page in the background\n */\nclass PopupClass extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n\n        if (this.props.popups.size === 0) {\n            return <></>;\n        }\n\n        return this.props.popups.valueSeq().map((popupDetails: PopupDetails, index: number) => {\n            const { popup, onCancel } = popupDetails;\n\n            return (\n                <div key={index} className=\"popup--outer\">\n                    <div role=\"none\" className=\"overlay\" onClick={this.onClickHandler} />\n                    {_catch_(popup, { popup: true, onCancel })}\n                </div>\n            );\n        });\n    }\n\n    public onClickHandler = () => {\n        const { dismissible, onCancel } = this.props.popups.last();\n        if (dismissible) {\n            onCancel();\n        }\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    popups: state.popup.stack,\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps> {\n}\n\nexport const Popup = connect(mapStateToProps)(PopupClass);\n","import { createStandardAction } from \"typesafe-actions\";\n\nexport const agreeToTerms = createStandardAction(\"AGREE_TO_TERMS\")<{ agreedToTerms: boolean }>();\n","import * as React from \"react\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { clearPopup, SetPopupPayload } from \"../../actions/popup/popupActions\";\nimport { agreeToTerms } from \"../../actions/trader/termsActions\";\n\n/**\n * TermsPopup is a popup component for displaying terms and conditions\n */\nclass TermsPopupClass extends React.Component<Props, State> {\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            scrollBottom: false,\n        };\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        const { scrollBottom } = this.state;\n        return (\n            <div className=\"popup terms\">\n                <h2>End User License Agreement</h2>\n                <div className=\"terms--content\" onScroll={this.handleScroll}>\n                    <p>Please read this EULA carefully, as it sets out the basis upon which we license the Software for use. Before you download the Software from our website, we will ask you to give your express agreement to the provisions of this EULA. By agreeing to be bound by this EULA, you further agree that any person you authorise to use the Software will comply with the provisions of this EULA.</p>\n                    <p><b>AGREEMENT</b></p>\n                    <ol>\n                        <li>\n                            Definitions\n                            <ol>\n                                <li>\n                                    Except to the extent expressly provided otherwise, in this EULA:<br />\n                                    &ldquo;Dappbase Ventures Limited&rdquo; means the company incorporated in the British Virgin Islands (company number 1959524), with its registered office at Vistra Corporate Services Centre, Wickhams Cay II, Road Town, Tortola, VG 1110, British Virgin Islands;<br />\n                                    &ldquo;Documentation&rdquo; means the documentation for the Software produced by the Licensor and delivered or made available by the Licensor to the User;<br />\n                                    &ldquo;Effective Date&rdquo; means the date upon which the User gives the User&apos;s express consent to this EULA, following the issue of this EULA by the Licensor;<br />\n                                    &ldquo;EULA&rdquo; means this end user licence agreement, including any amendments to this end user licence agreement from time to time;<br />\n                                    &ldquo;Fees&rdquo; means the fees imposed on the User by the Licensor as specified on the Licensor’s website at <a href=\"https://republicprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://republicprotocol.com/</a>;<br />\n                                    &ldquo;Force Majeure Event&rdquo; means an event, or a series of related events, that is outside the reasonable control of the party affected (including failures of the internet or any public telecommunications network, hacker attacks, denial of service attacks, virus or other malicious software attacks or infections, power failures, industrial disputes affecting any third party, changes to the law, disasters, explosions, fires, floods, riots, terrorist attacks and wars);<br />\n                                    &ldquo;Intellectual Property Rights&rdquo; means all intellectual property rights wherever in the world, whether registrable or unregistrable, registered or unregistered, including any application or right of application for such rights (and these &ldquo;intellectual property rights&rdquo; include copyright and related rights, database rights, confidential information, trade secrets, know-how, business names, trade names, trademarks, service marks, passing off rights, unfair competition rights, patents, petty patents, utility models, semi-conductor topography rights and rights in designs);<br />\n                                    &ldquo;Licensor&rdquo; means Dappbase Ventures Limited (the company that owns the businesses associated with &ldquo;RenEx&rdquo;, and the &ldquo;Republic Protocol&rdquo; trademark name), a company incorporated in the British Virgin Islands (company number 1959524), with its registered office at Vistra Corporate Services Centre, Wickhams Cay II, Road Town, Tortola, VG 1110, British Virgin Islands;<br />\n                                    &ldquo;Maintenance Services&rdquo; means the supply to the User and application to the Software of Updates and Upgrades;<br />\n                                    &ldquo;Minimum Term&rdquo; means, in respect of this EULA, the period of 12 months beginning on the Effective Date;<br />\n                                    &ldquo;Payments&rdquo; means the method for payment of fees imposed on the User by the Licensor as specified on the Licensor’s website at <a href=\"https://republicprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://republicprotocol.com/</a>;<br />\n                                    &ldquo;RenEx&rdquo; means the software platform provided by the Licensor that facilitates a decentralized dark pool exchange under the &ldquo;Republic Protocol&rdquo; trademark for the trading of digital assets;<br />\n                                    &ldquo;Republic Protocol&rdquo; means the trademark name under which the Licensor operates the its platform protocol for the building and operating of decentralized dark pool exchanges, including the RenEx dark pool exchange platform, including all related research, development and commercial activities;<br />\n                                    &ldquo;Services&rdquo; means any services that the Licensor provides to the User, or has an obligation to provide to the User, under this EULA;<br />\n                                    &ldquo;Software&rdquo; means software relating to the RenEx dark pool platform operated under the Republic Protocol trademark by the Licensor;<br />\n                                    &ldquo;Software Defect&rdquo; means a defect, error or bug in the Software having a material adverse effect on the appearance, operation, functionality or performance of the Software, but excluding any defect, error or bug caused by or arising as a result of:\n                                    <ol type=\"a\">\n                                        <li>any act or omission of the User or any person authorised by the User to use the Software;</li>\n                                        <li>any use of the Software contrary to the Documentation by the User or any person authorised by the User to use the Software;</li>\n                                        <li>a failure of the User to perform or observe any of its obligations in this EULA; and/or</li>\n                                        <li>an incompatibility between the Software and any other system, network, application, program, hardware or software not specified as compatible in the Software Specification;</li>\n                                    </ol>\n                                    &ldquo;Software Specification&rdquo; means the specification for the Software set out in the Documentation;<br />\n                                    &ldquo;Source Code&rdquo; means the Software code in human-readable form or any part of the Software code in human-readable form, including code compiled to create the Software or decompiled from the Software, but excluding interpreted code comprised in the Software;<br />\n                                    &ldquo;Support Services&rdquo; means support in relation to the use of the Software and the identification and resolution of errors in the Software, but shall not include the provision of training services whether in relation to the Software or otherwise;<br />\n                                    &ldquo;Term&rdquo; means the term of this EULA, commencing in accordance with Clause 3.1 and ending in accordance with Clause 3.2;<br />\n                                    &ldquo;Update&rdquo; means a hotfix, patch or minor version update to the Software;<br />\n                                    &ldquo;Upgrade&rdquo; means a major version upgrade of the Software;<br />\n                                    &ldquo;User&rdquo; means the person to whom the Licensor grants a right to use the Software under this EULA; and<br />\n                                    &ldquo;User Indemnity Event&rdquo; has the meaning given to it in Clause 13.1.\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            Credit\n                            <ol>\n                                <li>This document was created using a template from SEQ Legal (<a href=\"https://seqlegal.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://seqlegal.com</a>).</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Term\n                            <ol>\n                                <li>This EULA shall come into force upon the Effective Date.</li>\n                                <li>This EULA shall continue in force indefinitely, subject to termination in accordance with Clause 15 or any other provision of this EULA.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Licence\n                            <ol>\n                                <li>\n                                    The Licensor hereby grants to the User from the date of supply of the Software to the User until the end of the Term a worldwide, non-exclusive licence to:\n                                    <ol type=\"a\">\n                                        <li>install the Software; and</li>\n                                        <li>use the Software in accordance with the Documentation.</li>\n                                    </ol>\n                                    subject to the limitations and prohibitions set out and referred to in this Clause 4.\n                                </li>\n                                <li>The User may not sub-license and must not purport to sub-license any rights granted under Clause 4.1.</li>\n                                <li>\n                                    Save to the extent expressly permitted by this EULA or required by applicable law on a non-excludable basis, any licence granted under this Clause 4 shall be subject to the following prohibitions:\n                                    <ol type=\"a\">\n                                        <li>the User must not sell, resell, rent, lease, loan, supply, publish, distribute or redistribute the Software;</li>\n                                        <li>the User must not alter, edit or adapt the Software; and</li>\n                                        <li>the User must not decompile, de-obfuscate or reverse engineer, or attempt to decompile, de-obfuscate or reverse engineer, the Software.</li>\n                                    </ol>\n                                </li>\n                                <li>The User shall be responsible for the security of copies of the Software supplied to the User under this EULA (or created from such copies) and shall use all reasonable endeavours (including all reasonable security measures) to ensure that access to such copies is restricted to persons authorised to use them under this EULA.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Source Code\n                            <ol>\n                                <li>Nothing in this EULA shall give to the User or any other person any right to access or use the Source Code or constitute any licence of the Source Code.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Maintenance Services\n                            <ol>\n                                <li>The Licensor may provide Maintenance Services to the User at its absolute own discretion. The Licensor is under no obligation to the User to provide such Maintenance Services, except as it determines from time to time in line with any technical and/or operational needs it may identify.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Support Services\n                            <ol>\n                                <li>The Licensor may provide Support Services to the User at its absolute own discretion. The Licensor is under no obligation to the User to provide such Support Services, except as it determines from time to time in line with any technical and/or operational needs it may identify.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            No assignment of Intellectual Property Rights\n                            <ol>\n                                <li>Nothing in this EULA shall operate to assign or transfer any Intellectual Property Rights from the Licensor to the User, or from the User to the Licensor.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Fees\n                            <ol>\n                                <li>The User shall pay any relevant Fees that may be imposed by the Licensor for the use of its software, as specified on its website at <a href=\"https://republicprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://republicprotocol.com/</a></li>\n                                <li>All amounts stated in or in relation to this EULA are, unless the context requires otherwise, stated on its website at <a href=\"https://republicprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://republicprotocol.com/</a></li>\n                            </ol>\n                        </li>\n                        <li>\n                            Payments\n                            <ol>\n                                <li>Any relevant Payments will be deducted by the Licensor from the User for the use of its Software in accordance with the processes outlined on its website at <a href=\"https://republicprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://republicprotocol.com/</a></li>\n                            </ol>\n                        </li>\n                        <li>\n                            Warranties\n                            <ol>\n                                <li>The Licensor warrants to the User that it has the legal right and authority to enter into this EULA and to perform its obligations under this EULA.</li>\n                                <li>The User warrants to the Licensor that it has the legal right and authority to enter into this EULA and to perform its obligations under this EULA.</li>\n                                <li>All of the parties' warranties and representations in respect of the subject matter of this EULA are expressly set out in this EULA. To the maximum extent permitted by applicable law, no other warranties or representations concerning the subject matter of this EULA will be implied into this EULA or any related contract.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Acknowledgements and warranty limitations\n                            <ol>\n                                <li>The User acknowledges that complex software is never wholly free from defects, errors and bugs; and subject to the other provisions of this EULA, the Licensor gives no warranty or representation that the Software will be wholly free from defects, errors and bugs.</li>\n                                <li>The User acknowledges that complex software is never entirely free from security vulnerabilities; and subject to the other provisions of this EULA, the Licensor gives no warranty or representation that the Software will be entirely secure.</li>\n                                <li>The User acknowledges that the Software is only designed to be compatible with that software specified as compatible in the Software Specification; and the Licensor does not warrant or represent that the Software will be compatible with any other software.</li>\n                                <li>The User acknowledges that the Licensor will not provide any legal, financial, accounting or taxation advice under this EULA or in relation to the Software; and, except to the extent expressly provided otherwise in this EULA, the Licensor does not warrant or represent that the Software or the use of the Software by the User will not give rise to any legal liability on the part of the User or any other person.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Indemnities\n                            <ol>\n                                <li>The User shall indemnify and shall keep indemnified the Licensor against any and all liabilities, damages, losses, costs and expenses (including legal expenses and amounts reasonably paid in settlement of legal claims) suffered or incurred by the Licensor and arising directly or indirectly as a result of any breach by the User of this EULA (a \"User Indemnity Event\").</li>\n                                <li>\n                                    The Licensor must:\n                                    <ol type=\"a\">\n                                        <li>upon becoming aware of an actual or potential User Indemnity Event, notify the User;</li>\n                                        <li>provide to the User all such assistance as may be reasonably requested by the User in relation to the User Indemnity Event;</li>\n                                        <li>allow the User the exclusive conduct of all disputes, proceedings, negotiations and settlements with third parties relating to the User Indemnity Event; and</li>\n                                        <li>not admit liability to any third party in connection with the User Indemnity Event or settle any disputes or proceedings involving a third party and relating to the User Indemnity Event without the prior written consent of the User,</li>\n                                    </ol>\n                                    without prejudice to the User's obligations under Clause 13.1.\n                                </li>\n                                <li>The indemnity protection set out in this Clause 13 shall not be subject to the limitations and exclusions of liability set out in this EULA.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            Limitations and exclusions of liability\n                            <ol>\n                                <li>\n                                    Nothing in this EULA will:\n                                    <ol type=\"a\">\n                                        <li>limit or exclude any liability for death or personal injury resulting from negligence;</li>\n                                        <li>limit or exclude any liability for fraud or fraudulent misrepresentation;</li>\n                                        <li>limit any liabilities in any way that is not permitted under applicable law; or</li>\n                                        <li>exclude any liabilities that may not be excluded under applicable law,</li>\n                                    </ol>\n                                    and, if a party is a consumer, that party's statutory rights will not be excluded or limited by this EULA, except to the extent permitted by law.\n                                </li>\n                                <li>\n                                    The limitations and exclusions of liability set out in this Clause 14 and elsewhere in this EULA:\n                                    <ol type=\"a\">\n                                        <li>are subject to Clause 14.1; and</li>\n                                        <li>govern all liabilities arising under this EULA or relating to the subject matter of this EULA, including liabilities arising in contract, in tort (including negligence) and for breach of statutory duty, except to the extent expressly provided otherwise in this EULA.</li>\n                                    </ol>\n                                </li>\n                                <li>The Licensor will not be liable to the User in respect of any losses arising out of a Force Majeure Event.</li>\n                                <li>The Licensor will not be liable to the User in respect of any loss of profits or anticipated savings.</li>\n                                <li>The Licensor will not be liable to the User in respect of any loss of revenue or income.</li>\n                                <li>The Licensor will not be liable to the User in respect of any loss of business, contracts or opportunities.</li>\n                                <li>The Licensor will not be liable to the User in respect of any loss or corruption of any data, database or software.</li>\n                                <li>The Licensor will not be liable to the User in respect of any special, indirect or consequential loss or damage.</li>\n                                <li>\n                                    The liability of the Licensor to the User under this EULA in respect of any event or series of related events shall not exceed the greater of:\n                                    <ol type=\"a\">\n                                        <li>the total amount paid and payable by the User to the Licensor under this EULA.</li>\n                                    </ol>\n                                </li>\n                                <li>\n                                    The aggregate liability of the Licensor to the User under this EULA shall not exceed the greater of:\n                                    <ol type=\"a\">\n                                        <li>the total amount paid and payable by the User to the Licensor under this EULA.</li>\n                                    </ol>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            Termination\n                            <ol>\n                                <li>The Licensor may terminate this EULA at its absolute own discretion by giving to the User written notice of termination.</li>\n                                <li>The User may terminate this EULA by giving to the Licensor not less than 30 days' written notice of termination, expiring at the end of any calendar month.</li>\n                                <li>\n                                    Either party may terminate this EULA immediately by giving written notice of termination to the other party if:\n                                    <ol type=\"a\">\n                                        <li>the other party commits any material breach of this EULA, and the breach is not remediable;</li>\n                                        <li>the other party commits a material breach of this EULA, and the breach is remediable but the other party fails to remedy the breach within the period of 30 days following the giving of a written notice to the other party requiring the breach to be remedied; or</li>\n                                        <li>the other party persistently breaches this EULA (irrespective of whether such breaches collectively constitute a material breach).</li>\n                                    </ol>\n                                </li>\n                                <li>\n                                    Either party may terminate this EULA immediately by giving written notice of termination to the other party if:\n                                    <ol type=\"a\">\n                                        <li>\n                                            the other party:\n                                            <ol type=\"i\">\n                                                <li>is dissolved;</li>\n                                                <li>ceases to conduct all (or substantially all) of its business;</li>\n                                                <li>is or becomes unable to pay its debts as they fall due;</li>\n                                                <li>is or becomes insolvent or is declared insolvent; or</li>\n                                                <li>convenes a meeting or makes or proposes to make any arrangement or composition with its creditors;</li>\n                                            </ol>\n                                        </li>\n                                        <li>an administrator, administrative receiver, liquidator, receiver, trustee, manager or similar is appointed over any of the assets of the other party;</li>\n                                        <li>an order is made for the winding up of the other party, or the other party passes a resolution for its winding up (other than for the purpose of a solvent company reorganisation where the resulting entity will assume all the obligations of the other party under this EULA); or</li>\n                                        <li>\n                                            if that other party is an individual:\n                                            <ol type=\"i\">\n                                                <li>that other party dies;</li>\n                                                <li>as a result of illness or incapacity, that other party becomes incapable of managing his or her own affairs; or</li>\n                                                <li>that other party is the subject of a bankruptcy petition or order.</li>\n                                            </ol>\n                                        </li>\n                                    </ol>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            Effects of termination\n                            <ol>\n                                <li>Upon the termination of this EULA, all of the provisions of this EULA shall cease to have effect, save that the following provisions of this EULA shall survive and continue to have effect (in accordance with their express terms or otherwise indefinitely): Clauses 1, 4.1, 10.1, 13, 14, 16, 17 and 18.</li>\n                                <li>Except to the extent that this EULA expressly provides otherwise, the termination of this EULA shall not affect the accrued rights of either party.</li>\n                                <li>\n                                    Within 30 days following the termination of this EULA for any reason:\n                                    <ol type=\"a\">\n                                        <li>the User must pay to the Licensor any Charges in respect of Services provided to the User before the termination of this EULA and in respect of licences in effect before the termination of this EULA; and</li>\n                                        <li>the Licensor must refund to the User any Charges paid by the User to the Licensor in respect of Services that were to be (but are not) provided to the User after the termination of this EULA and in respect of licences that were to be (but are not) in effect after the termination of this EULA,</li>\n                                    </ol>\n                                    without prejudice to the parties' other legal rights.\n                                </li>\n                                <li>For the avoidance of doubt, the licences of the Software in this EULA shall terminate upon the termination of this EULA; and, accordingly, the User must immediately cease to use the Software upon the termination of this EULA.</li>\n                                <li>\n                                    Within 10 Business Days following the termination of this EULA, the User must:\n                                    <ol type=\"a\">\n                                        <li>return to the Licensor or dispose of as the Licensor may instruct all media in its possession or control containing the Software; and</li>\n                                        <li>irrevocably delete from all computer systems in its possession or control all copies of the Software.</li>\n                                    </ol>\n                                </li>\n                            </ol>\n                        </li>\n                        <li>\n                            General\n                            <ol>\n                                <li>No breach of any provision of this EULA shall be waived except with the express written consent of the party not in breach.</li>\n                                <li>If any provision of this EULA is determined by any court or other competent authority to be unlawful and/or unenforceable, the other provisions of this EULA will continue in effect. If any unlawful and/or unenforceable provision would be lawful or enforceable if part of it were deleted, that part will be deemed to be deleted, and the rest of the provision will continue in effect (unless that would contradict the clear intention of the parties, in which case the entirety of the relevant provision will be deemed to be deleted).</li>\n                                <li>This EULA may not be varied except by a written document signed by or on behalf of each of the parties.</li>\n                                <li>The User hereby agrees that the Licensor may assign the Licensor's contractual rights and obligations under this EULA to any successor to all or a substantial part of the business of the Licensor from time to time. The User must not without the prior written consent of the Licensor assign, transfer or otherwise deal with any of the User's contractual rights or obligations under this EULA.</li>\n                                <li>This EULA is made for the benefit of the parties, and is not intended to benefit any third party or be enforceable by any third party. The rights of the parties to terminate, rescind, or agree any amendment, waiver, variation or settlement under or relating to this EULA are not subject to the consent of any third party.</li>\n                                <li>Subject to Clause 14.1, this EULA shall constitute the entire agreement between the parties in relation to the subject matter of this EULA, and shall supersede all previous agreements, arrangements and understandings between the parties in respect of that subject matter.</li>\n                                <li>This EULA shall be governed by and construed in accordance with the laws of the British Virgin Isles.</li>\n                                <li>The courts of the British Virgin Isles shall have exclusive jurisdiction to adjudicate any dispute arising under or in connection with this EULA.</li>\n                            </ol>\n                        </li>\n                        <li>\n                            <ol>\n                                <li>\n                                    In this EULA, a reference to a statute or statutory provision includes a reference to:\n                                    <ol type=\"a\">\n                                        <li>that statute or statutory provision as modified, consolidated and/or re-enacted from time to time; and</li>\n                                        <li>any subordinate legislation made under that statute or statutory provision.</li>\n                                    </ol>\n                                </li>\n                                <li>The Clause headings do not affect the interpretation of this EULA.</li>\n                                <li>References in this EULA to \"calendar months\" are to the 12 named periods (January, February and so on) into which a year is divided.</li>\n                                <li>In this EULA, general words shall not be given a restrictive interpretation by reason of being preceded or followed by words indicating a particular class of acts, matters or things.</li>\n                            </ol>\n                        </li>\n                    </ol>\n                </div>\n                <p>By proceeding, you accept the above EULA agreement as well as the <a href=\"/terms-and-conditions.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Terms &amp; Conditions</a> and <a href=\"/privacy-policy.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>.</p>\n                <button disabled={!scrollBottom} onClick={this.handleAgreement}>\n                    <p>Accept &amp; Continue</p>\n                </button>\n            </div>\n        );\n    }\n\n    private readonly handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\n        const bottom = e.currentTarget.scrollHeight - e.currentTarget.scrollTop <= e.currentTarget.clientHeight + 30;\n        if (bottom) {\n            this.setState({ scrollBottom: true });\n        }\n    }\n\n    private readonly handleAgreement = (): void => {\n        this.props.actions.agreeToTerms({ agreedToTerms: true });\n        this.props.onDone();\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        agreeToTerms,\n        clearPopup,\n    }, dispatch)\n});\n\ninterface Props extends ConnectedReturnType<typeof mapDispatchToProps> {\n    onDone(): void;\n}\n\ninterface State {\n    scrollBottom: boolean;\n}\n\nconst TermsPopup = connect(null, mapDispatchToProps)(TermsPopupClass);\n\nexport const newTermsPopup = (uuid: Symbol, onCancelAction: () => void, onDoneAction: () => void): SetPopupPayload => ({\n    uuid,\n    popup: <TermsPopup onDone={onDoneAction} />,\n    dismissible: false,\n    onCancel: onCancelAction,\n});\n","import * as React from \"react\";\n\nimport Web3 from \"web3\";\n\nimport { connect, ConnectedReturnType } from \"react-redux\"; // Custom typings\nimport { Redirect, Route, RouteComponentProps, Router, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { setAlert } from \"../actions/alert/alertActions\";\nimport { clearPopup, setPopup } from \"../actions/popup/popupActions\";\nimport { login, logout, storeURL } from \"../actions/trader/accountActions\";\nimport { history } from \"../lib/history\";\nimport { getInjectedWeb3Provider } from \"../lib/wallets/web3browser\";\nimport { includesAddress } from \"../lib/web3\";\nimport { Alert, AlertType, ApplicationData } from \"../reducers/types\";\nimport { Alerts } from \"./Alerts\";\nimport { BackgroundTasks } from \"./BackgroundTasks\";\nimport { _catch_ } from \"./ErrorBoundary\";\nimport { Balances } from \"./pages/Balances\";\nimport { Exchange } from \"./pages/Exchange\";\nimport { Home } from \"./pages/Home\";\nimport { LoggingOut } from \"./pages/LoggingOut\";\nimport { Orders } from \"./pages/Orders\";\nimport { Popup } from \"./Popup\";\nimport { newTermsPopup } from \"./popups/TermsPopup\";\n\n// Scroll restoration based on https://reacttraining.com/react-router/web/guides/scroll-restoration\nconst ScrollToTop = withRouter(\n    // tslint:disable-next-line:no-any\n    class ScrollToTopWithoutRouter extends React.Component<RouteComponentProps<any>> {\n        // tslint:disable-next-line:no-any\n        public componentDidUpdate(prevProps: Readonly<RouteComponentProps<any>>): void {\n            if (this.props.location !== prevProps.location) {\n                window.scrollTo(0, 0);\n            }\n        }\n\n        /**\n         * The main render function.\n         * @dev Should have minimal computation, loops and anonymous functions.\n         */\n        public render(): React.ReactNode {\n            return <></>;\n        }\n    }\n);\n\n/**\n * App is the main visual component responsible for displaying different routes\n * and running background app loops\n */\nclass AppClass extends React.Component<Props, State> {\n\n    public constructor(props: Props, context: object) {\n        super(props, context);\n        this.state = {\n            checkingReLogin: false,\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const { agreedToTerms, sdk } = this.props;\n\n        this.setState({ checkingReLogin: true });\n\n        // Check if user was logged-in already\n        const loggedIn = await this.handleReLogin();\n        if (!loggedIn) {\n            await this.props.actions.logout(sdk, { reload: false });\n        }\n        this.setState({ checkingReLogin: false });\n\n        if (!agreedToTerms) {\n            const uuid = Symbol();\n            const close = () => this.props.actions.clearPopup({ uuid });\n            this.props.actions.setPopup(newTermsPopup(uuid, close, close));\n        }\n    }\n\n    /**\n     * withAccount restricts a component to rendering only if the user is logged\n     * in.\n     */\n    public withAccount = <T extends React.ComponentClass | React.StatelessComponent>(component: T): React.ComponentClass | React.StatelessComponent => {\n        const { address } = this.props;\n        const { checkingReLogin } = this.state;\n\n        // Show a loading spinner if retrieving the web3 instance is taking a\n        // while (for example, when requesting MetaMask access)\n        if (checkingReLogin) {\n            return () => <LoggingOut />;\n        }\n\n        if (!address) {\n            const pathname = window.location.pathname;\n            if (pathname !== \"/\" && pathname !== \"/loading\") {\n                this.props.actions.setAlert({\n                    alert: new Alert({ message: \"You are not logged in. Please select your wallet to continue\", alertType: AlertType.Warning })\n                });\n                this.props.actions.storeURL(pathname);\n            }\n\n            return () => <Redirect to=\"/\" />;\n        }\n\n        return component;\n    }\n\n    /**\n     * The main render function.\n     * @dev Should have minimal computation, loops and anonymous functions.\n     */\n    public render(): React.ReactNode {\n        return (\n            <Router history={history}>\n                <div className=\"app\">\n                    {_catch_(<BackgroundTasks />)}\n                    <ScrollToTop />\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/exchange\" component={this.withAccount(Exchange)} />\n                    <Route path=\"/orders\" component={this.withAccount(Orders)} />\n                    <Route path=\"/balances\" component={this.withAccount(Balances)} />\n                    <Route path=\"/loading\" component={LoggingOut} />\n                    {_catch_(<Alerts />)}\n                    {_catch_(<Popup />)}\n                </div>\n            </Router>\n        );\n    }\n\n    /**\n     * handleReLogin checks if a user's previous logged-in session can be\n     * recovered. If it can't such as for keystore wallets and hardware wallets,\n     * it logs the user out.\n     */\n    private readonly handleReLogin = async (): Promise<boolean> => {\n        const { address, actions, sdk, url, seenMigrationMap } = this.props;\n        if (address) {\n            let provider;\n            try {\n                provider = await getInjectedWeb3Provider();\n            } catch (error) {\n                // Injected Web3 request was denied\n                return false;\n            }\n\n            const included = await includesAddress(new Web3(provider), address);\n            if (included) {\n                // These are repeated in login, but the page will log-out if the\n                // address is not available immediately\n                sdk.updateProvider(provider);\n                sdk.setAddress(address);\n\n                const seenMigration = seenMigrationMap.get(address, false);\n\n                await actions.login(sdk, provider, address, seenMigration, { redirect: false, url });\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nconst mapStateToProps = (state: ApplicationData) => ({\n    address: state.trader.address,\n    agreedToTerms: state.trader.agreedToTerms,\n    seenMigrationMap: state.trader.seenMigrationMap,\n    sdk: state.sdk.sdk,\n    url: state.trader.url,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        clearPopup,\n        login,\n        logout,\n        setAlert,\n        setPopup,\n        storeURL,\n    }, dispatch)\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ConnectedReturnType<typeof mapDispatchToProps> {\n}\n\ninterface State {\n    /**\n     * When the page is first loaded, the component checks the user\n     * can be logged in automatically. While this is happening, we show a\n     * spinner based on if checkingReLogin is true or not.\n     */\n    checkingReLogin: boolean;\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppClass);\n","import { combineReducers } from \"redux\";\n\nimport { alertReducer } from \"./alert/alertReducer\";\nimport { balancesReducer } from \"./balances/balancesReducer\";\nimport { inputsReducer } from \"./inputs/inputsReducer\";\nimport { marketReducer } from \"./market/marketReducer\";\nimport { hiddenBookReducer } from \"./orderbook/hiddenBookReducer\";\nimport { traderBookReducer } from \"./orderbook/traderBookReducer\";\nimport { popupReducer } from \"./popup/popupReducer\";\nimport { sdkReducer } from \"./sdk/sdkReducer\";\nimport { traderReducer } from \"./trader/traderReducer\";\n\nimport { ApplicationData } from \"./types\";\n\nexport const rootReducer = combineReducers<ApplicationData>({\n    alert: alertReducer,\n    balanceHistory: balancesReducer,\n    hiddenBook: hiddenBookReducer,\n    inputs: inputsReducer,\n    marketPrices: marketReducer,\n    popup: popupReducer,\n    traderBook: traderBookReducer,\n    trader: traderReducer,\n    sdk: sdkReducer,\n});\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as alertActions from \"../../actions/alert/alertActions\";\nimport * as pendingAlertActions from \"../../actions/alert/pendingAlertActions\";\n\nimport { Alert, AlertData } from \"../../reducers/types\";\n\ntype AlertAction = ActionType<typeof alertActions>;\ntype PendingAlertAction = ActionType<typeof pendingAlertActions>;\n\nexport const alertReducer = (state: AlertData = new AlertData(), action: AlertAction | PendingAlertAction) => {\n    switch (action.type) {\n        case getType(alertActions.setAlert):\n            return state.set(\"alert\", action.payload.alert);\n        case getType(alertActions.clearAlert):\n            return state.set(\"alert\", new Alert({ message: \"\" }));\n        case getType(pendingAlertActions.addPendingAlert):\n            const { id, method } = action.payload;\n            return state.set(\"pendingAlerts\", state.pendingAlerts.set(id, method));\n        case getType(pendingAlertActions.removePendingAlerts):\n            const { ids } = action.payload;\n            let pendingAlerts = state.pendingAlerts;\n            for (const alertID of ids) {\n                pendingAlerts = pendingAlerts.delete(alertID);\n            }\n\n            return state.set(\"pendingAlerts\", pendingAlerts);\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as balancesActions from \"../../actions/balances/balancesActions\";\n\nimport { BalanceHistory } from \"../../reducers/types\";\n\ntype BalancesAction = ActionType<typeof balancesActions>;\n\nexport const balancesReducer = (state: BalanceHistory = new BalanceHistory(), action: BalancesAction) => {\n    switch (action.type) {\n        case getType(balancesActions.storeBalanceActions):\n            let balanceHistory = state.balanceHistory;\n\n            action.payload.map((balanceAction) => {\n                balanceHistory = balanceHistory.set(balanceAction.txHash, balanceAction);\n            });\n\n            // updateIndex is incremented to ensure that the BalanceHistory is\n            // re-rendered.\n            return state\n                .set(\"balanceHistory\", balanceHistory)\n                .set(\"updateIndex\", state.updateIndex + 1);\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as hiddenBookActions from \"../../actions/orderbook/hiddenBookActions\";\n\nimport { HiddenBookData } from \"../../reducers/types\";\n\ntype HiddenBookAction = ActionType<typeof hiddenBookActions>;\n\nexport const hiddenBookReducer = (state: HiddenBookData = new HiddenBookData(), action: HiddenBookAction) => {\n    switch (action.type) {\n        case getType(hiddenBookActions.setHiddenOrders):\n            return state.set(\"hiddenOrders\", action.payload.hiddenOrders);\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as inputsActions from \"../../actions/inputs/inputsActions\";\n\nimport { InputsData } from \"../../reducers/types\";\n\ntype InputsAction = ActionType<typeof inputsActions>;\n\nexport const inputsReducer = (state: InputsData = new InputsData(), action: InputsAction) => {\n    switch (action.type) {\n        case getType(inputsActions.setMarket):\n            return state.set(\"market\", action.payload.market);\n        case getType(inputsActions.setOrder):\n            return state.set(\"orderInputs\", action.payload.orderInputs);\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as marketActions from \"../../actions/market/marketActions\";\n\nimport { MarketPrice, MarketPriceData } from \"../../reducers/types\";\n\ntype MarketAction = ActionType<typeof marketActions>;\n\nexport const marketReducer = (state: MarketPriceData = new MarketPriceData(), action: MarketAction) => {\n    switch (action.type) {\n        case getType(marketActions.updatePrices):\n            const { price, percentChange } = action.payload;\n            const marketPrice: MarketPrice = { price, percentChange };\n            return state.set(\"marketPrices\", state.marketPrices.set(action.payload.pair, marketPrice));\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as popupActions from \"../../actions/popup/popupActions\";\n\nimport { PopupData, PopupDetails } from \"../../reducers/types\";\n\ntype PopupAction = ActionType<typeof popupActions>;\n\nexport const popupReducer = (state: PopupData = new PopupData(), action: PopupAction) => {\n    switch (action.type) {\n        case getType(popupActions.setPopup):\n            document.documentElement.classList.add(\"noscroll\");\n\n            const stackItem: PopupDetails = {\n                popup: action.payload.popup,\n                dismissible: action.payload.dismissible !== false,\n                onCancel: action.payload.onCancel,\n            };\n\n            return state.set(\"stack\", state.stack.set(action.payload.uuid, stackItem));\n        case getType(popupActions.clearPopup):\n            const newStack = state.stack.remove(action.payload.uuid);\n            if (newStack.size === 0) {\n                document.documentElement.classList.remove(\"noscroll\");\n            }\n            return state.set(\"stack\", newStack);\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as traderBookActions from \"../../actions/orderbook/traderBookActions\";\n\nimport { TraderBookData } from \"../../reducers/types\";\nimport { TraderOrderRecord } from \"../../reducers/typesSdk\";\n\ntype TraderBookAction = ActionType<typeof traderBookActions>;\n\nexport const traderBookReducer = (state: TraderBookData = new TraderBookData(), action: TraderBookAction) => {\n    switch (action.type) {\n        case getType(traderBookActions.addOrders):\n            const toAdd = action.payload;\n            let traderOrders = state.traderOrders;\n            toAdd.map((traderOrder: TraderOrderRecord) => {\n                traderOrders = traderOrders.set(traderOrder.id, traderOrder);\n            });\n            return state.set(\"traderOrders\", traderOrders);\n        case getType(traderBookActions.updateOrderStatus):\n            let order = state.traderOrders.get(action.payload.orderID, undefined);\n            if (!order) {\n                return state;\n            }\n\n            // Note: Typescript complains without the branching,\n            // despite the two branches being the same.\n            if (order.swapServer) {\n                order = order.set(\"status\", action.payload.orderStatus);\n            } else {\n                order = order.set(\"status\", action.payload.orderStatus);\n            }\n            return state.set(\"traderOrders\", state.traderOrders.set(order.id, order));\n        case getType(traderBookActions.updateOrderCancelling):\n            return state.set(\"cancelling\", state.cancelling.set(action.payload.orderID, action.payload.orderCancelling));\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as atomicActions from \"../../actions/settlement/atomicActions\";\nimport * as accountActions from \"../../actions/trader/accountActions\";\nimport * as balanceActions from \"../../actions/trader/balanceActions\";\nimport * as migrationActions from \"../../actions/trader/migrationActions\";\nimport * as termsActions from \"../../actions/trader/termsActions\";\nimport * as walletActions from \"../../actions/trader/walletActions\";\n\nimport { TraderData } from \"../../reducers/types\";\n\ntype AccountAction = ActionType<typeof accountActions>;\ntype TermsAction = ActionType<typeof termsActions>;\ntype MigrationActions = ActionType<typeof migrationActions>;\ntype BalanceAction = ActionType<typeof balanceActions>;\ntype WalletAction = ActionType<typeof walletActions>;\ntype AtomicAction = ActionType<typeof atomicActions>;\n\nexport const traderReducer = (state: TraderData = new TraderData(), action: AccountAction | TermsAction | MigrationActions | BalanceAction | WalletAction | AtomicAction) => {\n    switch (action.type) {\n        case getType(accountActions.storeAddress):\n            return state.set(\"address\", action.payload);\n        case getType(accountActions.storeURL):\n            return state.set(\"url\", action.payload);\n\n        // Legacy flags for migrating\n        case getType(accountActions.setNoLegacyBalances):\n            return state.noLegacyBalances === null ? state.set(\"noLegacyBalances\", action.payload) : state;\n        case getType(accountActions.setNoLegacyOrders):\n            return state.noLegacyOrders === null ? state.set(\"noLegacyOrders\", action.payload) : state;\n\n        // Legacy balances\n        case getType(balanceActions.updateLegacyBalance):\n            return state.set(\"legacyBalances\", state.legacyBalances.set(action.payload.token, action.payload.balance));\n        case getType(balanceActions.updateLegacyBalances):\n            return state.set(\"legacyBalances\", action.payload.balances);\n\n        // Legacy usable balances\n        case getType(balanceActions.updateUsableLegacyBalance):\n            return state.set(\"usableLegacyBalances\", state.usableLegacyBalances.set(action.payload.token, action.payload.usableBalance));\n        case getType(balanceActions.updateUsableLegacyBalances):\n            return state.set(\"usableLegacyBalances\", action.payload.usableBalances);\n\n        // Account balance\n        case getType(balanceActions.updateAccountLegacyBalance):\n            return state.set(\"accountLegacyBalances\", state.accountLegacyBalances.set(action.payload.token, action.payload.accountBalance));\n        case getType(balanceActions.updateAccountLegacyBalances):\n            return state.set(\"accountLegacyBalances\", action.payload.accountBalances);\n\n        // Usable Atomic Action\n        case getType(balanceActions.updateUsableAtomicBalances):\n            return state.set(\"usableAtomicBalances\", action.payload.usableAtomicBalances);\n\n        // Atomic Balance\n        case getType(balanceActions.updateAtomicBalances):\n            return state.set(\"atomicBalances\", action.payload.atomicBalances);\n        case getType(balanceActions.updateAtomicAddresses):\n            return state.set(\"atomicAddresses\", action.payload.atomicAddresses);\n        case getType(atomicActions.updateAtomConnectionStatus):\n            return state.set(\"atomConnectionStatus\", action.payload.atomConnectionStatus);\n\n        // Terms\n        case getType(termsActions.agreeToTerms):\n            return state.set(\"agreedToTerms\", action.payload.agreedToTerms);\n\n        // Migration\n        case getType(migrationActions.seenMigration):\n            return state.set(\"seenMigrationMap\", state.seenMigrationMap.set(action.payload.address, action.payload.seenMigration));\n\n        // Wallet\n        case getType(walletActions.storeWallet):\n            return state.set(\"wallet\", action.payload.wallet);\n\n        default:\n            return state;\n    }\n};\n","import { ActionType, getType } from \"typesafe-actions\";\n\nimport * as sdkActions from \"../../actions/sdk/sdkActions\";\n\nimport { SDKData } from \"../../reducers/types\";\n\ntype SDKAction = ActionType<typeof sdkActions>;\n\nexport const sdkReducer = (state: SDKData = new SDKData(), action: SDKAction) => {\n    switch (action.type) {\n        case getType(sdkActions.storeSDK):\n            console.assert(action.payload.sdk !== undefined);\n            window.sdk = action.payload.sdk;\n            return state.set(\"sdk\", action.payload.sdk);\n        case getType(sdkActions.storeSDKData):\n            return state\n                .set(\"supportedTokens\", action.payload.supportedTokens)\n                .set(\"supportedAtomicTokens\", action.payload.supportedAtomicTokens)\n                .set(\"darknodeFeePercent\", action.payload.darknodeFeePercent)\n                .set(\"wrappingFeePercent\", action.payload.wrappingFeePercent)\n                .set(\"minEthTradeVolume\", action.payload.minEthTradeVolume)\n                .set(\"supportedMarkets\", action.payload.supportedMarkets);\n        default:\n            return state;\n    }\n};\n","import storage from \"redux-persist/lib/storage\";\n\nimport { createTransform, PersistConfig } from \"redux-persist\";\n\nimport { _captureBackgroundException_ } from \"../lib/errors\";\nimport { ApplicationData, TraderData } from \"../reducers/types\";\n\n// Local Storage:\n\nconst traderTransform = createTransform<TraderData, string>(\n    (inboundState: TraderData, key: string): string => {\n        try {\n            return inboundState.serialize();\n        } catch (error) {\n            console.error(`Error serializing ${key} (${JSON.stringify(inboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error serializing local storage\" });\n            throw error;\n        }\n    },\n    (outboundState: string, key: string): TraderData => {\n        try {\n            return new TraderData().deserialize(outboundState);\n        } catch (error) {\n            console.error(`Error deserializing ${key} (${JSON.stringify(outboundState)}): ${error}`);\n            _captureBackgroundException_(error, { description: \"Error deserializing local storage\" });\n            throw error;\n        }\n    },\n    { whitelist: [\"trader\"] as Array<keyof ApplicationData>, },\n);\n\nexport const persistConfig: PersistConfig = {\n    storage,\n    key: \"root\",\n    whitelist: [\"trader\"] as Array<keyof ApplicationData>,\n    transforms: [traderTransform],\n};\n","import thunk from \"redux-thunk\";\n\nimport { Action, applyMiddleware, createStore, Middleware, Reducer } from \"redux\";\nimport { PersistConfig, persistReducer } from \"redux-persist\";\n\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport { persistConfig } from \"./persistConfig\";\n\nconst middlewares: Middleware[] = [\n    thunk,\n];\n\n// Log Redux actions (only in development)\nif (process.env.NODE_ENV === \"development\") {\n    // middlewares.push(createLogger({ collapsed: true }));\n}\n\n// Workaround createStore not liking type of persistReducer\nconst typedPersistReducer = <S, A extends Action>(config: PersistConfig, reducer: Reducer<S, A>) => {\n    return persistReducer<S | undefined, A>(\n        config,\n        reducer\n    );\n};\n\nconst persistedReducer = typedPersistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => createStore(\n    persistedReducer,\n    applyMiddleware(...middlewares),\n);\n","import * as Sentry from \"@sentry/browser\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport RenExSDK, { NetworkData } from \"@renex/renex\";\nimport Web3 from \"web3\";\n\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { HttpProvider } from \"web3/providers\";\n\nimport { App } from \"./components/App\";\nimport { _catch_ } from \"./components/ErrorBoundary\";\nimport { configureStore } from \"./store/configureStore\";\n\nexport const store = configureStore();\n\nimport \"./index.scss\";\n\ninterface EthereumProvider extends HttpProvider {\n    enable(): Promise<void>;\n}\n\ndeclare global {\n    interface Window {\n        web3: Web3 | undefined;\n        ethereum: EthereumProvider | undefined;\n        API: string;\n        NETWORK: NetworkData;\n        INFURA_KEY: string;\n        WYRE_KEY: string;\n        KYBER_KEY: string;\n        SENTRY_DSN: string;\n        sdk: RenExSDK;\n        RENEX_VERSION: string;\n    }\n}\n\n// Initialize Sentry error logging\nSentry.init({\n    dsn: window.SENTRY_DSN,\n    release: window.RENEX_VERSION,\n    environment: (process.env.NODE_ENV === \"development\") ? \"local\" : window.NETWORK.network,\n});\n\nSentry.configureScope((scope) => {\n    scope.setExtra(\"loggedIn\", false);\n\n    // We set this to false when logging to Sentry explicitly.\n    scope.setExtra(\"caught\", false);\n});\n\nReactDOM.render(\n    _catch_(<Provider store={store}>\n        <PersistGate loading={null} persistor={persistStore(store)}>\n            <App />\n        </PersistGate>\n    </Provider>),\n    document.getElementById(\"root\") as HTMLElement\n);\n","var map = {\n\t\"./btc.svg\": 935,\n\t\"./dgx.svg\": 936,\n\t\"./eth.svg\": 937,\n\t\"./omg.svg\": 938,\n\t\"./ren.svg\": 939,\n\t\"./tusd.svg\": 940,\n\t\"./wbtc.png\": 941,\n\t\"./wbtc.svg\": 942,\n\t\"./zrx.svg\": 943\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82;","module.exports = __webpack_public_path__ + \"static/media/btc.dd58cd55.svg\";","module.exports = __webpack_public_path__ + \"static/media/dgx.09966c0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth.ac24c334.svg\";","module.exports = __webpack_public_path__ + \"static/media/omg.cbd0e5e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ren.05a00b3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tusd.c377a1ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/wbtc.a81a823b.png\";","module.exports = __webpack_public_path__ + \"static/media/wbtc.8122efc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/zrx.7ede344d.svg\";"],"sourceRoot":""}